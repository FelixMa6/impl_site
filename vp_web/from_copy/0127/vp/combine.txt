Felix: The file is add_sql_client.py, num is 1 

#!/cad/tools/Python-3.5.2/bin/python3
import os
import sys
from socket import socket,AF_INET,SOCK_STREAM
 
from optparse import OptionParser


if __name__ == "__main__":
    parser = OptionParser()
    parser.add_option('-c', action='store', type='string', dest='input_file', help='config file')
    (options, args) = parser.parse_args()
    ini_path = os.path.abspath(options.input_file)
    sendout = bytes(ini_path,encoding="utf8")


    s = socket(AF_INET,SOCK_STREAM)
    s.connect(('ct1507',17600))
    s.send(sendout)
    (output,status) = s.recvfrom(8192)
    output = str(output,encoding="utf8")
    if output=="":
        print("info_error please debug on server")
    elif output == b"No such INI File":
        print(output)
    else:
        print(output)

    
Felix: The file is add_sql_server.py, num is 2 

#!/cad/tools/Python-3.5.2/bin/python3
import os
import socket
import sys,re
os.chdir(sys.path[0])
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "vrg_site.settings")
import django
django.setup()

from configparser import ConfigParser
from socketserver import BaseRequestHandler,ThreadingTCPServer
from vrg_app.models import VectorIssue,Category,DailyReport
from django.contrib.auth.models import User
from queue import Queue
import logger
from django.core.mail import EmailMessage
import socket
from django.urls import reverse




def mail_create(vector):
    vector_path = socket.gethostname() + ":15600" + reverse('vrg_app:vector',args=(vector.id,))
    subject = "[vector %d] %s" % (vector.id,vector.vector)
    message = """
        <html>
        <head>hi {name} ! You have got a new bug{id}</head>
        <body>
            <table border="1" cellspacing="0" cellpadding="8">
            <tr><td><TH align=right>category:</td><td>{category}</td></tr>
            <tr><td><TH align=right>content:</td><td>{content}</td></tr>
            </table>
            <p>Please login VRG web for more details</p>
        </body>
        </html>
    """.format(id=vector.id,name=vector.bugowner,content=vector.content,category=vector.category)
    tos = list(set([vector.bugowner.email,'marshallliu@zhaoxin.com']))
    msg = EmailMessage(subject,message,'marshallliu@zhaoxin.com',tos)
    msg.content_subtype='html'
    msg.send()



def saveCategory(type):
    admin = User.objects.get(username='marshall')
    l2_sva_fail = re.compile("l2-sva-fail")
    if l2_sva_fail.search(type) is not None:
        type = 'l2-sva-fail'
    if Category.objects.filter(title=type) :
        category = Category.objects.filter(title=type)[0]
    else:
        category = Category(title=type,owner=admin)
    category.save(flag=True)
    return category

def add_fail(cfg):
    status = cfg.get('vector','status')
    if status != 'FAIL':
        return None
    name = cfg.get('vector','name')
    content = cfg.get('fail','info')
    issue = VectorIssue(vector=name,content=content)

    issue.project = cfg.get('vector','project')

    issue.src_path  = cfg.get('path','vector')
    issue.wave_path = cfg.get('path','waveform')
    issue.log_path  = cfg.get('path','log')

    issue.design_git      = cfg.get('git','design_version')
    issue.env_git         = cfg.get('git','env_version')
    issue.design_git_date = cfg.get('git','design_date')
    issue.env_git_date    = cfg.get('git','env_date')

    type = cfg.get('fail','type')
    issue.category = saveCategory(type)
    owner = issue.category.owner
    issue.bugowner = owner

    issue.save()
    mail_create(issue)
    return issue


def add_report(cfg,cfg_file):
    report = DailyReport.objects.last()
    if report is None:
        report = DailyReport()
    elif not report.is_same_work_day():
        report = DailyReport()
    status = cfg.get('vector','status')
    if status == 'FAIL':
        report.add_fail()
    else:
        if(cfg.getint('transactions','total_request')==0):
            raise Exception("pass vector total request cannot be 0 : %s" % cfg_file)
        report.add_pass()

    items = [
            'total_request',
            'c2m',
            'c2p',
            'p2c',
            'c2p_io',
            'c2p_mem',
            'c2p_special',
            'jtag',
            'hotwire',
            'fsbc_request',
            'fsbc_trigger',
            'interrupt_ipi',
            'interrupt_msi',
            'interrupt_sb',
            ]
    for item in items:
        sum = getattr(report,item) + cfg.getint('transactions',item)
        setattr(report,item,sum)

    report.save()
    return report

def cfg_info(cfg_file):
    print("add info : %s" % cfg_file)
    cfg = ConfigParser()
    cfg.read(cfg_file)

    fail = add_fail(cfg)
    report = add_report(cfg,cfg_file)
    output = []
    if fail is not None:
        output.append(str(fail))
    output.append(str(report))
    return "\n".join(output)

class InfoHandler(BaseRequestHandler):
    def handle(self):
        print('Got connection from', self.client_address)
        while(True):
            msg = self.request.recv(8192)
            if not msg:
                break
            cfg_file = str(msg,encoding='utf8')
            if not os.path.exists(cfg_file):
                error = "db-add-fail: No such INI File: %s" % cfg_file
                logger.log_info(error)
                self.request.send(bytes(error,encoding="utf8"))
                print(error)
                continue
            try:
                output = bytes(cfg_info(cfg_file),encoding="utf8")
                self.request.send(output)
                logger.log_info("success add %s" % cfg_file)
            except Exception as e:    
                error = "db-add-fail: " + str(e)
                print(error)
                logger.log_info(error)
                logger.log_debug(cfg_file)
                self.request.send(bytes(error,encoding="utf8"))
        

if __name__=='__main__':
    serv = ThreadingTCPServer(('',17600),InfoHandler)
    serv.serve_forever()


Felix: The file is auto_report.py, num is 3 

import os
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "vrg_site.settings")

import django
django.setup()

from vrg_app.models import VectorIssue,Category,DailyReport
from django.contrib.auth.models import User

import re
vector_re = re.compile('(vrg_[^:]+)\s*:\s*(.+)')

dir_t  = '/{local}/cherylx_vrg/civ_soc_vrg_{env}/'
log_t  = '{dir}sim/log/{vector}.log'
fsdb_t = '{dir}sim/waveform/{vector}.fsdb'
vec_t = '{dir}regression/{vector}.src'

def get_simdir(vector):
    components = vector.split('_')
    host  = components[1]
    env   = components[2]
    local = re.sub('ct','c',host)
    return dir_t.format(local=local,env=env)    

def saveCategory(type):
    admin = User.objects.get(username='marshall')
    if Category.objects.filter(title=type) :
        category = Category.objects.filter(title=type)[0]
    else:
        category = Category(title=type,owner=admin)
    category.save()
    return category

def updateReport(isPass):
    report = DailyReport.objects.last()
    if report is None:
        report = DailyReport()
        report.save()
    if not report.is_same_work_day():
        report = DailyReport()
        report.save()
    if isPass:
        report.add_pass()
    else:
        report.add_fail()
    report.save()


def handleLine(line):
    result = vector_re.search(line)
    if result is None:
        return 'Empty'
    if result.group(2).startswith('PASS'):
        updateReport(True)
        return 'Pass'

    vector = result.group(1)
    temp = result.group(2).split(':')
    category = saveCategory(temp[1].strip())
    content = temp[2].strip()
    owner = category.owner
    location = get_simdir(vector)

    log_path = log_t.format(dir=location,vector=vector)
    wave_path = fsdb_t.format(dir=location,vector=vector)
    src_path = vec_t.format(dir=location,vector=vector)

    if VectorIssue.objects.filter(vector=vector) :
        return VectorIssue.objects.filter(vector=vector)[0]

    issue = VectorIssue(
	vector=vector,
	content=content,
	log_path=log_path,
	wave_path=wave_path,
	src_path=src_path,
	bugowner= owner,
	category=category,
	)
    issue.save()
    updateReport(False)
    return issue

if __name__ == '__main__':
    master_list = '/tmp_space/cpu/users/cherylx/vrg_result/master_summary.log'    
    for line in open(master_list):
        print(handleLine(line))


#category = saveCategory('l2-sva-fail')
#
#
#issue = VectorIssue(
#	vector='lsw',
#	content='hello vrg system',
#	location='xsxs',
#	bugowner= User.objects.get(username='marshall'),
#	category=category,
#	)
#issue.save()
Felix: The file is forms.py, num is 4 

import datetime
import operator
import urllib

from django import forms
from django.db.models.query_utils import Q
from django.forms.models import modelform_factory
from django.template.defaultfilters import filesizeformat
from django.utils.text import capfirst, get_text_list, smart_split

from forum import app_settings
from forum.models import Forum, ForumProfile, Post, Search, Section, Topic

# Try to import PIL in either of the two ways it can end up installed.
try:
    from PIL import ImageFile as PILImageFile
except ImportError:
    import ImageFile as PILImageFile

class AddSectionForm(forms.Form):
    """
    Form for adding a new Section - takes and existing Section it should
    be inserted before.
    """
    name    = forms.CharField(max_length=100)
    section = forms.ChoiceField(required=False)

    def __init__(self, sections, *args, **kwargs):
        super(AddSectionForm, self).__init__(*args, **kwargs)
        self.sections = sections
        self.fields['section'].choices = [('', '----------')] + \
            [(section.id, section.name) for section in sections]

    def clean_name(self):
        """Validates that the section name is unique."""
        for section in self.sections:
            if self.cleaned_data['name'] == section.name:
                raise forms.ValidationError('A Section with this name already exists.')
        return self.cleaned_data['name']

class EditSectionForm(forms.ModelForm):
    """Form for editing a Section."""
    class Meta:
        model = Section
        fields = ('name',)

    def clean_name(self):
        """Validates that the section name is unique if it has changed."""
        if self.fields['name'].initial != self.cleaned_data['name']:
            try:
                Section.objects.get(name=self.cleaned_data['name'])
                raise forms.ValidationError('A Section with this name already exists.')
            except Section.DoesNotExist:
                pass
        return self.cleaned_data['name']

class AddForumForm(forms.Form):
    """
    Form for adding a new Forum - takes an existing Forum it should be
    inserted before.
    """
    name        = forms.CharField(max_length=100)
    description = forms.CharField(max_length=100, required=False, widget=forms.Textarea())
    forum       = forms.ChoiceField(required=False)

    def __init__(self, forums, *args, **kwargs):
        super(AddForumForm, self).__init__(*args, **kwargs)
        self.fields['forum'].choices = [('', '----------')] + \
            [(forum.id, forum.name) for forum in forums]

class EditForumForm(forms.ModelForm):
    """Form for editing a Forum."""
    class Meta:
        model = Forum
        fields = ('name', 'description')

def topic_formfield_callback(field, **kwargs):
    """
    Callback for Post form field creation.

    Customises the size of the widgets used to edit topic details.
    """
    if field.name in ['title', 'description']:
        formfield = field.formfield(**kwargs)
        formfield.widget.attrs['size'] = 50
        return formfield
    else:
        return field.formfield(**kwargs)

class AddTopicForm(forms.ModelForm):
    """Form for adding a new Topic."""
    formfield_callback = topic_formfield_callback

    class Meta:
        model = Topic
        fields = ('title', 'description')

class EditTopicForm(forms.ModelForm):
    """Form for editing a Topic."""
    formfield_callback = topic_formfield_callback

    class Meta:
        model = Topic
        fields = ('title', 'description', 'pinned', 'locked', 'hidden')

    def __init__(self, moderate, *args, **kwargs):
        super(EditTopicForm, self).__init__(*args, **kwargs)
        if not moderate:
            del self.fields['pinned']
            del self.fields['locked']
            del self.fields['hidden']

def post_formfield_callback(field, **kwargs):
    """
    Callback for Post form field creation.

    Customises the widget used to edit posts.
    """
    if field.name == 'body':
        formfield = field.formfield(**kwargs)
        formfield.widget.attrs['rows'] = 14
        formfield.widget.attrs['cols'] = 70
        return formfield
    else:
        return field.formfield(**kwargs)

class TopicPostForm(forms.ModelForm):
    """Form for the initial Post in a new Topic."""
    formfield_callback = post_formfield_callback

    class Meta:
        model = Post
        fields = ('body', 'emoticons')

class ReplyForm(forms.ModelForm):
    """Form for a reply Post."""
    formfield_callback = post_formfield_callback

    class Meta:
        model = Post
        fields = ('body', 'emoticons', 'meta')

    def __init__(self, meta, *args, **kwargs):
        super(ReplyForm, self).__init__(*args, **kwargs)
        if not meta:
            del self.fields['meta']

class SearchForm(forms.Form):
    """
    Criteria for searching Topics or Posts.

    Creates a QuerySet based on selected criteria.
    """
    SEARCH_ALL_FORUMS = 'A'
    SEARCH_IN_SECTION = 'S'
    SEARCH_IN_FORUM   = 'F'

    SEARCH_ALL_POSTS     = 'A'
    SEARCH_REGULAR_POSTS = 'R'
    SEARCH_METAPOSTS     = 'M'
    SEARCH_POST_TYPE_CHOICES = (
        (SEARCH_ALL_POSTS, 'All Posts'),
        (SEARCH_REGULAR_POSTS, 'Regular Posts'),
        (SEARCH_METAPOSTS, 'Metaposts'),
    )

    SEARCH_FROM_TODAY = 'T'
    SEARCH_ANY_DATE   = 'A'
    SEARCH_FROM_CHOICES = (
        (SEARCH_FROM_TODAY, 'Today and...'),
        (7, '7 days ago and...'),
        (30, '30 days ago and...'),
        (60, '60 days ago and...'),
        (90, '90 days ago and...'),
        (180, '180 days ago and...'),
        (365, '365 days ago and...'),
        (SEARCH_ANY_DATE, 'Any date'),
    )

    SEARCH_OLDER = 'O'
    SEARCH_NEWER = 'N'
    SEARCH_WHEN_CHOICES = (
        (SEARCH_OLDER, 'Older'),
        (SEARCH_NEWER, 'Newer'),
    )
    SEARCH_WHEN_LOOKUP = {
        SEARCH_OLDER: 'lte',
        SEARCH_NEWER: 'gte',
    }

    SORT_DESCENDING = 'D'
    SORT_ASCENDING  = 'A'
    SORT_DIRECTION_CHOICES = (
        (SORT_DESCENDING, 'Descending'),
        (SORT_ASCENDING, 'Ascending'),
    )
    SORT_DIRECTION_FLAG = {
        SORT_DESCENDING: '-',
        SORT_ASCENDING: '',
    }

    USERNAME_LOOKUP = {True: '', False: '__icontains'}

    search_type    = forms.ChoiceField(choices=Search.TYPE_CHOICES, initial=Search.POST_SEARCH, widget=forms.RadioSelect)
    keywords       = forms.CharField()
    username       = forms.CharField(required=False)
    exact_username = forms.BooleanField(required=False, initial=True, label='Match exact username')
    post_type      = forms.ChoiceField(choices=SEARCH_POST_TYPE_CHOICES, initial=SEARCH_ALL_POSTS, widget=forms.RadioSelect)
    search_in      = forms.MultipleChoiceField(required=False, initial=[SEARCH_ALL_FORUMS])
    search_from    = forms.ChoiceField(choices=SEARCH_FROM_CHOICES)
    search_when    = forms.ChoiceField(choices=SEARCH_WHEN_CHOICES, initial=SEARCH_OLDER, widget=forms.RadioSelect)
    sort_direction = forms.ChoiceField(choices=SORT_DIRECTION_CHOICES, initial=SORT_DESCENDING, widget=forms.RadioSelect)

    def __init__(self, *args, **kwargs):
        super(SearchForm, self).__init__(*args, **kwargs)
        choices = [(self.SEARCH_ALL_FORUMS, 'All Forums')]
        for section, forums in Section.objects.get_forums_by_section():
            choices.append(('%s.%s' % (self.SEARCH_IN_SECTION, section.pk),
                            section.name))
            choices.extend([('%s.%s' % (self.SEARCH_IN_FORUM, forum.pk),
                            '|-- %s' % forum.name) \
                            for forum in forums])
        self.fields['search_in'].choices = choices
        self.fields['search_in'].widget.attrs['size'] = 10

    def clean_keywords(self):
        """
        Validates that no search keyword is shorter than 3 characters.
        """
        for keyword in smart_split(self.cleaned_data['keywords']):
            keyword_len = len(keyword)
            if keyword[0] in ('+', '-'):
                keyword_len = keyword_len - 1
            elif keyword[0] == '"' and keyword[-1] == '"' or \
                 keyword[0] == "'" and keyword[-1] == "'":
                keyword_len = keyword_len - 2
            if keyword_len < 3:
                raise forms.ValidationError('Keywords must be a minimun of 3 characters long.')
        return self.cleaned_data['keywords']

    def get_queryset(self):
        """
        Creates a ``QuerySet`` based on the search criteria specified in
        this form.

        Returns ``None`` if the form doesn't appear to have been
        validated.
        """
        if not hasattr(self, 'cleaned_data'):
            return None

        search_type = self.cleaned_data['search_type']
        filters = []

        # Calculate certain lookup values based on criteria
        search_in = {}
        if len(self.cleaned_data['search_in']) and \
           self.SEARCH_ALL_FORUMS not in self.cleaned_data['search_in']:
            for item in self.cleaned_data['search_in']:
                bits = item.split('.')
                search_in.setdefault(bits[0], []).append(bits[1])

        from_date = None
        if self.cleaned_data['search_from'] != self.SEARCH_ANY_DATE:
            from_date = datetime.date.today()
            if self.cleaned_data['search_from'] != self.SEARCH_FROM_TODAY:
                days_ago = int(self.cleaned_data['search_from'])
                from_date = from_date - datetime.timedelta(days=days_ago)
            if self.cleaned_data['search_when'] == self.SEARCH_OLDER:
                # Less-than date searches should compare to midnight on
                # the following day.
                from_date = from_date + datetime.timedelta(days=1)

        # Some lookup fields which change based on the search type
        if search_type == Search.POST_SEARCH:
            section_lookup = 'topic__forum__section'
            forum_lookup = 'topic__forum'
            date_lookup = 'posted_at'
            text_lookup = 'body'
            # Searching should not give the user access to Posts in
            # hidden Topics.
            filters.append(Q(topic__hidden=False))
        else:
            section_lookup = 'forum__section'
            forum_lookup = 'forum'
            date_lookup = 'started_at'
            text_lookup = 'title'
            # Searching should not give the user access to hidden Topics
            filters.append(Q(hidden=False))

        # Create lookup filters
        if search_type == Search.POST_SEARCH and \
           self.cleaned_data['post_type'] != self.SEARCH_ALL_POSTS:
            meta = self.cleaned_data['post_type'] == self.SEARCH_METAPOSTS
            filters.append(Q(meta=meta))

        if self.SEARCH_IN_SECTION in search_in and \
           self.SEARCH_IN_FORUM in search_in:
            filters.append(Q(**{'%s__in' % section_lookup: search_in[self.SEARCH_IN_SECTION]}) | \
                           Q(**{'%s__in' % forum_lookup: search_in[self.SEARCH_IN_FORUM]}))
        elif self.SEARCH_IN_SECTION in search_in:
            filters.append(Q(**{'%s__in' % section_lookup: search_in[self.SEARCH_IN_SECTION]}))
        elif self.SEARCH_IN_FORUM in search_in:
            filters.append(Q(**{'%s__in' % forum_lookup: search_in[self.SEARCH_IN_FORUM]}))

        if from_date is not None:
            lookup_type = self.SEARCH_WHEN_LOOKUP[self.cleaned_data['search_when']]
            filters.append(Q(**{'%s__%s' % (date_lookup, lookup_type): from_date}))

        if self.cleaned_data['username']:
            lookup_type = self.USERNAME_LOOKUP[self.cleaned_data['exact_username']]
            filters.append(Q(**{'user__username%s' % lookup_type: \
                                self.cleaned_data['username']}))

        one_of_filters = []
        phrase_filters = []
        for keyword in smart_split(self.cleaned_data['keywords']):
            if keyword[0] == '+':
                filters.append(Q(**{'%s__icontains' % text_lookup: keyword[1:]}))
            elif keyword[0] == '-':
                filters.append(~Q(**{'%s__icontains' % text_lookup: keyword[1:]}))
            elif keyword[0] == '"' and keyword[-1] == '"' or \
                 keyword[0] == "'" and keyword[-1] == "'":
                phrase_filters.append(Q(**{'%s__icontains' % text_lookup: keyword[1:-1]}))
            else:
                one_of_filters.append(Q(**{'%s__icontains' % text_lookup: keyword}))
        if one_of_filters:
            filters.append(reduce(operator.or_, one_of_filters))
        if phrase_filters:
            filters.append(reduce(operator.or_, phrase_filters))

        # Apply filters and perform ordering
        if search_type == Search.POST_SEARCH:
            qs = Post.objects.all()
        else:
            qs = Topic.objects.all()
        if len(filters):
            qs = qs.filter(reduce(operator.and_, filters))
        sort_direction_flag = \
            self.SORT_DIRECTION_FLAG[self.cleaned_data['sort_direction']]
        return qs.order_by('%s%s' % (sort_direction_flag, date_lookup),
                           '%sid' % sort_direction_flag)

class ImageURLField(forms.URLField):
    """
    A URL field specifically for images, which can validate details
    about the filesize, dimensions and format of an image at a given
    URL.

    Specifying any of the following arguments will result in the
    appropriate validation of image details, retrieved from the URL
    specified in this field:

    max/min_filesize
        An integer specifying an image filesize limit, in bytes.

    max/min_width
        An integer specifying an image width limit, in pixels.

    max/min_height
        An integer specifying an image height limit, in pixels.

    image_formats
        A list of image formats to be accepted, specified as uppercase
        strings.

        For a list of valid image formats, see the "Image File Formats"
        section of the `Python Imaging Library Handbook`_.

    .. _`Python Imaging Library Handbook`: http://www.pythonware.com/library/pil/handbook/
    """
    def __init__(self, max_filesize=None, min_filesize=None, max_width=None,
        min_width=None, max_height=None, min_height=None, image_formats=None,
        *args, **kwargs):
        super(ImageURLField, self).__init__(*args, **kwargs)
        self.max_filesize, self.min_filesize = max_filesize, min_filesize
        self.max_width, self.min_width = max_width, min_width
        self.max_height, self.min_height = max_height, min_height
        self.image_formats = image_formats
        self.validate_image = \
            max_filesize is not None or min_filesize is not None or \
            max_width is not None or min_width is not None or \
            max_height is not None or min_height is not None or \
            image_formats is not None

    def validate(self, value):
        super(ImageURLField, self).validate(value)

        if value == '' or not self.validate_image:
            return

        try:
            filesize, dimensions, format = self._get_image_details(value)
            if dimensions is None or format is None:
                raise forms.ValidationError(
                    'Could not retrieve image details from this URL.')
            if self.max_filesize is not None and filesize > self.max_filesize:
                raise forms.ValidationError(
                    'The image at this URL is %s large - it must be at most %s.' % (
                        filesizeformat(filesize), filesizeformat(self.max_filesize)))
            if self.min_filesize is not None and filesize < self.min_filesize:
                raise forms.ValidationError(
                    'The image at this URL is %s large - it must be at least %s.' % (
                        filesizeformat(filesize), filesizeformat(self.min_filesize)))
            if self.max_width is not None and dimensions[0] > self.max_width:
                raise forms.ValidationError(
                    'The image at this URL is %s pixels wide - it must be at most %s pixels.' % (
                        dimensions[0], self.max_width))
            if self.min_width is not None and dimensions[0] < self.min_width:
                raise forms.ValidationError(
                    'The image at this URL is %s pixels wide - it must be at least %s pixels.' % (
                        dimensions[0], self.min_width))
            if self.max_height is not None and dimensions[1] > self.max_height:
                raise forms.ValidationError(
                    'The image at this URL is %s pixels high - it must be at most %s pixels.' % (
                        dimensions[1], self.max_height))
            if self.min_height is not None and dimensions[1] < self.min_height:
                raise forms.ValidationError(
                    'The image at this URL is %s pixels high - it must be at least %s pixels.' % (
                        dimensions[1], self.min_height))
            if self.image_formats is not None and format not in self.image_formats:
                raise forms.ValidationError(
                    'The image at this URL is in %s format - %s %s.' % (
                        format,
                        len(self.image_formats) == 1 and 'the only accepted format is' or 'accepted formats are',
                        get_text_list(self.image_formats)))
        except IOError:
            raise forms.ValidationError('Could not load an image from this URL.')
        return value

    def _get_image_details(self, url):
        """
        Retrieves details about the image accessible at the given URL,
        returning a 3-tuple of (filesize, image dimensions (width,
        height) and image format), or (filesize, ``None``, ``None``) if
        image details could not be determined.

        The Python Imaging Library is used to parse the image in chunks
        in order to determine its dimension and format details without
        having to load the entire image into memory.

        Adapted from http://effbot.org/zone/pil-image-size.htm
        """
        file = urllib.urlopen(url)
        filesize = file.headers.get('content-length')
        if filesize: filesize = int(filesize)
        p = PILImageFile.Parser()
        while 1:
            data = file.read(1024)
            if not data:
                break
            p.feed(data)
            if p.image:
                return filesize, p.image.size, p.image.format
                break
        file.close()
        return filesize, None, None

def forum_profile_formfield_callback(field, **kwargs):
    """
    Callback for forum profile form field creation.

    Generates an ``ImageURLField`` for the ``avatar`` field and default
    fields for all others.
    """
    if field.name == 'avatar':
        args = {
            'verify_exists': field.validators[-1].verify_exists, # TODO Make nice
            'max_length': field.max_length,
            'required': not field.blank,
            'label': capfirst(field.verbose_name),
            'help_text': field.help_text,
        }
        if app_settings.MAX_AVATAR_FILESIZE is not None:
            args['max_filesize'] = app_settings.MAX_AVATAR_FILESIZE
        if app_settings.ALLOWED_AVATAR_FORMATS is not None:
            args['image_formats'] = app_settings.ALLOWED_AVATAR_FORMATS
        if app_settings.MAX_AVATAR_DIMENSIONS is not None:
            args['max_width'] = app_settings.MAX_AVATAR_DIMENSIONS[0]
            args['max_height'] = app_settings.MAX_AVATAR_DIMENSIONS[1]
        args.update(kwargs)
        return ImageURLField(**args)
    else:
        return field.formfield(**kwargs)

class UserProfileForm(forms.ModelForm):
    """Form for editing the user profile fields in a ForumProfile."""
    formfield_callback = forum_profile_formfield_callback

    class Meta:
        model = ForumProfile
        fields = ('title', 'location', 'avatar', 'website')

    def __init__(self, can_edit_title, *args, **kwargs):
        super(UserProfileForm, self).__init__(*args, **kwargs)
        if not can_edit_title:
            del self.fields['title']

class ForumSettingsForm(forms.ModelForm):
    """Form for editing the board setting fields in a ForumProfile."""
    class Meta:
        model = ForumProfile
        fields = ('timezone', 'topics_per_page', 'posts_per_page', 'auto_fast_reply')
Felix: The file is logger.py, num is 5 

#!/usr/bin/env python

import logging
from datetime import datetime
import sys
import os

logging.basicConfig(
	filename = os.path.join(sys.path[0],'app.log'),
	level = logging.INFO
	)

def log_basic(info):
    time_now = str(datetime.today().strftime('%02m%02d %H-%M-%S'))
    return "[{0}] : {1}".format(time_now,info)

def log_debug(info):
    info = log_basic(info)
    logging.debug(info)

def log_info(info):
    info = log_basic(info)
    logging.info(info)

Felix: The file is manage.py, num is 6 

#!/cad/tools/Python-3.5.2/bin/python3

import os
import sys

if __name__ == "__main__":
    os.environ.setdefault("DJANGO_SETTINGS_MODULE", "vrg_site.settings")
    try:
        from django.core.management import execute_from_command_line
    except ImportError:
        # The above import may fail for some other reason. Ensure that the
        # issue is really that Django is missing to avoid masking other
        # exceptions on Python 2.
        try:
            import django
        except ImportError:
            raise ImportError(
                "Couldn't import Django. Are you sure it's installed and "
                "available on your PYTHONPATH environment variable? Did you "
                "forget to activate a virtual environment?"
            )
        raise
    execute_from_command_line(sys.argv)
Felix: The file is novas.conf, num is 7 

erdi_1]
qBaseWindowNextStateGroup\4\Layout="@ByteArray(\0\0\0\xff\0\0\0\x4\xfd\0\0\0\x2\0\0\0\x2\0\0\a\x80\0\0\x3\x9b\xfc\x1\0\0\0\x3\xfc\0\0\0\0\0\0\x1&\0\0\0\0\0\xff\xff\xff\xfa\xff\xff\xff\xff\x1\0\0\0\x2\xfb\0\0\0.\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0<\0I\0n\0s\0t\0.\0_\0T\0r\0\x65\0\x65\0>\0\0\0\0\0\xff\xff\xff\xff\0\0\0^\0\xff\xff\xff\xfb\0\0\0.\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0<\0\x44\0\x65\0\x63\0l\0.\0_\0T\0r\0\x65\0\x65\0>\0\0\0\0\0\xff\xff\xff\xff\0\0\0^\0\xff\xff\xff\xfb\0\0\0\x30\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0<\0S\0i\0g\0n\0\x61\0l\0_\0L\0i\0s\0t\0>\0\0\0\0\xfa\0\0\0\x93\0\0\0x\0\xff\xff\xff\xfc\0\0\0\0\0\0\a\x80\0\0\x2\x1a\0\xff\xff\xff\xfa\0\0\0\x1\x1\0\0\0\x2\xfb\0\0\0\x36\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0M\0T\0\x42\0_\0S\0O\0U\0R\0\x43\0\x45\0_\0T\0\x41\0\x42\0_\0\x31\0\0\0\0\0\xff\xff\xff\xff\0\0\0u\0\xff\xff\xff\xfb\0\0\0,\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0W\0\x65\0l\0\x63\0o\0m\0\x65\0P\0\x61\0g\0\x65\x1\0\0\0\0\xff\xff\xff\xff\0\0\x2\x1a\0\xff\xff\xff\0\0\0\x3\0\0\x3\x84\0\0\0\x8d\xfc\x1\0\0\0\x1\xfc\0\0\0\0\0\0\x3\x84\0\0\0\0\0\xff\xff\xff\xfa\xff\xff\xff\xff\x1\0\0\0\x2\xfb\0\0\0(\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0<\0M\0\x65\0s\0s\0\x61\0g\0\x65\0>\0\0\0\0\0\xff\xff\xff\xff\0\0\0\xa0\0\xff\xff\xff\xfb\0\0\0$\0w\0i\0n\0\x64\0o\0w\0\x44\0o\0\x63\0k\0_\0n\0W\0\x61\0v\0\x65\0_\0\x32\0\0\0\0\0\xff\xff\xff\xff\0\0\x1-\0\xff\xff\xff\0\0\a\x80\0\0\0\0\0\0\0\x4\0\0\0\x4\0\0\0\b\0\0\0\b\xfc\0\0\0\x3\0\0\0\x2\0\0\0\r\0\0\0.\0H\0\x42\0_\0I\0M\0P\0O\0R\0T\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0(\0H\0\x42\0_\0N\0\x45\0W\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0$\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0(\0H\0\x42\0_\0S\0I\0G\0N\0\x41\0L\0_\0P\0\x41\0N\0\x45\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0~\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0H\0\x42\0_\0M\0U\0L\0T\0I\0_\0T\0\x41\0\x42\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0\xa2\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0*\0H\0\x42\0_\0\x45\0\x44\0I\0T\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0\xc6\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\x1\0\0\0\xea\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0,\0H\0\x42\0_\0T\0R\0\x41\0\x43\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x1\x18\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0.\0H\0\x42\0_\0S\0O\0U\0R\0\x43\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x2/\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0,\0t\0o\0o\0l\0\x62\0\x61\0r\0H\0\x42\0_\0T\0O\0G\0G\0L\0\x45\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x3\x1\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x30\0t\0o\0o\0l\0\x62\0\x61\0r\0H\0\x42\0_\0P\0R\0O\0\x44\0T\0Y\0P\0\x45\0_\0P\0\x41\0N\0\x45\0L\0\0\0\x2\xfb\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0<\0\x41\0\x42\0V\0_\0\x41\0\x44\0\x44\0_\0T\0\x45\0M\0P\0O\0R\0\x41\0R\0Y\0_\0\x41\0S\0S\0\x45\0R\0T\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x3@\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x1e\0U\0V\0M\0_\0\x41\0W\0\x41\0R\0\x45\0_\0\x44\0\x45\0\x42\0U\0G\x1\0\0\x3\x64\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x18\0V\0I\0\x41\0_\0T\0O\0O\0L\0_\0\x42\0O\0X\x1\0\0\x3\x92\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x2\0\0\0\a\0\0\0&\0H\0\x42\0_\0\x42\0\x41\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x30\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\x1U\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0>\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0R\0\x45\0W\0I\0N\0\x44\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x38\0H\0\x42\0_\0P\0O\0W\0\x45\0R\0_\0T\0R\0\x41\0\x43\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0P\0\x44\0M\0L\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0H\0\x42\0_\0P\0\x41\0_\0\x44\0O\0M\0\x41\0I\0N\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\"\0H\0\x42\0_\0P\0\x41\0_\0S\0T\0\x41\0T\0\x45\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x2\0\0\0\x1\0\0\0:\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0V\0S\0I\0M\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0)"

[Verdi_1]
qBaseWindowNextStateGroup\4\isNestedWindow=0
qBaseWindowNextStateGroup\4\isVisible=true
qBaseWindowNextStateGroup\4\size=@Size(1920 1000)
qBaseWindowNextStateGroup\4\geometry_x=510
qBaseWindowNextStateGroup\4\geometry_y=179
qBaseWindowNextStateGroup\4\geometry_width=1920
qBaseWindowNextStateGroup\4\geometry_height=1000

[QwMainWindow]
window\Verdi_1\layout="@ByteArray(\0\0\0\xff\0\x3\x12\xc4\xfd\0\0\0\x2\0\0\0\x2\0\0\a\x80\0\0\x2\x3\xfc\x1\0\0\0\x3\xfc\0\0\0\0\0\0\x2z\0\0\0\x89\0\xff\xff\xff\xfa\0\0\0\0\x1\0\0\0\x2\xfb\0\0\0.\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0<\0I\0n\0s\0t\0.\0_\0T\0r\0\x65\0\x65\0>\x1\0\0\0\0\xff\xff\xff\xff\0\0\0^\0\xff\xff\xff\xfb\0\0\0.\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0<\0\x44\0\x65\0\x63\0l\0.\0_\0T\0r\0\x65\0\x65\0>\x1\0\0\0\0\xff\xff\xff\xff\0\0\0^\0\xff\xff\xff\xfb\0\0\0\x30\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0<\0S\0i\0g\0n\0\x61\0l\0_\0L\0i\0s\0t\0>\0\0\0\x2\x15\0\0\x1=\0\0\x1\x18\0\xff\xff\xff\xfc\0\0\x2\x80\0\0\x5\0\0\0\0\x89\0\xff\xff\xff\xfa\0\0\0\0\x1\0\0\0\x2\xfb\0\0\0\x36\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0M\0T\0\x42\0_\0S\0O\0U\0R\0\x43\0\x45\0_\0T\0\x41\0\x42\0_\0\x31\x1\0\0\0\0\xff\xff\xff\xff\0\0\0u\0\xff\xff\xff\xfb\0\0\0,\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0W\0\x65\0l\0\x63\0o\0m\0\x65\0P\0\x61\0g\0\x65\0\0\0\0\0\xff\xff\xff\xff\0\0\x2\x1a\0\xff\xff\xff\0\0\0\x3\0\0\a\x80\0\0\x1\x93\xfc\x1\0\0\0\x1\xfc\0\0\0\0\0\0\a\x80\0\0\0\xa0\0\a\xff\xff\xfa\0\0\0\0\x1\0\0\0\x3\xfb\0\0\0(\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0<\0M\0\x65\0s\0s\0\x61\0g\0\x65\0>\x1\0\0\0\0\xff\xff\xff\xff\0\0\0\xa0\0\a\xff\xff\xfb\0\0\0$\0w\0i\0n\0\x64\0o\0w\0\x44\0o\0\x63\0k\0_\0n\0W\0\x61\0v\0\x65\0_\0\x32\x1\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\xfb\0\0\0$\0w\0i\0n\0\x64\0o\0w\0\x44\0o\0\x63\0k\0_\0n\0W\0\x61\0v\0\x65\0_\0\x33\x1\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\a\x80\0\0\0\0\0\0\0\x4\0\0\0\x4\0\0\0\b\0\0\0\b\xfc\0\0\0\x4\0\0\0\x2\0\0\0\r\0\0\0.\0H\0\x42\0_\0I\0M\0P\0O\0R\0T\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0(\0H\0\x42\0_\0N\0\x45\0W\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0$\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0(\0H\0\x42\0_\0S\0I\0G\0N\0\x41\0L\0_\0P\0\x41\0N\0\x45\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0~\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0H\0\x42\0_\0M\0U\0L\0T\0I\0_\0T\0\x41\0\x42\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0\xa2\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0*\0H\0\x42\0_\0\x45\0\x44\0I\0T\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0\xc6\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\x1\0\0\0\xea\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0,\0H\0\x42\0_\0T\0R\0\x41\0\x43\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x1\x18\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0.\0H\0\x42\0_\0S\0O\0U\0R\0\x43\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x2/\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0,\0t\0o\0o\0l\0\x62\0\x61\0r\0H\0\x42\0_\0T\0O\0G\0G\0L\0\x45\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x3\x1\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x30\0t\0o\0o\0l\0\x62\0\x61\0r\0H\0\x42\0_\0P\0R\0O\0\x44\0T\0Y\0P\0\x45\0_\0P\0\x41\0N\0\x45\0L\0\0\0\x3\x16\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0<\0\x41\0\x42\0V\0_\0\x41\0\x44\0\x44\0_\0T\0\x45\0M\0P\0O\0R\0\x41\0R\0Y\0_\0\x41\0S\0S\0\x45\0R\0T\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x3@\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x1e\0U\0V\0M\0_\0\x41\0W\0\x41\0R\0\x45\0_\0\x44\0\x45\0\x42\0U\0G\x1\0\0\x3\x64\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x18\0V\0I\0\x41\0_\0T\0O\0O\0L\0_\0\x42\0O\0X\x1\0\0\x3\x92\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x2\0\0\0\x4\0\0\0&\0H\0\x42\0_\0\x42\0\x41\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x30\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\x1P\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0>\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0R\0\x45\0W\0I\0N\0\x44\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0R\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0R\0\x45\0W\0I\0N\0\x44\0_\0U\0N\0\x44\0O\0_\0R\0\x45\0\x44\0O\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\x1\x5\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x2\0\0\0\x5\0\0\0@\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0R\0\x45\0V\0\x45\0R\0S\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x38\0H\0\x42\0_\0P\0O\0W\0\x45\0R\0_\0T\0R\0\x41\0\x43\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0P\0\x44\0M\0L\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0H\0\x42\0_\0P\0\x41\0_\0\x44\0O\0M\0\x41\0I\0N\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\"\0H\0\x42\0_\0P\0\x41\0_\0S\0T\0\x41\0T\0\x45\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x2\0\0\0\x1\0\0\0:\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0V\0S\0I\0M\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0)"
window\Verdi_1\geometry=@ByteArray(\x1\xd9\xd0\xcb\0\x1\0\0\0\0\0\0\0\0\0\0\0\0\a\x8b\0\0\x4\a\0\0\0\x6\0\0\0\x18\0\0\a\x85\0\0\x4\x1\0\0\0\0\0\0)
window\Verdi_1\menubar=true
window\Verdi_1\splitters\tbvConstrDbgSplitter\layout=@ByteArray(\0\0\0\xff\0\0\0\0\0\0\0\x2\0\0\0\x8d\0\0\0\x8d\x1\0\0\0\x6\x1\0\0\0\x1)
window\Verdi_1\splitters\tbvConstrRerandSplitter\layout=@ByteArray(\0\0\0\xff\0\0\0\0\0\0\0\x2\0\0\0\x46\0\0\0\x4\x1\0\0\0\x6\x1\0\0\0\x2)
window\Verdi_1\splitters\tbvConstrOriginSplitter\layout=@ByteArray(\0\0\0\xff\0\0\0\0\0\0\0\x2\0\0\0#\0\0\0\x4\x1\0\0\0\x6\x1\0\0\0\x2)
window\Verdi_1\splitters\ThreadPane\layout="@ByteArray(\0\0\0\xff\0\0\0\0\0\0\0\x2\0\0\0;\0\0\0;\x1\0\0\0\x6\x1\0\0\0\x2)"
window\Verdi_1\splitters\tbvInteractiveSplitter\layout=@ByteArray(\0\0\0\xff\0\0\0\0\0\0\0\x2\0\0\0!\0\0\0!\x1\0\0\0\x6\x1\0\0\0\x2)
window\Verdi_1\splitters\tbvVSimSplitter\layout=@ByteArray(\0\0\0\xff\0\0\0\0\0\0\0\x2\0\0\0!\0\0\0!\x1\0\0\0\x6\x1\0\0\0\x2)
window\Verdi_1\splitters\tbvTBHSplitter\layout=@ByteArray(\0\0\0\xff\0\0\0\0\0\0\0\x2\0\0\0-\0\0\0\x42\x1\0\0\0\x6\x1\0\0\0\x2)
window\nWave_2\layout="@ByteArray(\0\0\0\xff\0\x3\x12\xc4\xfd\0\0\0\0\0\0\a\x80\0\0\x1\x14\0\0\0\x4\0\0\0\x4\0\0\0\b\0\0\0\b\xfc\0\0\0\x2\0\0\0\x2\0\0\0\t\0\0\0\x12\0W\0\x41\0V\0\x45\0_\0O\0P\0\x45\0N\x1\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x12\0W\0\x41\0V\0\x45\0_\0\x45\0\x44\0I\0T\x1\0\0\0?\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x16\0W\0\x41\0V\0\x45\0_\0\x43\0U\0R\0S\0O\0R\x1\0\0\0\xb4\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x12\0W\0\x41\0V\0\x45\0_\0V\0I\0\x45\0W\x1\0\0\x2!\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\"\0W\0\x41\0V\0\x45\0_\0S\0\x45\0\x41\0R\0\x43\0H\0_\0\x45\0V\0\x45\0N\0T\x1\0\0\x2{\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x1e\0W\0\x41\0V\0\x45\0_\0R\0\x45\0P\0L\0\x41\0Y\0_\0S\0I\0M\0\0\0\x4P\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x12\0W\0\x41\0V\0\x45\0_\0G\0O\0T\0O\x1\0\0\x3\x11\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0,\0W\0\x41\0V\0\x45\0_\0G\0O\0T\0O\0_\0N\0\x41\0M\0\x45\0\x44\0_\0M\0\x41\0R\0K\0\x45\0R\0\0\0\x4\xe6\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0 \0W\0\x41\0V\0\x45\0_\0T\0R\0\x41\0N\0S\0\x41\0\x43\0T\0I\0O\0N\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x2\0\0\0\x1\0\0\0\x32\0S\0\x45\0L\0\x45\0\x43\0T\0I\0O\0N\0_\0M\0\x45\0S\0S\0\x41\0G\0\x45\0_\0T\0O\0O\0L\0\x42\0\x41\0R\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0)"
window\nWave_2\geometry=@ByteArray(\x1\xd9\xd0\xcb\0\x1\0\0\0\0\0\0\0\0\0\x1e\0\0\a\x7f\0\0\x1\x64\0\0\0\0\0\0\0\x1e\0\0\a\x7f\0\0\x1\x64\0\0\0\0\0\0)
window\nWave_2\menubar=true
window\nWave_2\splitters\splitter_5\layout=@ByteArray(\0\0\0\xff\0\0\0\0\0\0\0\x2\0\0\0\x3\0\0\0\xcb\x1\0\0\0\x1\0\0\0\0\x2)
window\nWave_2\splitters\splitter_2\layout=@ByteArray(\0\0\0\xff\0\0\0\0\0\0\0\x2\0\0\x1V\0\0\x2.\x1\0\0\0\x1\0\0\0\0\x1)
window\nWave_2\splitters\splitter\layout=@ByteArray(\0\0\0\xff\0\0\0\0\0\0\0\x3\0\0\0\xdc\0\0\0\x1\0\0\x5H\x1\0\0\0\x1\0\0\0\0\x1)
window\nWave_2\splitters\Pane_Upper\layout=@ByteArray(\0\0\0\xff\0\0\0\0\0\0\0\x2\0\0\0\x1\0\0\0\x5\x1\0\0\0\x1\0\0\0\0\x1)
window\nWave_2\splitters\splitter_3\layout=@ByteArray(\0\0\0\xff\0\0\0\0\0\0\0\x2\0\0\0\xdc\0\0\x5H\x1\0\0\0\x1\0\0\0\0\x1)
window\Verdi_1\splitters\splitter\layout=@ByteArray(\0\0\0\xff\0\0\0\0\0\0\0\x2\0\0\x1\0\0\0\x1\0\x1\0\0\0\x6\x1\0\0\0\x1)
window\nWave_3\layout="@ByteArray(\0\0\0\xff\0\x3\x12\xc4\xfd\0\0\0\0\0\0\a\x80\0\0\x1\x14\0\0\0\x4\0\0\0\x4\0\0\0\b\0\0\0\b\xfc\0\0\0\x2\0\0\0\x2\0\0\0\t\0\0\0\x12\0W\0\x41\0V\0\x45\0_\0O\0P\0\x45\0N\x1\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x12\0W\0\x41\0V\0\x45\0_\0\x45\0\x44\0I\0T\x1\0\0\0?\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x16\0W\0\x41\0V\0\x45\0_\0\x43\0U\0R\0S\0O\0R\x1\0\0\0\xb4\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x12\0W\0\x41\0V\0\x45\0_\0V\0I\0\x45\0W\x1\0\0\x2!\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\"\0W\0\x41\0V\0\x45\0_\0S\0\x45\0\x41\0R\0\x43\0H\0_\0\x45\0V\0\x45\0N\0T\x1\0\0\x2{\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x1e\0W\0\x41\0V\0\x45\0_\0R\0\x45\0P\0L\0\x41\0Y\0_\0S\0I\0M\0\0\0\x4P\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x12\0W\0\x41\0V\0\x45\0_\0G\0O\0T\0O\x1\0\0\x3M\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0,\0W\0\x41\0V\0\x45\0_\0G\0O\0T\0O\0_\0N\0\x41\0M\0\x45\0\x44\0_\0M\0\x41\0R\0K\0\x45\0R\0\0\0\x4\xe6\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0 \0W\0\x41\0V\0\x45\0_\0T\0R\0\x41\0N\0S\0\x41\0\x43\0T\0I\0O\0N\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x2\0\0\0\x1\0\0\0\x32\0S\0\x45\0L\0\x45\0\x43\0T\0I\0O\0N\0_\0M\0\x45\0S\0S\0\x41\0G\0\x45\0_\0T\0O\0O\0L\0\x42\0\x41\0R\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0)"
window\nWave_3\geometry=@ByteArray(\x1\xd9\xd0\xcb\0\x1\0\0\0\0\0\0\0\0\0\x1e\0\0\a\x7f\0\0\x1\x64\0\0\0\0\0\0\0\x1e\0\0\a\x7f\0\0\x1\x64\0\0\0\0\0\0)
window\nWave_3\menubar=true
window\nWave_3\splitters\splitter_5\layout=@ByteArray(\0\0\0\xff\0\0\0\0\0\0\0\x2\0\0\0\x3\0\0\x1%\x1\0\0\0\x1\0\0\0\0\x2)
window\nWave_3\splitters\splitter_2\layout=@ByteArray(\0\0\0\xff\0\0\0\0\0\0\0\x2\0\0\x1V\0\0\x6*\x1\0\0\0\x1\0\0\0\0\x1)
window\nWave_3\splitters\splitter\layout=@ByteArray(\0\0\0\xff\0\0\0\0\0\0\0\x3\0\0\x1\x1c\0\0\0\x1\0\0\x5\v\x1\0\0\0\x1\0\0\0\0\x1)
window\nWave_3\splitters\Pane_Upper\layout=@ByteArray(\0\0\0\xff\0\0\0\0\0\0\0\x2\0\0\0\x1\0\0\0\x5\x1\0\0\0\x1\0\0\0\0\x1)
window\nWave_3\splitters\splitter_3\layout=@ByteArray(\0\0\0\xff\0\0\0\0\0\0\0\x2\0\0\0\x1\0\0\0\x1\x1\0\0\0\x1\0\0\0\0\x1)
window\nWave_3\splitters\wholeSplitter\layout="@ByteArray(\0\0\0\xff\0\0\0\0\0\0\0\x3\0\0\0\x41\0\0\x1,\0\0\0\xfe\x1\0\0\0\x6\x1\0\0\0\x1)"
window\nWave_3\splitters\middleSplitter\layout=@ByteArray(\0\0\0\xff\0\0\0\0\0\0\0\x2\0\0\0\x4\0\0\0\x4\x1\0\0\0\x6\x1\0\0\0\x2)

[qBaseWindowStateGroup]
qDockerWindowMgr_C\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qDockerWindow_qDockContentType\Verdi=1
qDockerWindowMgr_C\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qDockerWindowMgr_saveDockerChildList\Verdi_1=6
qDockerWindowMgr_C\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qDockerWindowMgr_saveDockerChildList\Verdi_1_0=widgetDock_hdlHier_1
qDockerWindowMgr_C\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qDockerWindowMgr_saveDockerChildList\Verdi_1_1=widgetDock_messageWindow_1
qDockerWindowMgr_C\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qDockerWindowMgr_saveDockerChildList\Verdi_1_2=widgetDock_hdlSrc_1
qDockerWindowMgr_C\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qDockerWindowMgr_saveDockerChildList\Verdi_1_3=widgetDock_signalList_1
qDockerWindowMgr_C\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qDockerWindowMgr_saveDockerChildList\Verdi_1_4=widgetDock_svtbHier_1
qDockerWindowMgr_C\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qDockerWindowMgr_saveDockerChildList\Verdi_1_5=widgetDock_WelcomePage_1
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qDockerWindow_restoreNewChildState=true
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qBaseDockWidgetGroup\widgetDock_hdlHier_1\isVisible=true
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qBaseDockWidgetGroup\widgetDock_messageWindow_1\isVisible=true
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qBaseDockWidgetGroup\widgetDock_hdlSrc_1\isVisible=true
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qBaseDockWidgetGroup\widgetDock_signalList_1\isVisible=false
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qBaseDockWidgetGroup\widgetDock_svtbHier_1\isVisible=true
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qBaseDockWidgetGroup\windowDock_nWave_1\isNestedWindow=1
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qBaseDockWidgetGroup\windowDock_nWave_1\isVisible=true
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qBaseDockWidgetGroup\widgetDock_WelcomePage_1\isVisible=false
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\ProductVersion=201412
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\Layout="@ByteArray(\0\0\0\xff\0\0\0\0\xfd\0\0\0\x2\0\0\0\x2\0\0\a\x80\0\0\x2\x3\xfc\x1\0\0\0\x3\xfc\0\0\0\0\0\0\x2z\0\0\0\x89\0\xff\xff\xff\xfa\0\0\0\0\x1\0\0\0\x2\xfb\0\0\0(\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0h\0\x64\0l\0H\0i\0\x65\0r\0_\0\x31\x1\0\0\0\0\xff\xff\xff\xff\0\0\0^\0\xff\xff\xff\xfb\0\0\0*\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0s\0v\0t\0\x62\0H\0i\0\x65\0r\0_\0\x31\x1\0\0\0\0\xff\xff\xff\xff\0\0\0^\0\xff\xff\xff\xfb\0\0\0.\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0s\0i\0g\0n\0\x61\0l\0L\0i\0s\0t\0_\0\x31\0\0\0\x2\x15\0\0\x1=\0\0\x1\x18\0\xff\xff\xff\xfc\0\0\x2\x80\0\0\x5\0\0\0\0\x89\0\xff\xff\xff\xfa\0\0\0\0\x1\0\0\0\x2\xfb\0\0\0&\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0h\0\x64\0l\0S\0r\0\x63\0_\0\x31\x1\0\0\0\0\xff\xff\xff\xff\0\0\0u\0\xff\xff\xff\xfb\0\0\0\x30\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0W\0\x65\0l\0\x63\0o\0m\0\x65\0P\0\x61\0g\0\x65\0_\0\x31\0\0\0\0\0\xff\xff\xff\xff\0\0\x2\x1a\0\xff\xff\xff\0\0\0\x3\0\0\a\x80\0\0\x1\x93\xfc\x1\0\0\0\x1\xfc\0\0\0\0\0\0\a\x80\0\0\0\xa0\0\a\xff\xff\xfa\0\0\0\0\x1\0\0\0\x3\xfb\0\0\0\x34\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0m\0\x65\0s\0s\0\x61\0g\0\x65\0W\0i\0n\0\x64\0o\0w\0_\0\x31\x1\0\0\0\0\xff\xff\xff\xff\0\0\0\xa0\0\a\xff\xff\xfb\0\0\0$\0w\0i\0n\0\x64\0o\0w\0\x44\0o\0\x63\0k\0_\0n\0W\0\x61\0v\0\x65\0_\0\x32\x1\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\xfb\0\0\0$\0w\0i\0n\0\x64\0o\0w\0\x44\0o\0\x63\0k\0_\0n\0W\0\x61\0v\0\x65\0_\0\x33\x1\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\a\x80\0\0\0\0\0\0\0\x4\0\0\0\x4\0\0\0\b\0\0\0\b\xfc\0\0\0\x4\0\0\0\x2\0\0\0\r\0\0\0.\0H\0\x42\0_\0I\0M\0P\0O\0R\0T\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0(\0H\0\x42\0_\0N\0\x45\0W\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0$\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0(\0H\0\x42\0_\0S\0I\0G\0N\0\x41\0L\0_\0P\0\x41\0N\0\x45\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0~\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0H\0\x42\0_\0M\0U\0L\0T\0I\0_\0T\0\x41\0\x42\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0\xa2\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0*\0H\0\x42\0_\0\x45\0\x44\0I\0T\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0\xc6\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\x1\0\0\0\xea\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0,\0H\0\x42\0_\0T\0R\0\x41\0\x43\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x1\x18\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0.\0H\0\x42\0_\0S\0O\0U\0R\0\x43\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x2/\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0,\0t\0o\0o\0l\0\x62\0\x61\0r\0H\0\x42\0_\0T\0O\0G\0G\0L\0\x45\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x3\x1\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x30\0t\0o\0o\0l\0\x62\0\x61\0r\0H\0\x42\0_\0P\0R\0O\0\x44\0T\0Y\0P\0\x45\0_\0P\0\x41\0N\0\x45\0L\0\0\0\x3\x16\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0<\0\x41\0\x42\0V\0_\0\x41\0\x44\0\x44\0_\0T\0\x45\0M\0P\0O\0R\0\x41\0R\0Y\0_\0\x41\0S\0S\0\x45\0R\0T\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x3@\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x1e\0U\0V\0M\0_\0\x41\0W\0\x41\0R\0\x45\0_\0\x44\0\x45\0\x42\0U\0G\x1\0\0\x3\x64\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x18\0V\0I\0\x41\0_\0T\0O\0O\0L\0_\0\x42\0O\0X\x1\0\0\x3\x92\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x2\0\0\0\x4\0\0\0&\0H\0\x42\0_\0\x42\0\x41\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x30\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\x1P\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0>\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0R\0\x45\0W\0I\0N\0\x44\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0R\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0R\0\x45\0W\0I\0N\0\x44\0_\0U\0N\0\x44\0O\0_\0R\0\x45\0\x44\0O\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\x1\x5\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x2\0\0\0\x5\0\0\0@\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0R\0\x45\0V\0\x45\0R\0S\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x38\0H\0\x42\0_\0P\0O\0W\0\x45\0R\0_\0T\0R\0\x41\0\x43\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0P\0\x44\0M\0L\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0H\0\x42\0_\0P\0\x41\0_\0\x44\0O\0M\0\x41\0I\0N\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\"\0H\0\x42\0_\0P\0\x41\0_\0S\0T\0\x41\0T\0\x45\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x2\0\0\0\x1\0\0\0:\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0V\0S\0I\0M\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0)"
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\isNestedWindow=0
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\isVisible=true
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\size=@Size(1920 1002)
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\geometry_x=0
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\geometry_y=0
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\geometry_width=1920
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\geometry_height=1002
Verdi_1\qBaseWindowRestoreStateGroup\qDockerWindow_defaultLayout\qDockerWindow_restoreNewChildState=true
Verdi_1\qBaseWindowRestoreStateGroup\qDockerWindow_defaultLayout\qBaseDockWidgetGroup\widgetDock_%3CInst._Tree%3E\isVisible=true
Verdi_1\qBaseWindowRestoreStateGroup\qDockerWindow_defaultLayout\qBaseDockWidgetGroup\widgetDock_%3CInst._Tree%3E\qBaseWindowBeMax=0
Verdi_1\qBaseWindowRestoreStateGroup\qDockerWindow_defaultLayout\qBaseDockWidgetGroup\widgetDock_%3CInst._Tree%3E\qBaseWindowBeFix=0
Verdi_1\qBaseWindowRestoreStateGroup\qDockerWindow_defaultLayout\qBaseDockWidgetGroup\widgetDock_%3CInst._Tree%3E\dockIsFloating=false
Verdi_1\qBaseWindowRestoreStateGroup\qDockerWindow_defaultLayout\qBaseDockWidgetGroup\widgetDock_%3CMessage%3E\isVisible=true
Verdi_1\qBaseWindowRestoreStateGroup\qDockerWindow_defaultLayout\qBaseDockWidgetGroup\widgetDock_%3CMessage%3E\qBaseWindowBeMax=0
Verdi_1\qBaseWindowRestoreStateGroup\qDockerWindow_defaultLayout\qBaseDockWidgetGroup\widgetDock_%3CMessage%3E\qBaseWindowBeFix=0
Verdi_1\qBaseWindowRestoreStateGroup\qDockerWindow_defaultLayout\qBaseDockWidgetGroup\widgetDock_%3CMessage%3E\dockIsFloating=false
Verdi_1\qBaseWindowRestoreStateGroup\qDockerWindow_defaultLayout\qBaseDockWidgetGroup\widgetDock_MTB_SOURCE_TAB_1\isVisible=true
Verdi_1\qBaseWindowRestoreStateGroup\qDockerWindow_defaultLayout\qBaseDockWidgetGroup\widgetDock_MTB_SOURCE_TAB_1\qBaseWindowBeMax=0
Verdi_1\qBaseWindowRestoreStateGroup\qDockerWindow_defaultLayout\qBaseDockWidgetGroup\widgetDock_MTB_SOURCE_TAB_1\qBaseWindowBeFix=0
Verdi_1\qBaseWindowRestoreStateGroup\qDockerWindow_defaultLayout\qBaseDockWidgetGroup\widgetDock_MTB_SOURCE_TAB_1\dockIsFloating=false
Verdi_1\qBaseWindowRestoreStateGroup\qDockerWindow_defaultLayout\qBaseDockWidgetGroup\widgetDock_%3CSignal_List%3E\isVisible=false
Verdi_1\qBaseWindowRestoreStateGroup\qDockerWindow_defaultLayout\qBaseDockWidgetGroup\widgetDock_%3CDecl._Tree%3E\isVisible=true
Verdi_1\qBaseWindowRestoreStateGroup\qDockerWindow_defaultLayout\qBaseDockWidgetGroup\widgetDock_%3CDecl._Tree%3E\qBaseWindowBeMax=0
Verdi_1\qBaseWindowRestoreStateGroup\qDockerWindow_defaultLayout\qBaseDockWidgetGroup\widgetDock_%3CDecl._Tree%3E\qBaseWindowBeFix=0
Verdi_1\qBaseWindowRestoreStateGroup\qDockerWindow_defaultLayout\qBaseDockWidgetGroup\widgetDock_%3CDecl._Tree%3E\dockIsFloating=false
Verdi_1\qBaseWindowRestoreStateGroup\qDockerWindow_defaultLayout\ProductVersion=201412
Verdi_1\qBaseWindowRestoreStateGroup\qDockerWindow_defaultLayout\Layout="@ByteArray(\0\0\0\xff\0\0\0\0\xfd\0\0\0\x2\0\0\0\x2\0\0\a\x80\0\0\x2\x6\xfc\x1\0\0\0\x3\xfc\0\0\0\0\0\0\x2z\0\0\0\x89\0\xff\xff\xff\xfa\0\0\0\x1\x1\0\0\0\x2\xfb\0\0\0.\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0<\0I\0n\0s\0t\0.\0_\0T\0r\0\x65\0\x65\0>\x1\0\0\0\0\xff\xff\xff\xff\0\0\0^\0\xff\xff\xff\xfb\0\0\0.\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0<\0\x44\0\x65\0\x63\0l\0.\0_\0T\0r\0\x65\0\x65\0>\x1\0\0\0\0\xff\xff\xff\xff\0\0\0^\0\xff\xff\xff\xfb\0\0\0\x30\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0<\0S\0i\0g\0n\0\x61\0l\0_\0L\0i\0s\0t\0>\0\0\0\x2\x15\0\0\x1=\0\0\x1\x18\0\xff\xff\xff\xfb\0\0\0\x36\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0M\0T\0\x42\0_\0S\0O\0U\0R\0\x43\0\x45\0_\0T\0\x41\0\x42\0_\0\x31\x1\0\0\x2\x80\0\0\x5\0\0\0\0u\0\xff\xff\xff\0\0\0\x3\0\0\a\x80\0\0\x1G\xfc\x1\0\0\0\x1\xfb\0\0\0(\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0<\0M\0\x65\0s\0s\0\x61\0g\0\x65\0>\x1\0\0\0\0\0\0\a\x80\0\0\0\xa0\0\xff\xff\xff\0\0\a\x80\0\0\0\0\0\0\0\x4\0\0\0\x4\0\0\0\b\0\0\0\b\xfc\0\0\0\x4\0\0\0\x2\0\0\0\r\0\0\0.\0H\0\x42\0_\0I\0M\0P\0O\0R\0T\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0(\0H\0\x42\0_\0N\0\x45\0W\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0$\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0(\0H\0\x42\0_\0S\0I\0G\0N\0\x41\0L\0_\0P\0\x41\0N\0\x45\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0~\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0H\0\x42\0_\0M\0U\0L\0T\0I\0_\0T\0\x41\0\x42\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0\xa2\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0*\0H\0\x42\0_\0\x45\0\x44\0I\0T\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0\xc6\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\x1\0\0\0\xea\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0,\0H\0\x42\0_\0T\0R\0\x41\0\x43\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x1\x18\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0.\0H\0\x42\0_\0S\0O\0U\0R\0\x43\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x2/\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0,\0t\0o\0o\0l\0\x62\0\x61\0r\0H\0\x42\0_\0T\0O\0G\0G\0L\0\x45\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x3\x1\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x30\0t\0o\0o\0l\0\x62\0\x61\0r\0H\0\x42\0_\0P\0R\0O\0\x44\0T\0Y\0P\0\x45\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x3\x16\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0<\0\x41\0\x42\0V\0_\0\x41\0\x44\0\x44\0_\0T\0\x45\0M\0P\0O\0R\0\x41\0R\0Y\0_\0\x41\0S\0S\0\x45\0R\0T\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x3\x1f\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x1e\0U\0V\0M\0_\0\x41\0W\0\x41\0R\0\x45\0_\0\x44\0\x45\0\x42\0U\0G\x1\0\0\x3\x43\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x18\0V\0I\0\x41\0_\0T\0O\0O\0L\0_\0\x42\0O\0X\x1\0\0\x3g\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x2\0\0\0\x4\0\0\0&\0H\0\x42\0_\0\x42\0\x41\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x30\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\x1P\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0>\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0R\0\x45\0W\0I\0N\0\x44\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0R\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0R\0\x45\0W\0I\0N\0\x44\0_\0U\0N\0\x44\0O\0_\0R\0\x45\0\x44\0O\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\x1\x5\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x2\0\0\0\x5\0\0\0@\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0R\0\x45\0V\0\x45\0R\0S\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x38\0H\0\x42\0_\0P\0O\0W\0\x45\0R\0_\0T\0R\0\x41\0\x43\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0P\0\x44\0M\0L\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0H\0\x42\0_\0P\0\x41\0_\0\x44\0O\0M\0\x41\0I\0N\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\"\0H\0\x42\0_\0P\0\x41\0_\0S\0T\0\x41\0T\0\x45\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x2\0\0\0\x1\0\0\0:\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0V\0S\0I\0M\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0)"
Verdi_1\qBaseWindowRestoreStateGroup\qDockerWindow_defaultLayout\isNestedWindow=0
Verdi_1\qBaseWindowRestoreStateGroup\qDockerWindow_defaultLayout\isVisible=true
Verdi_1\qBaseWindowRestoreStateGroup\qDockerWindow_defaultLayout\size=@Size(1920 983)
Verdi_1\qBaseWindowRestoreStateGroup\qDockerWindow_defaultLayout\geometry_x=0
Verdi_1\qBaseWindowRestoreStateGroup\qDockerWindow_defaultLayout\geometry_y=0
Verdi_1\qBaseWindowRestoreStateGroup\qDockerWindow_defaultLayout\geometry_width=1920
Verdi_1\qBaseWindowRestoreStateGroup\qDockerWindow_defaultLayout\geometry_height=983
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qDockerWindow_restoreNewChildState=true
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\widgetDock_%3CInst._Tree%3E\isVisible=true
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\widgetDock_%3CInst._Tree%3E\qBaseWindowBeMax=0
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\widgetDock_%3CInst._Tree%3E\qBaseWindowBeFix=0
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\widgetDock_%3CInst._Tree%3E\dockIsFloating=false
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\widgetDock_%3CMessage%3E\isVisible=true
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\widgetDock_%3CMessage%3E\qBaseWindowBeMax=0
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\widgetDock_%3CMessage%3E\qBaseWindowBeFix=0
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\widgetDock_%3CMessage%3E\dockIsFloating=false
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\widgetDock_MTB_SOURCE_TAB_1\isVisible=true
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\widgetDock_MTB_SOURCE_TAB_1\qBaseWindowBeMax=0
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\widgetDock_MTB_SOURCE_TAB_1\qBaseWindowBeFix=0
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\widgetDock_MTB_SOURCE_TAB_1\dockIsFloating=false
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\widgetDock_%3CSignal_List%3E\isVisible=false
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\widgetDock_%3CDecl._Tree%3E\isVisible=true
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\widgetDock_%3CDecl._Tree%3E\qBaseWindowBeMax=0
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\widgetDock_%3CDecl._Tree%3E\qBaseWindowBeFix=0
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\widgetDock_%3CDecl._Tree%3E\dockIsFloating=false
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\ProductVersion=201412
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\Layout="@ByteArray(\0\0\0\xff\0\0\0\0\xfd\0\0\0\x2\0\0\0\x2\0\0\a\x80\0\0\x2\x3\xfc\x1\0\0\0\x3\xfc\0\0\0\0\0\0\x2z\0\0\0\x89\0\xff\xff\xff\xfa\0\0\0\0\x1\0\0\0\x2\xfb\0\0\0.\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0<\0I\0n\0s\0t\0.\0_\0T\0r\0\x65\0\x65\0>\x1\0\0\0\0\xff\xff\xff\xff\0\0\0^\0\xff\xff\xff\xfb\0\0\0.\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0<\0\x44\0\x65\0\x63\0l\0.\0_\0T\0r\0\x65\0\x65\0>\x1\0\0\0\0\xff\xff\xff\xff\0\0\0^\0\xff\xff\xff\xfb\0\0\0\x30\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0<\0S\0i\0g\0n\0\x61\0l\0_\0L\0i\0s\0t\0>\0\0\0\x2\x15\0\0\x1=\0\0\x1\x18\0\xff\xff\xff\xfc\0\0\x2\x80\0\0\x5\0\0\0\x2\x1a\0\xff\xff\xff\xfa\0\0\0\x1\x1\0\0\0\x2\xfb\0\0\0\x36\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0M\0T\0\x42\0_\0S\0O\0U\0R\0\x43\0\x45\0_\0T\0\x41\0\x42\0_\0\x31\x1\0\0\0\0\xff\xff\xff\xff\0\0\0u\0\xff\xff\xff\xfb\0\0\0,\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0W\0\x65\0l\0\x63\0o\0m\0\x65\0P\0\x61\0g\0\x65\x1\0\0\0\0\xff\xff\xff\xff\0\0\x2\x1a\0\xff\xff\xff\0\0\0\x3\0\0\a\x80\0\0\x1\x93\xfc\x1\0\0\0\x1\xfc\0\0\0\0\0\0\a\x80\0\0\0\xa0\0\a\xff\xff\xfa\0\0\0\0\x1\0\0\0\x3\xfb\0\0\0(\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0<\0M\0\x65\0s\0s\0\x61\0g\0\x65\0>\x1\0\0\0\0\xff\xff\xff\xff\0\0\0\xa0\0\a\xff\xff\xfb\0\0\0$\0w\0i\0n\0\x64\0o\0w\0\x44\0o\0\x63\0k\0_\0n\0W\0\x61\0v\0\x65\0_\0\x32\x1\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\xfb\0\0\0$\0w\0i\0n\0\x64\0o\0w\0\x44\0o\0\x63\0k\0_\0n\0W\0\x61\0v\0\x65\0_\0\x33\x1\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\a\x80\0\0\0\0\0\0\0\x4\0\0\0\x4\0\0\0\b\0\0\0\b\xfc\0\0\0\x4\0\0\0\x2\0\0\0\r\0\0\0.\0H\0\x42\0_\0I\0M\0P\0O\0R\0T\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0(\0H\0\x42\0_\0N\0\x45\0W\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0$\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0(\0H\0\x42\0_\0S\0I\0G\0N\0\x41\0L\0_\0P\0\x41\0N\0\x45\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0~\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0H\0\x42\0_\0M\0U\0L\0T\0I\0_\0T\0\x41\0\x42\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0\xa2\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0*\0H\0\x42\0_\0\x45\0\x44\0I\0T\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0\xc6\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\x1\0\0\0\xea\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0,\0H\0\x42\0_\0T\0R\0\x41\0\x43\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x1\x18\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0.\0H\0\x42\0_\0S\0O\0U\0R\0\x43\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x2/\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0,\0t\0o\0o\0l\0\x62\0\x61\0r\0H\0\x42\0_\0T\0O\0G\0G\0L\0\x45\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x3\x1\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x30\0t\0o\0o\0l\0\x62\0\x61\0r\0H\0\x42\0_\0P\0R\0O\0\x44\0T\0Y\0P\0\x45\0_\0P\0\x41\0N\0\x45\0L\0\0\0\x3\x16\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0<\0\x41\0\x42\0V\0_\0\x41\0\x44\0\x44\0_\0T\0\x45\0M\0P\0O\0R\0\x41\0R\0Y\0_\0\x41\0S\0S\0\x45\0R\0T\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x3@\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x1e\0U\0V\0M\0_\0\x41\0W\0\x41\0R\0\x45\0_\0\x44\0\x45\0\x42\0U\0G\x1\0\0\x3\x64\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x18\0V\0I\0\x41\0_\0T\0O\0O\0L\0_\0\x42\0O\0X\x1\0\0\x3\x92\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x2\0\0\0\x4\0\0\0&\0H\0\x42\0_\0\x42\0\x41\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x30\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\x1P\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0>\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0R\0\x45\0W\0I\0N\0\x44\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0R\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0R\0\x45\0W\0I\0N\0\x44\0_\0U\0N\0\x44\0O\0_\0R\0\x45\0\x44\0O\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\x1\x5\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x2\0\0\0\x5\0\0\0@\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0R\0\x45\0V\0\x45\0R\0S\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x38\0H\0\x42\0_\0P\0O\0W\0\x45\0R\0_\0T\0R\0\x41\0\x43\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0P\0\x44\0M\0L\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0H\0\x42\0_\0P\0\x41\0_\0\x44\0O\0M\0\x41\0I\0N\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\"\0H\0\x42\0_\0P\0\x41\0_\0S\0T\0\x41\0T\0\x45\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x2\0\0\0\x1\0\0\0:\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0V\0S\0I\0M\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0)"
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\isNestedWindow=0
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\isVisible=true
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\size=@Size(1920 1002)
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\geometry_x=0
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\geometry_y=0
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\geometry_width=1920
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\geometry_height=1002
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\windowDock_nWave_2\isNestedWindow=1
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\windowDock_nWave_2\isVisible=true
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\windowDock_nWave_2\qBaseWindowBeMax=0
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\windowDock_nWave_2\qBaseWindowBeFix=0
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\windowDock_nWave_2\dockIsFloating=false
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\widgetDock_WelcomePage\isVisible=true
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\widgetDock_WelcomePage\qBaseWindowBeMax=0
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\widgetDock_WelcomePage\qBaseWindowBeFix=0
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\widgetDock_WelcomePage\dockIsFloating=false
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qBaseDockWidgetGroup\widgetDock_hdlHier_1\qBaseWindowBeMax=0
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qBaseDockWidgetGroup\widgetDock_hdlHier_1\qBaseWindowBeFix=0
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qBaseDockWidgetGroup\widgetDock_hdlHier_1\dockIsFloating=false
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qBaseDockWidgetGroup\widgetDock_messageWindow_1\qBaseWindowBeMax=0
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qBaseDockWidgetGroup\widgetDock_messageWindow_1\qBaseWindowBeFix=0
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qBaseDockWidgetGroup\widgetDock_messageWindow_1\dockIsFloating=false
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qBaseDockWidgetGroup\widgetDock_hdlSrc_1\qBaseWindowBeMax=0
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qBaseDockWidgetGroup\widgetDock_hdlSrc_1\qBaseWindowBeFix=0
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qBaseDockWidgetGroup\widgetDock_hdlSrc_1\dockIsFloating=false
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qBaseDockWidgetGroup\widgetDock_svtbHier_1\qBaseWindowBeMax=0
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qBaseDockWidgetGroup\widgetDock_svtbHier_1\qBaseWindowBeFix=0
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qBaseDockWidgetGroup\widgetDock_svtbHier_1\dockIsFloating=false
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qBaseDockWidgetGroup\windowDock_nWave_1\qBaseWindowBeMax=0
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qBaseDockWidgetGroup\windowDock_nWave_1\qBaseWindowBeFix=0
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qBaseDockWidgetGroup\windowDock_nWave_1\dockIsFloating=false
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\windowDock_nWave_3\isNestedWindow=1
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\windowDock_nWave_3\isVisible=true
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\windowDock_nWave_3\qBaseWindowBeMax=0
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\windowDock_nWave_3\qBaseWindowBeFix=0
Verdi_1\qBaseWindowRestoreStateGroup\backup_layout_to_restore\qBaseDockWidgetGroup\windowDock_nWave_3\dockIsFloating=false
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qBaseDockWidgetGroup\windowDock_nWave_1\SELECTION_MESSAGE_TOOLBAR=false
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qBaseDockWidgetGroup\widgetDock_WelcomePage_1\qBaseWindowBeMax=1
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qBaseDockWidgetGroup\widgetDock_WelcomePage_1\qBaseWindowBeFix=0
Verdi_1\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qBaseDockWidgetGroup\widgetDock_WelcomePage_1\dockIsFloating=false
qDockerWindowMgr_C\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qDockerWindow_qDockContentType\hdlHier=1
qDockerWindowMgr_C\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qDockerWindow_qDockContentType\hdlSrc=1
qDockerWindowMgr_C\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qDockerWindow_qDockContentType\messageWindow=1
qDockerWindowMgr_C\qBaseWindowRestoreStateGroup\VERDI_LAST_RUN_LAYOUT\qDockerWindow_qDockContentType\svtbHier=1
Verdi_1\qBaseWindowNextStateGroup\0\qDockerWindow_restoreNewChildState=true
Verdi_1\qBaseWindowNextStateGroup\0\qBaseDockWidgetGroup\widgetDock_%3CInst._Tree%3E\isVisible=true
Verdi_1\qBaseWindowNextStateGroup\0\qBaseDockWidgetGroup\widgetDock_%3CInst._Tree%3E\qBaseWindowBeMax=0
Verdi_1\qBaseWindowNextStateGroup\0\qBaseDockWidgetGroup\widgetDock_%3CInst._Tree%3E\qBaseWindowBeFix=0
Verdi_1\qBaseWindowNextStateGroup\0\qBaseDockWidgetGroup\widgetDock_%3CInst._Tree%3E\dockIsFloating=false
Verdi_1\qBaseWindowNextStateGroup\0\qBaseDockWidgetGroup\widgetDock_%3CMessage%3E\isVisible=true
Verdi_1\qBaseWindowNextStateGroup\0\qBaseDockWidgetGroup\widgetDock_%3CMessage%3E\qBaseWindowBeMax=0
Verdi_1\qBaseWindowNextStateGroup\0\qBaseDockWidgetGroup\widgetDock_%3CMessage%3E\qBaseWindowBeFix=0
Verdi_1\qBaseWindowNextStateGroup\0\qBaseDockWidgetGroup\widgetDock_%3CMessage%3E\dockIsFloating=false
Verdi_1\qBaseWindowNextStateGroup\0\qBaseDockWidgetGroup\widgetDock_MTB_SOURCE_TAB_1\isVisible=true
Verdi_1\qBaseWindowNextStateGroup\0\qBaseDockWidgetGroup\widgetDock_MTB_SOURCE_TAB_1\qBaseWindowBeMax=0
Verdi_1\qBaseWindowNextStateGroup\0\qBaseDockWidgetGroup\widgetDock_MTB_SOURCE_TAB_1\qBaseWindowBeFix=0
Verdi_1\qBaseWindowNextStateGroup\0\qBaseDockWidgetGroup\widgetDock_MTB_SOURCE_TAB_1\dockIsFloating=false
Verdi_1\qBaseWindowNextStateGroup\0\qBaseDockWidgetGroup\widgetDock_%3CSignal_List%3E\isVisible=false
Verdi_1\qBaseWindowNextStateGroup\0\qBaseDockWidgetGroup\widgetDock_%3CDecl._Tree%3E\isVisible=true
Verdi_1\qBaseWindowNextStateGroup\0\qBaseDockWidgetGroup\widgetDock_%3CDecl._Tree%3E\qBaseWindowBeMax=0
Verdi_1\qBaseWindowNextStateGroup\0\qBaseDockWidgetGroup\widgetDock_%3CDecl._Tree%3E\qBaseWindowBeFix=0
Verdi_1\qBaseWindowNextStateGroup\0\qBaseDockWidgetGroup\widgetDock_%3CDecl._Tree%3E\dockIsFloating=false
Verdi_1\qBaseWindowNextStateGroup\0\ProductVersion=201412
Verdi_1\qBaseWindowNextStateGroup\0\Layout="@ByteArray(\0\0\0\xff\0\0\0\0\xfd\0\0\0\x2\0\0\0\x2\0\0\a\x80\0\0\x1\xea\xfc\x1\0\0\0\x3\xfc\0\0\0\0\0\0\x2z\0\0\0\x89\0\xff\xff\xff\xfa\0\0\0\0\x1\0\0\0\x2\xfb\0\0\0.\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0<\0I\0n\0s\0t\0.\0_\0T\0r\0\x65\0\x65\0>\x1\0\0\0\0\xff\xff\xff\xff\0\0\0^\0\xff\xff\xff\xfb\0\0\0.\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0<\0\x44\0\x65\0\x63\0l\0.\0_\0T\0r\0\x65\0\x65\0>\x1\0\0\0\0\xff\xff\xff\xff\0\0\0^\0\xff\xff\xff\xfb\0\0\0\x30\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0<\0S\0i\0g\0n\0\x61\0l\0_\0L\0i\0s\0t\0>\0\0\0\x2\x15\0\0\x1=\0\0\x1\x18\0\xff\xff\xff\xfc\0\0\x2\x80\0\0\x5\0\0\0\0\x89\0\xff\xff\xff\xfa\0\0\0\0\x1\0\0\0\x2\xfb\0\0\0\x36\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0M\0T\0\x42\0_\0S\0O\0U\0R\0\x43\0\x45\0_\0T\0\x41\0\x42\0_\0\x31\x1\0\0\0\0\xff\xff\xff\xff\0\0\0u\0\xff\xff\xff\xfb\0\0\0,\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0W\0\x65\0l\0\x63\0o\0m\0\x65\0P\0\x61\0g\0\x65\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x3\0\0\a\x80\0\0\x1\x99\xfc\x1\0\0\0\x1\xfc\0\0\0\0\0\0\a\x80\0\0\0\xa0\0\xff\xff\xff\xfa\0\0\0\0\x1\0\0\0\x3\xfb\0\0\0(\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0<\0M\0\x65\0s\0s\0\x61\0g\0\x65\0>\x1\0\0\0\0\xff\xff\xff\xff\0\0\0\xa0\0\xff\xff\xff\xfb\0\0\0$\0w\0i\0n\0\x64\0o\0w\0\x44\0o\0\x63\0k\0_\0n\0W\0\x61\0v\0\x65\0_\0\x32\x1\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\xfb\0\0\0$\0w\0i\0n\0\x64\0o\0w\0\x44\0o\0\x63\0k\0_\0n\0W\0\x61\0v\0\x65\0_\0\x33\x1\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\a\x80\0\0\0\0\0\0\0\x4\0\0\0\x4\0\0\0\b\0\0\0\b\xfc\0\0\0\x4\0\0\0\x2\0\0\0\r\0\0\0.\0H\0\x42\0_\0I\0M\0P\0O\0R\0T\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0(\0H\0\x42\0_\0N\0\x45\0W\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0$\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0(\0H\0\x42\0_\0S\0I\0G\0N\0\x41\0L\0_\0P\0\x41\0N\0\x45\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0~\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0H\0\x42\0_\0M\0U\0L\0T\0I\0_\0T\0\x41\0\x42\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0\xa2\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0*\0H\0\x42\0_\0\x45\0\x44\0I\0T\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0\xc6\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\x1\0\0\0\xea\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0,\0H\0\x42\0_\0T\0R\0\x41\0\x43\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x1\x18\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0.\0H\0\x42\0_\0S\0O\0U\0R\0\x43\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x2/\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0,\0t\0o\0o\0l\0\x62\0\x61\0r\0H\0\x42\0_\0T\0O\0G\0G\0L\0\x45\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x3\x1\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x30\0t\0o\0o\0l\0\x62\0\x61\0r\0H\0\x42\0_\0P\0R\0O\0\x44\0T\0Y\0P\0\x45\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x3\x16\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0<\0\x41\0\x42\0V\0_\0\x41\0\x44\0\x44\0_\0T\0\x45\0M\0P\0O\0R\0\x41\0R\0Y\0_\0\x41\0S\0S\0\x45\0R\0T\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x3\x1f\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x1e\0U\0V\0M\0_\0\x41\0W\0\x41\0R\0\x45\0_\0\x44\0\x45\0\x42\0U\0G\x1\0\0\x3\x43\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x18\0V\0I\0\x41\0_\0T\0O\0O\0L\0_\0\x42\0O\0X\x1\0\0\x3q\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x2\0\0\0\x4\0\0\0&\0H\0\x42\0_\0\x42\0\x41\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x30\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\x1P\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0>\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0R\0\x45\0W\0I\0N\0\x44\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0R\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0R\0\x45\0W\0I\0N\0\x44\0_\0U\0N\0\x44\0O\0_\0R\0\x45\0\x44\0O\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\x1\x5\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x2\0\0\0\x5\0\0\0@\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0R\0\x45\0V\0\x45\0R\0S\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x38\0H\0\x42\0_\0P\0O\0W\0\x45\0R\0_\0T\0R\0\x41\0\x43\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0P\0\x44\0M\0L\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0H\0\x42\0_\0P\0\x41\0_\0\x44\0O\0M\0\x41\0I\0N\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\"\0H\0\x42\0_\0P\0\x41\0_\0S\0T\0\x41\0T\0\x45\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x2\0\0\0\x1\0\0\0:\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0V\0S\0I\0M\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0)"
Verdi_1\qBaseWindowNextStateGroup\0\isNestedWindow=0
Verdi_1\qBaseWindowNextStateGroup\0\isVisible=true
Verdi_1\qBaseWindowNextStateGroup\0\size=@Size(1920 983)
Verdi_1\qBaseWindowNextStateGroup\0\geometry_x=0
Verdi_1\qBaseWindowNextStateGroup\0\geometry_y=0
Verdi_1\qBaseWindowNextStateGroup\0\geometry_width=1920
Verdi_1\qBaseWindowNextStateGroup\0\geometry_height=983
Verdi_1\qBaseWindowNextStateGroup\1\qDockerWindow_restoreNewChildState=true
Verdi_1\qBaseWindowNextStateGroup\1\qBaseDockWidgetGroup\widgetDock_%3CInst._Tree%3E\isVisible=false
Verdi_1\qBaseWindowNextStateGroup\1\qBaseDockWidgetGroup\widgetDock_%3CMessage%3E\isVisible=false
Verdi_1\qBaseWindowNextStateGroup\1\qBaseDockWidgetGroup\widgetDock_MTB_SOURCE_TAB_1\isVisible=false
Verdi_1\qBaseWindowNextStateGroup\1\qBaseDockWidgetGroup\widgetDock_%3CSignal_List%3E\isVisible=false
Verdi_1\qBaseWindowNextStateGroup\1\qBaseDockWidgetGroup\widgetDock_%3CDecl._Tree%3E\isVisible=false
Verdi_1\qBaseWindowNextStateGroup\1\qBaseDockWidgetGroup\widgetDock_WelcomePage\isVisible=true
Verdi_1\qBaseWindowNextStateGroup\1\qBaseDockWidgetGroup\widgetDock_WelcomePage\qBaseWindowBeMax=1
Verdi_1\qBaseWindowNextStateGroup\1\qBaseDockWidgetGroup\widgetDock_WelcomePage\qBaseWindowBeFix=0
Verdi_1\qBaseWindowNextStateGroup\1\qBaseDockWidgetGroup\widgetDock_WelcomePage\dockIsFloating=false
Verdi_1\qBaseWindowNextStateGroup\1\ProductVersion=201412
Verdi_1\qBaseWindowNextStateGroup\1\Layout="@ByteArray(\0\0\0\xff\0\0\0\x1\xfd\0\0\0\x2\0\0\0\x2\0\0\a\x80\0\0\x2\x3\xfc\x1\0\0\0\x3\xfc\0\0\0\0\0\0\x2z\0\0\0\0\0\xff\xff\xff\xfa\0\0\0\0\x1\0\0\0\x2\xfb\0\0\0.\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0<\0I\0n\0s\0t\0.\0_\0T\0r\0\x65\0\x65\0>\0\0\0\0\0\xff\xff\xff\xff\0\0\0^\0\xff\xff\xff\xfb\0\0\0.\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0<\0\x44\0\x65\0\x63\0l\0.\0_\0T\0r\0\x65\0\x65\0>\0\0\0\0\0\xff\xff\xff\xff\0\0\0^\0\xff\xff\xff\xfb\0\0\0\x30\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0<\0S\0i\0g\0n\0\x61\0l\0_\0L\0i\0s\0t\0>\0\0\0\x2\x15\0\0\x1=\0\0\x1\x18\0\xff\xff\xff\xfc\0\0\x2\x80\0\0\x5\0\0\0\x2\x1a\0\xff\xff\xff\xfa\0\0\0\x1\x1\0\0\0\x2\xfb\0\0\0\x36\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0M\0T\0\x42\0_\0S\0O\0U\0R\0\x43\0\x45\0_\0T\0\x41\0\x42\0_\0\x31\0\0\0\0\0\xff\xff\xff\xff\0\0\0u\0\xff\xff\xff\xfb\0\0\0,\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0W\0\x65\0l\0\x63\0o\0m\0\x65\0P\0\x61\0g\0\x65\x1\0\0\0\0\xff\xff\xff\xff\0\0\x2\x1a\0\xff\xff\xff\0\0\0\x3\0\0\a\x80\0\0\x1\x93\xfc\x1\0\0\0\x1\xfc\0\0\0\0\0\0\a\x80\0\0\0\0\0\xff\xff\xff\xfa\0\0\0\0\x1\0\0\0\x3\xfb\0\0\0(\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0<\0M\0\x65\0s\0s\0\x61\0g\0\x65\0>\0\0\0\0\0\xff\xff\xff\xff\0\0\0\xa0\0\a\xff\xff\xfb\0\0\0$\0w\0i\0n\0\x64\0o\0w\0\x44\0o\0\x63\0k\0_\0n\0W\0\x61\0v\0\x65\0_\0\x32\x1\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\xfb\0\0\0$\0w\0i\0n\0\x64\0o\0w\0\x44\0o\0\x63\0k\0_\0n\0W\0\x61\0v\0\x65\0_\0\x33\x1\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\a\x80\0\0\0\0\0\0\0\x4\0\0\0\x4\0\0\0\b\0\0\0\b\xfc\0\0\0\x4\0\0\0\x2\0\0\0\r\0\0\0.\0H\0\x42\0_\0I\0M\0P\0O\0R\0T\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0(\0H\0\x42\0_\0N\0\x45\0W\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0$\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0(\0H\0\x42\0_\0S\0I\0G\0N\0\x41\0L\0_\0P\0\x41\0N\0\x45\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0~\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0H\0\x42\0_\0M\0U\0L\0T\0I\0_\0T\0\x41\0\x42\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0\xa2\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0*\0H\0\x42\0_\0\x45\0\x44\0I\0T\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0\xc6\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\x1\0\0\0\xea\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0,\0H\0\x42\0_\0T\0R\0\x41\0\x43\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x1\x18\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0.\0H\0\x42\0_\0S\0O\0U\0R\0\x43\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x2/\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0,\0t\0o\0o\0l\0\x62\0\x61\0r\0H\0\x42\0_\0T\0O\0G\0G\0L\0\x45\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x3\x1\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x30\0t\0o\0o\0l\0\x62\0\x61\0r\0H\0\x42\0_\0P\0R\0O\0\x44\0T\0Y\0P\0\x45\0_\0P\0\x41\0N\0\x45\0L\0\0\0\x3\x16\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0<\0\x41\0\x42\0V\0_\0\x41\0\x44\0\x44\0_\0T\0\x45\0M\0P\0O\0R\0\x41\0R\0Y\0_\0\x41\0S\0S\0\x45\0R\0T\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x3@\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x1e\0U\0V\0M\0_\0\x41\0W\0\x41\0R\0\x45\0_\0\x44\0\x45\0\x42\0U\0G\x1\0\0\x3\x64\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x18\0V\0I\0\x41\0_\0T\0O\0O\0L\0_\0\x42\0O\0X\x1\0\0\x3\x92\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x2\0\0\0\x4\0\0\0&\0H\0\x42\0_\0\x42\0\x41\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x30\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\x1P\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0>\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0R\0\x45\0W\0I\0N\0\x44\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0R\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0R\0\x45\0W\0I\0N\0\x44\0_\0U\0N\0\x44\0O\0_\0R\0\x45\0\x44\0O\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\x1\x5\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x2\0\0\0\x5\0\0\0@\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0R\0\x45\0V\0\x45\0R\0S\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x38\0H\0\x42\0_\0P\0O\0W\0\x45\0R\0_\0T\0R\0\x41\0\x43\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0P\0\x44\0M\0L\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0H\0\x42\0_\0P\0\x41\0_\0\x44\0O\0M\0\x41\0I\0N\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\"\0H\0\x42\0_\0P\0\x41\0_\0S\0T\0\x41\0T\0\x45\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x2\0\0\0\x1\0\0\0:\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0V\0S\0I\0M\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0)"
Verdi_1\qBaseWindowNextStateGroup\1\isNestedWindow=0
Verdi_1\qBaseWindowNextStateGroup\1\isVisible=true
Verdi_1\qBaseWindowNextStateGroup\1\size=@Size(1920 1002)
Verdi_1\qBaseWindowNextStateGroup\1\geometry_x=0
Verdi_1\qBaseWindowNextStateGroup\1\geometry_y=0
Verdi_1\qBaseWindowNextStateGroup\1\geometry_width=1920
Verdi_1\qBaseWindowNextStateGroup\1\geometry_height=1002
Verdi_1\qBaseWindowNextStateGroup\2\qDockerWindow_restoreNewChildState=true
Verdi_1\qBaseWindowNextStateGroup\2\qBaseDockWidgetGroup\widgetDock_%3CInst._Tree%3E\isVisible=true
Verdi_1\qBaseWindowNextStateGroup\2\qBaseDockWidgetGroup\widgetDock_%3CInst._Tree%3E\qBaseWindowBeMax=0
Verdi_1\qBaseWindowNextStateGroup\2\qBaseDockWidgetGroup\widgetDock_%3CInst._Tree%3E\qBaseWindowBeFix=0
Verdi_1\qBaseWindowNextStateGroup\2\qBaseDockWidgetGroup\widgetDock_%3CInst._Tree%3E\dockIsFloating=false
Verdi_1\qBaseWindowNextStateGroup\2\qBaseDockWidgetGroup\widgetDock_%3CMessage%3E\isVisible=true
Verdi_1\qBaseWindowNextStateGroup\2\qBaseDockWidgetGroup\widgetDock_%3CMessage%3E\qBaseWindowBeMax=0
Verdi_1\qBaseWindowNextStateGroup\2\qBaseDockWidgetGroup\widgetDock_%3CMessage%3E\qBaseWindowBeFix=0
Verdi_1\qBaseWindowNextStateGroup\2\qBaseDockWidgetGroup\widgetDock_%3CMessage%3E\dockIsFloating=false
Verdi_1\qBaseWindowNextStateGroup\2\qBaseDockWidgetGroup\widgetDock_MTB_SOURCE_TAB_1\isVisible=true
Verdi_1\qBaseWindowNextStateGroup\2\qBaseDockWidgetGroup\widgetDock_MTB_SOURCE_TAB_1\qBaseWindowBeMax=0
Verdi_1\qBaseWindowNextStateGroup\2\qBaseDockWidgetGroup\widgetDock_MTB_SOURCE_TAB_1\qBaseWindowBeFix=0
Verdi_1\qBaseWindowNextStateGroup\2\qBaseDockWidgetGroup\widgetDock_MTB_SOURCE_TAB_1\dockIsFloating=false
Verdi_1\qBaseWindowNextStateGroup\2\qBaseDockWidgetGroup\widgetDock_%3CSignal_List%3E\isVisible=false
Verdi_1\qBaseWindowNextStateGroup\2\qBaseDockWidgetGroup\widgetDock_%3CDecl._Tree%3E\isVisible=true
Verdi_1\qBaseWindowNextStateGroup\2\qBaseDockWidgetGroup\widgetDock_%3CDecl._Tree%3E\qBaseWindowBeMax=0
Verdi_1\qBaseWindowNextStateGroup\2\qBaseDockWidgetGroup\widgetDock_%3CDecl._Tree%3E\qBaseWindowBeFix=0
Verdi_1\qBaseWindowNextStateGroup\2\qBaseDockWidgetGroup\widgetDock_%3CDecl._Tree%3E\dockIsFloating=false
Verdi_1\qBaseWindowNextStateGroup\2\qBaseDockWidgetGroup\widgetDock_WelcomePage\isVisible=true
Verdi_1\qBaseWindowNextStateGroup\2\qBaseDockWidgetGroup\widgetDock_WelcomePage\qBaseWindowBeMax=0
Verdi_1\qBaseWindowNextStateGroup\2\qBaseDockWidgetGroup\widgetDock_WelcomePage\qBaseWindowBeFix=0
Verdi_1\qBaseWindowNextStateGroup\2\qBaseDockWidgetGroup\widgetDock_WelcomePage\dockIsFloating=false
Verdi_1\qBaseWindowNextStateGroup\2\ProductVersion=201412
Verdi_1\qBaseWindowNextStateGroup\2\Layout="@ByteArray(\0\0\0\xff\0\0\0\x2\xfd\0\0\0\x2\0\0\0\x2\0\0\a\x80\0\0\x2\x3\xfc\x1\0\0\0\x3\xfc\0\0\0\0\0\0\x2z\0\0\0\x89\0\xff\xff\xff\xfa\0\0\0\0\x1\0\0\0\x2\xfb\0\0\0.\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0<\0I\0n\0s\0t\0.\0_\0T\0r\0\x65\0\x65\0>\x1\0\0\0\0\xff\xff\xff\xff\0\0\0^\0\xff\xff\xff\xfb\0\0\0.\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0<\0\x44\0\x65\0\x63\0l\0.\0_\0T\0r\0\x65\0\x65\0>\x1\0\0\0\0\xff\xff\xff\xff\0\0\0^\0\xff\xff\xff\xfb\0\0\0\x30\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0<\0S\0i\0g\0n\0\x61\0l\0_\0L\0i\0s\0t\0>\0\0\0\x2\x15\0\0\x1=\0\0\x1\x18\0\xff\xff\xff\xfc\0\0\x2\x80\0\0\x5\0\0\0\x2\x1a\0\xff\xff\xff\xfa\0\0\0\x1\x1\0\0\0\x2\xfb\0\0\0\x36\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0M\0T\0\x42\0_\0S\0O\0U\0R\0\x43\0\x45\0_\0T\0\x41\0\x42\0_\0\x31\x1\0\0\0\0\xff\xff\xff\xff\0\0\0u\0\xff\xff\xff\xfb\0\0\0,\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0W\0\x65\0l\0\x63\0o\0m\0\x65\0P\0\x61\0g\0\x65\x1\0\0\0\0\xff\xff\xff\xff\0\0\x2\x1a\0\xff\xff\xff\0\0\0\x3\0\0\a\x80\0\0\x1\x93\xfc\x1\0\0\0\x1\xfc\0\0\0\0\0\0\a\x80\0\0\0\xa0\0\a\xff\xff\xfa\0\0\0\0\x1\0\0\0\x3\xfb\0\0\0(\0w\0i\0\x64\0g\0\x65\0t\0\x44\0o\0\x63\0k\0_\0<\0M\0\x65\0s\0s\0\x61\0g\0\x65\0>\x1\0\0\0\0\xff\xff\xff\xff\0\0\0\xa0\0\a\xff\xff\xfb\0\0\0$\0w\0i\0n\0\x64\0o\0w\0\x44\0o\0\x63\0k\0_\0n\0W\0\x61\0v\0\x65\0_\0\x32\x1\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\xfb\0\0\0$\0w\0i\0n\0\x64\0o\0w\0\x44\0o\0\x63\0k\0_\0n\0W\0\x61\0v\0\x65\0_\0\x33\x1\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\a\x80\0\0\0\0\0\0\0\x4\0\0\0\x4\0\0\0\b\0\0\0\b\xfc\0\0\0\x4\0\0\0\x2\0\0\0\r\0\0\0.\0H\0\x42\0_\0I\0M\0P\0O\0R\0T\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0(\0H\0\x42\0_\0N\0\x45\0W\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0$\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0(\0H\0\x42\0_\0S\0I\0G\0N\0\x41\0L\0_\0P\0\x41\0N\0\x45\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0~\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0H\0\x42\0_\0M\0U\0L\0T\0I\0_\0T\0\x41\0\x42\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0\xa2\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0*\0H\0\x42\0_\0\x45\0\x44\0I\0T\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\0\xc6\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\x1\0\0\0\xea\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0,\0H\0\x42\0_\0T\0R\0\x41\0\x43\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x1\x18\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0.\0H\0\x42\0_\0S\0O\0U\0R\0\x43\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x2/\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0,\0t\0o\0o\0l\0\x62\0\x61\0r\0H\0\x42\0_\0T\0O\0G\0G\0L\0\x45\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x3\x1\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x30\0t\0o\0o\0l\0\x62\0\x61\0r\0H\0\x42\0_\0P\0R\0O\0\x44\0T\0Y\0P\0\x45\0_\0P\0\x41\0N\0\x45\0L\0\0\0\x3\x16\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0<\0\x41\0\x42\0V\0_\0\x41\0\x44\0\x44\0_\0T\0\x45\0M\0P\0O\0R\0\x41\0R\0Y\0_\0\x41\0S\0S\0\x45\0R\0T\0_\0P\0\x41\0N\0\x45\0L\x1\0\0\x3@\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x1e\0U\0V\0M\0_\0\x41\0W\0\x41\0R\0\x45\0_\0\x44\0\x45\0\x42\0U\0G\x1\0\0\x3\x64\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x18\0V\0I\0\x41\0_\0T\0O\0O\0L\0_\0\x42\0O\0X\x1\0\0\x3\x92\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x2\0\0\0\x4\0\0\0&\0H\0\x42\0_\0\x42\0\x41\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x30\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\x1P\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0>\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0R\0\x45\0W\0I\0N\0\x44\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0R\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0R\0\x45\0W\0I\0N\0\x44\0_\0U\0N\0\x44\0O\0_\0R\0\x45\0\x44\0O\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\x1\x5\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x2\0\0\0\x5\0\0\0@\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0R\0\x45\0V\0\x45\0R\0S\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x38\0H\0\x42\0_\0P\0O\0W\0\x45\0R\0_\0T\0R\0\x41\0\x43\0\x45\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0P\0\x44\0M\0L\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0$\0H\0\x42\0_\0P\0\x41\0_\0\x44\0O\0M\0\x41\0I\0N\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\"\0H\0\x42\0_\0P\0\x41\0_\0S\0T\0\x41\0T\0\x45\0_\0P\0\x41\0N\0\x45\0L\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\0\0\0\x2\0\0\0\x1\0\0\0:\0N\0O\0V\0\x41\0S\0_\0T\0\x42\0\x42\0R\0_\0\x44\0\x45\0\x42\0U\0G\0_\0V\0S\0I\0M\0_\0\x43\0O\0M\0M\0\x41\0N\0\x44\0\0\0\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0)"
Verdi_1\qBaseWindowNextStateGroup\2\isNestedWindow=0
Verdi_1\qBaseWindowNextStateGroup\2\isVisible=true
Verdi_1\qBaseWindowNextStateGroup\2\size=@Size(1920 1002)
Verdi_1\qBaseWindowNextStateGroup\2\geometry_x=0
Verdi_1\qBaseWindowNextStateGroup\2\geometry_y=0
Verdi_1\qBaseWindowNextStateGroup\2\geometry_width=1920
Verdi_1\qBaseWindowNextStateGroup\2\geometry_height=1002

[qBaseWindow_saveRestoreSession_group]
10=/haydn/marshall/django_test/vrg_site/verdiLog/novas_autosave.ses

[qDockerWindow_C]
Verdi_1\position.x=0
Verdi_1\position.y=0
Verdi_1\width=1920
Verdi_1\height=1002
Felix: The file is novas.rc, num is 8 

@verdi rc file Version 1.0
[Library]
work = ./work
[Annotation]
3D_Active_Annotation = FALSE
[CommandSyntax.finsim]
InvokeCommand = 
FullFileName = TRUE
Separator = .
SimPromptSign = ">"
HierNameLevel = 1
RunContinue = "continue"
Finish = "quit"
UseAbsTime = FALSE
NextTime = "run 1"
NextNTime = "run ${SimBPTime}"
NextEvent = "run 1"
Reset = 
ObjPosBreak = "break posedge ${SimBPObj}"
ObjNegBreak = "break negedge ${SimBPObj}"
ObjAnyBreak = "break change ${SimBPObj}"
ObjLevelBreak = 
LineBreak = "breakline ${SimBPFile} ${SimBPLine}"
AbsTimeBreak = "break abstimeaf ${SimBPTime}"
RelTimeBreak = "break reltimeaf ${SimBPTime}"
EnableBP = "breakon ${SimBPId}"
DisableBP = "breakoff ${SimBPId}"
DeleteBP = "breakclr ${SimBPId}"
DeleteAllBP = "breakclr"
SimSetScope = "cd ${SimDmpObj}"
[CommandSyntax.ikos]
InvokeCommand = "setvar debussy true;elaborate -p ${SimTop} -s ${SimArch}; run until 0;fsdbInteractive; "
FullFileName = TRUE
NeedTimeUnit = TRUE
NormalizeTimeUnit = TRUE
Separator = /
HierNameLevel = 2
RunContinue = "run"
Finish = "exit"
NextTime = "run ${SimBPTime} ${SimTimeUnit}"
NextNTime = "run for ${SimBPTime} ${SimTimeUnit}"
NextEvent = "step 1"
Reset = "reset"
ObjPosBreak = "stop if ${SimBPObj} = \"'1'\""
ObjNegBreak = "stop if ${SimBPObj} = \"'0'\""
ObjAnyBreak = 
ObjLevelBreak = "stop if ${SimBPObj} = ${SimBPValue}"
LineBreak = "stop at ${SimBPFile}:${SimBPLine}"
AbsTimeBreak = 
RelTimeBreak = 
EnableBP = "enable ${SimBPId}"
DisableBP = "disable ${SimBPId}"
DeleteBP = "delete ${SimBPId}"
DeleteAllBP = "delete *"
[CommandSyntax.verisity]
InvokeCommand = 
FullFileName = FALSE
Separator = .
SimPromptSign = "> "
HierNameLevel = 1
RunContinue = "."
Finish = "$finish;"
NextTime = "$db_steptime(1);"
NextNTime = "$db_steptime(${SimBPTime});"
NextEvent = "$db_step;"
SimSetScope = "$scope(${SimDmpObj});"
Reset = "$reset;"
ObjPosBreak = "$db_breakonposedge(${SimBPObj});"
ObjNegBreak = "$db_breakonnegedge(${SimBPObj});"
ObjAnyBreak = "$db_breakwhen(${SimBPObj});"
ObjLevelBreak = "$db_breakwhen(${SimBPObj}, ${SimBPValue});"
LineBreak = "$db_breakatline(${SimBPLine}, ${SimBPScope}, \"${SimBPFile}\");"
AbsTimeBreak = "$db_breakbeforetime(${SimBPTime});"
RelTimeBreak = "$db_breakbeforetime(${SimBPTime});"
EnableBP = "$db_enablebreak(${SimBPId});"
DisableBP = "$db_disablebreak(${SimBPId});"
DeleteBP = "$db_deletebreak(${SimBPId});"
DeleteAllBP = "$db_deletebreak;"
FSDBInit = "$novasInteractive;"
FSDBDumpvars = "$novasDumpvars(0, ${SimDmpObj});"
FSDBDumpsingle = "$novasDumpsingle(${SimDmpObj});"
FSDBDumpvarsInFile = "$novasDumpvarsToFile(\"${SimDmpFile}\");"
FSDBDumpMem = "$novasDumpMemNow(${SimDmpObj}, ${SimDmpBegin}, ${SimDmpSize});"
[CoverageDetail]
branch_limit_vector_display = 50
showgrid = FALSE
reuseFirst = TRUE
justify = TRUE
scrollbar_mode = per pane
test_combo_left_truncate = TRUE
instance_combo_left_truncate = TRUE
loop_navigation = TRUE
condSubExpr = 20
tglMda = 1000
linecoverable = 100000
lineuncovered = 50000
tglcoverable = 30000
tgluncovered = 30000
[CoverageHier]
showgrid = FALSE
[CoverageWeight]
Assert = 1
Covergroup = 1
Line = 1
Condition = 1
Toggle = 1
FSM = 1
Branch = 1
[DesignTree]
IfShowModule = {TRUE, FALSE}
[DisabledMessages]
version = Verdi3_J-2014.12-SP1
[DynamicDataBrowser]
DataWinBackground = ID_WHITE
DataWinForeground = ID_BLACK
Transition = ID_GREEN2
TransitionToEmpty = ID_GRAY3
HighLight = ID_BLUE5
[Editor]
editorName = TurboEditor
[Emacs]
EmacsFont = "Clean 14"
EmacsBG = white
EmacsFG = black
[Exclusion]
enableAsDefault = TRUE
saveAsDefault = TRUE
saveManually = TRUE
illegalBehavior = FALSE
DisplayExcludedItem = FALSE
adaptiveExclusion = TRUE
[FSM]
viewport = 65 336 387 479
WndBk-FillColor = Gray3
Background-FillColor = gray5
prefKey_Link-FillColor = yellow4
prefKey_Link-TextColor = black
Trap = red3
Hilight = blue4
Window = Gray3
Selected = white
Trans. = green2
State = black
Init. = black
SmartTips = TRUE
VectorFont = FALSE
StopAskBkgndColor = FALSE
ShowStateAction = FALSE
ShowTransAction = FALSE
ShowTransCond = FALSE
StateLable = NAME
StateValueRadix = ORIG
State-LineColor = ID_BLACK
State-LineWidth = 1
State-FillColor = ID_BLUE2
State-TextColor = ID_WHITE
Init_State-LineColor = ID_BLACK
Init_State-LineWidth = 2
Init_State-FillColor = ID_YELLOW2
Init_State-TextColor = ID_BLACK
Reset_State-LineColor = ID_BLACK
Reset_State-LineWidth = 2
Reset_State-FillColor = ID_YELLOW7
Reset_State-TextColor = ID_BLACK
Trap_State-LineColor = ID_RED2
Trap_State-LineWidth = 2
Trap_State-FillColor = ID_CYAN5
Trap_State-TextColor = ID_RED2
State_Action-LineColor = ID_BLACK
State_Action-LineWidth = 1
State_Action-FillColor = ID_WHITE
State_Action-TextColor = ID_BLACK
Junction-LineColor = ID_BLACK
Junction-LineWidth = 1
Junction-FillColor = ID_GREEN2
Junction-TextColor = ID_BLACK
Connection-LineColor = ID_BLACK
Connection-LineWidth = 1
Connection-FillColor = ID_GRAY5
Connection-TextColor = ID_BLACK
prefKey_Port-LineColor = ID_BLACK
prefKey_Port-LineWidth = 1
prefKey_Port-FillColor = ID_ORANGE6
prefKey_Port-TextColor = ID_YELLOW2
Transition-LineColor = ID_BLACK
Transition-LineWidth = 1
Transition-FillColor = ID_WHITE
Transition-TextColor = ID_BLACK
Trans_Condition-LineColor = ID_BLACK
Trans_Condition-LineWidth = 1
Trans_Condition-FillColor = ID_WHITE
Trans_Condition-TextColor = ID_ORANGE2
Trans_Action-LineColor = ID_BLACK
Trans_Action-LineWidth = 1
Trans_Action-FillColor = ID_WHITE
Trans_Action-TextColor = ID_GREEN2
SelectedSet-LineColor = ID_RED2
SelectedSet-LineWidth = 1
SelectedSet-FillColor = ID_RED2
SelectedSet-TextColor = ID_WHITE
StickSet-LineColor = ID_ORANGE5
StickSet-LineWidth = 1
StickSet-FillColor = ID_PURPLE6
StickSet-TextColor = ID_BLACK
HilightSet-LineColor = ID_RED5
HilightSet-LineWidth = 1
HilightSet-FillColor = ID_RED7
HilightSet-TextColor = ID_BLUE5
ControlPoint-LineColor = ID_BLACK
ControlPoint-LineWidth = 1
ControlPoint-FillColor = ID_WHITE
Bundle-LineColor = ID_BLACK
Bundle-LineWidth = 1
Bundle-FillColor = ID_WHITE
Bundle-TextColor = ID_BLUE4
QtBackground-FillColor = ID_GRAY6
prefKey_Link-LineColor = ID_ORANGE2
prefKey_Link-LineWidth = 1
Selection-LineColor = ID_BLUE2
Selection-LineWidth = 1
Hier_State-LineColor = ID_RED3
Hier_State-LineWidth = 1
Hier_State-FillColor = ID_YELLOW5
Hier_State-TextColor = ID_BLUE5
Comment_Linking-LineColor = ID_BLACK
Comment_Linking-LineWidth = 2
Comment_Background-FillColor = ID_YELLOW4
Revised_Object-LineColor = ID_PURPLE5
Revised_Object-LineWidth = 2
Comment_Graphic-LineColor = ID_YELLOW5
Comment_Graphic-LineWidth = 1
Comment_Graphic_Select-LineColor = ID_RED4
Comment_Graphic_Select-LineWidth = 1
Comment_Graphic_Ctrl_Pnt-LineColor = ID_GREEN5
Comment_Graphic_Ctrl_Pnt-LineWidth = 1
State_Name-FontName = Default
State_Name-FontSize = 14
State_Name-FontBold = FALSE
State_Name-FontItalic = FALSE
State_Name-FontOverride = FALSE
Init_State_Name-FontName = Default
Init_State_Name-FontSize = 14
Init_State_Name-FontBold = FALSE
Init_State_Name-FontItalic = FALSE
Init_State_Name-FontOverride = FALSE
Reset_State_Name-FontName = Default
Reset_State_Name-FontSize = 14
Reset_State_Name-FontBold = FALSE
Reset_State_Name-FontItalic = FALSE
Reset_State_Name-FontOverride = FALSE
Trap_State_Name-FontName = Default
Trap_State_Name-FontSize = 14
Trap_State_Name-FontBold = FALSE
Trap_State_Name-FontItalic = FALSE
Trap_State_Name-FontOverride = FALSE
Hier_State_Name-FontName = Default
Hier_State_Name-FontSize = 14
Hier_State_Name-FontBold = FALSE
Hier_State_Name-FontItalic = FALSE
Hier_State_Name-FontOverride = FALSE
State_Action-FontName = Default
State_Action-FontSize = 6
State_Action-FontBold = FALSE
State_Action-FontItalic = FALSE
State_Action-FontOverride = FALSE
Trans_Condition-FontName = Default
Trans_Condition-FontSize = 6
Trans_Condition-FontBold = FALSE
Trans_Condition-FontItalic = FALSE
Trans_Condition-FontOverride = FALSE
Trans_Action-FontName = Default
Trans_Action-FontSize = 6
Trans_Action-FontBold = FALSE
Trans_Action-FontItalic = FALSE
Trans_Action-FontOverride = FALSE
Port_Name-FontName = Default
Port_Name-FontSize = 6
Port_Name-FontBold = FALSE
Port_Name-FontItalic = FALSE
Port_Name-FontOverride = FALSE
Comment-FontName = Default
Comment-FontSize = 12
Comment-FontColor = ID_BLUE3
Comment-FontBold = FALSE
Comment-FontItalic = FALSE
Comment-FontOverride = FALSE
[FSM_Dlg-Print]
Orientation = Landscape
[FileBrowser]
ImportDesign = /c1065/marshall/chx_simulation/LINUX_2_6_X86/NCV/eight_core/chiron.v,/haydn/marshall,
nWaveRestoreRCDirHistory = /haydn/renaz-h/RC/DV_F.rc,~renaz-h/RC,/c1638/marshall/rundaily/20160525/apic_round_robin_msi_cluster_0_1852180300_8T.ic.gz,
nWaveOpenFsdbDirHistory = /haydn/c1078/cathyl/chx_simulation_0120,/haydn/cathyl/,/c1065/marshall/chx_simulation/LINUX_2_6_X86/NCV/eight_core,/c1638/marshall/rundaily/20160525/apic_round_robin_msi_cluster_0_1852180300_8T.ic.gz/vcs_000.fsdb,/c1638/marshall/rundaily/20160525/mp_ss_for\
ce_thresholds_6_3470457646_1T.ic.gz/vcs_000.fsdb,
[Form]
version = Verdi3_J-2014.12-SP1
[General]
autoSaveSession = FALSE
TclAutoSource = 
cmd_enter_form = FALSE
SyncBrowserDir = TRUE
version = Verdi3_J-2014.12-SP1
SignalCaseInSensitive = FALSE
ShowWndCtntDuringResizing = FALSE
[GlobalProp]
ErrWindow_Font = Helvetica_M_R_12
[Globals]
app_default_font = Bitstream Vera Sans,10,-1,5,50,0,0,0,0,0
app_fixed_width_font = Courier,10,-1,5,50,0,0,0,0,0
text_encoding = Unicode(utf8)
smart_resize = TRUE
smart_resize_child_limit = 2000
tooltip_max_width = 200
tooltip_max_height = 20
auto_load_source = TRUE
smart_log_selected_limit = 10
max_array_size = 4096
filter_when_typing = TRUE
filter_syntax = Wildcards
filter_keystroke_interval = 800
filter_case_sensitive = FALSE
filter_full_path = TRUE
load_detail_for_funcov = FALSE
[HB]
ViewSchematic = FALSE
windowLayout = 0 0 804 500 182 214 804 148
import_filter = *.v; *.vc; *.f
designTreeFont = *-adobe-courier-medium-r-*-*-12-*-*-*-*-*-iso8859-*
import_filter_vhdl = *.vhd; *.vhdl; *.f
simulation_file_type = *.fsdb;*.fsdb.gz;*.fsdb.bz2;*.ff;*.dump
PrefetchViewableAnnot = TRUE
# for vdCov
import_filter_verilog = *.v; *.vc; *.f
import_default_language = Verilog
import_from = source
[Hier]
filterTimeout = 1500
[ImportLiberty]
SearchPriority = .lib++
bSkipStateCell = False
bImportPowerInfo = False
bSkipFFCell = False
bScpecifyCellNameCase = False
bSpecifyPinNameCase = False
CellNameToCase = 
PinNameToCase = 
DirectlyImportPath = /haydn/marshall/django_test/vrg_site/novas_libs
[Language]
EditWindow_Font = COURIER12
Background = ID_WHITE
Comment = ID_GRAY4
Keyword = ID_BLUE5
UserKeyword = ID_GREEN2
Text = ID_BLACK
SelText = ID_WHITE
SelBackground = ID_BLUE2
[Library.Ikos]
pack = ./work.lib++
vital = ./work.lib++
work = ./work.lib++
std = ${dls_std}.lib++
ieee = ${dls_ieee}.lib++
synopsys = ${dls_synopsys}.lib++
silc = ${dls_silc}.lib++
ikos = ${dls_ikos}.lib++
novas = ${VOYAGER_LIB_VHDL}/${VOYAGER_MACHINE}/novas.lib++
[MDT]
ART_RF_SP = spr[0-9]*bx[0-9]*
ART_RF_2P = dpr[0-9]*bx[0-9]*
ART_SRAM_SP = spm[0-9]*bx[0-9]*
ART_SRAM_DP = dpm[0-9]*bx[0-9]*
VIR_SRAM_SP = hdsd1_[0-9]*x[0-9]*cm4sw1
VIR_SRAM_DP = hdsd2_[0-9]*x[0-9]*cm4sw1
VIR_RF_SP = rfsd1_[0-9]*x[0-9]*cm2sw0
VIR_RF_DP = rfsd2_[0-9]*x[0-9]*cm2sw1
VIR_STAR_SRAM_SP = shsd1_[0-9]*x[0-9]*cm4sw0
[NPExpanding]
functiongroups = FALSE
modules = FALSE
[NPFilter]
showAssertion = TRUE
showCoverGroup = TRUE
showProperty = TRUE
showSequence = TRUE
showDollarUnit = TRUE
[OtherEditor]
cmd1 = "xterm -font 9x15 -fg black -bg gray -e"
name = "vi"
options = "+${CurLine} ${CurFullFileName}"
[Power]
SRSN = ID_CYAN3
PowerDownInstance = ID_GRAY1
RetentionSignal = ID_YELLOW2
IsolationSignal = ID_RED6
LevelShiftedSignal = ID_GREEN6
PowerSwitchObject = ID_ORANGE5
AlwaysOnObject = ID_GREEN5
PowerNet = ID_RED2
GroundNet = ID_RED2
SimulationOnly = ID_CYAN3
SRSN/SPA = ID_CYAN3
BoundaryPort = ID_CYAN3
DisplayInstrumentedCell = FALSE
ShowPstAnnot = FALSE
ExtractIsoSameNets = FALSE
AnnotateSignal = TRUE
HighlightPowerObject = TRUE
HighlightPowerDomain = TRUE
ShowAlias = TRUE
ShowVoltage = TRUE
MatchTreeNodesCaseInsensitive = FALSE
SearchHBNodeDynamically = FALSE
[Print]
PrinterName = lp
FileName = test.ps
PaperSize = A4 - 210x297 (mm)
ColorPrint = FALSE
[PropertyTools]
saveFsdbStat = TRUE
savePropStat = FALSE
savePropDtl = TRUE
[QtDialog]
importDesignForm = 643,194,634,611
QwWarnMsgDlg = 650,347,600,250
QwUserAskDlg = 782,374,324,134
[Relationship]
hideRecursiceNode = FALSE
[Session Cache]
3 = string (session file name)
4 = string (session file name)
5 = string (session file name)
1 = /haydn/marshall/django_test/vrg_site/verdiLog/novas_autosave.ses
2 = /haydn/marshall/verdiLog/novas_autosave.ses
[Simulation]
scsPath = scsim
scsOption = 
xlPath = verilog
xlOption = 
ncPath = ncsim
ncOption = -f ncsim.args
osciPath = gdb
osciOption = 
vcsPath = simv
vcsOption = 
mtiPath = vsim
mtiOption = 
vhncPath = ncsim
vhncOption = -log debussy.nc.log
mixncPath = ncsim
mixncOption = -log debussy.mixnc.log
speedsimPath = 
speedsimOption = 
mti_vlogPath = vsim
mti_vlogOption = novas_vlog
vcs_mixPath = simv
vcs_mixOption = -vhdlrun "-vhpi debussy:FSDBDumpCmd"
scs_mixPath = scsim
scs_mixOption = -vhpi debussy:FSDBDumpCmd
interactiveDebugging = {True, False}
KeepBreakPoints = False
ScsDebugAll = False
simType = {xl, nc, vcs, mti, mti_vlog, vhnc, scs, mixnc}
thirdpartyIdx = -1
iscCmdSep = FALSE
NoAppendOption = False
[SimulationPlus]
xlPath = verilog
xlOption = 
ncPath = ncsim
ncOption = -f ncsim.args
vcsPath = simv
vcsOption = 
mti_vlogPath = vsim
mti_vlogOption = novas_vlog
mtiPath = vsim
mtiOption = 
vhncPath = ncsim
vhncOption = -log debussy.nc.log
speedsimPath = verilog
speedsimOption = 
mixncPath = ncsim
mixncOption = -log debussy.mixnc.log
scsPath = scsim
scsOption = 
vcs_mixPath = simv
vcs_mixOption = -vhdlrun "-vhpi debussy:FSDBDumpCmd"
scs_mixPath = scsim
scs_mixOption = -vhpi debussy:FSDBDumpCmd
vcs_svPath = simv
vcs_svOption = 
thirdpartyIdx = -1
interactiveDebugging = FALSE
KeepBreakPoints = FALSE
iscCmdSep = FALSE
ScsDebugAll = FALSE
NoAppendOption = FALSE
invokeSimPath = work
simType = vcssv
[Source]
wordWrapOn = TRUE
viewReuse = TRUE
lineNumberOn = TRUE
warnOutdatedDlg = TRUE
showEncrypt = FALSE
loadInclude = FALSE
showColorForActive = FALSE
tabWidth = 8
editor = vi
reload = Never
showBreakpointTip = FALSE
sync_active_to_source = TRUE
navigateAsColored = FALSE
navigateCovered = FALSE
navigateUncovered = TRUE
navigateExcluded = FALSE
[SourceVHDL]
vhSimType = ModelSim
ohSimType = VerilogXL
[TclShell]
nLineSize = 1024
[Text]
hdlTypeName = blue4
hdlLibrary = blue4
viewport = 396 392 445 487
hdlOther = ID_BLACK
hdlComment = ID_GRAY1
hdlKeyword = ID_BLUE5
hdlEntity = ID_BLACK
hdlEntityInst = ID_BLACK
hdlSignal = ID_RED2
hdlInSignal = ID_RED2
hdlOutSignal = ID_RED2
hdlInOutSignal = ID_RED2
hdlOperator = ID_BLACK
hdlMinus = ID_BLACK
hdlSymbol = ID_BLACK
hdlString = ID_BLACK
hdlNumberBase = ID_BLACK
hdlNumber = ID_BLACK
hdlLiteral = ID_BLACK
hdlIdentifier = ID_BLACK
hdlSystemTask = ID_BLACK
hdlParameter = ID_BLACK
hdlIncFile = ID_BLACK
hdlDataFile = ID_BLACK
hdlCDSkipIf = ID_GRAY1
hdlMacro = ID_BLACK
hdlMacroValue = ID_BLACK
hdlPlainText = ID_BLACK
hdlOvaId = ID_PURPLE2
hdlPslId = ID_PURPLE2
HvlEId = ID_BLACK
HvlVERAId = ID_BLACK
hdlEscSignal = ID_BLACK
hdlEscInSignal = ID_BLACK
hdlEscOutSignal = ID_BLACK
hdlEscInOutSignal = ID_BLACK
textBackgroundColor = ID_GRAY6
textHiliteBK = ID_BLUE5
textHiliteText = ID_WHITE
textTracedMark = ID_GREEN2
textLineNo = ID_BLACK
textFoldedLineNo = ID_RED5
textUserKeyword = ID_GREEN2
textParaAnnotText = ID_BLACK
textFuncAnnotText = ID_BLUE2
textAnnotText = ID_BLACK
textUserDefAnnotText = ID_BLACK
ComputedSignal = ID_PURPLE5
textAnnotTextShadow = ID_WHITE
parenthesisBGColor = ID_YELLOW5
codeInParenthesis = ID_CYAN5
text3DLight = ID_WHITE
text3DShadow = ID_BLACK
textHvlDriver = ID_GREEN3
textHvlLoad = ID_YELLOW3
textHvlDriverLoad = ID_BLUE3
irOutline = ID_RED2
irDriver = ID_YELLOW5
irLoad = ID_BLACK
irBookMark = ID_YELLOW2
irIndicator = ID_WHITE
irBreakpoint = ID_GREEN5
irCurLine = ID_BLUE5
hdlVhEntity = ID_BLACK
hdlArchitecture = ID_BLACK
hdlPackage = ID_BLUE5
hdlAlias = ID_BLUE5
hdlGeneric = ID_BLUE5
specialAnnotShadow = ID_BLUE1
hdlZeroInHead = ID_GREEN2
hdlZeroInComment = ID_GREEN2
hdlPslHead = ID_GREEN2
hdlPslComment = ID_GREEN2
hdlSynopsysHead = ID_GREEN2
hdlSynopsysComment = ID_GREEN2
pdmlIdentifier = ID_BLACK
pdmlCommand = ID_BLACK
pdmlMacro = ID_BLACK
font = COURIER12
[Text.1]
viewport = 0 0 1920 1002 45
[TextPrinter]
Orientation = Landscape
Indicator = FALSE
LineNum = TRUE
FontSize = 7
Column = 2
Annotation = TRUE
[Texteditor]
TexteditorFont = "Clean 14"
TexteditorBG = white
TexteditorFG = black
[ThirdParty]
ThirdPartySimTool = verisity surefire ikos finsim
[TurboEditor]
autoBackup = TRUE
[UserButton.mixnc]
Button1 = "Dump All Signals" "call fsdbDumpvars\n"
Button2 = "Next 1000 Time" "run 1000 -relative\n"
Button3 = "Next ? Time" "run ${Arg:Next Time} -relative\n"
Button4 = "Run Next" "run -next\n"
Button5 = "Run Step" "run -step\n"
Button6 = "Run Return" "run -return\n"
Button7 = "Show Variables" "value {${NCSelVars}}\n"
Button8 = "FSDB Ver" "call fsdbVersion"
Button9 = "Dump On" "call fsdbDumpon"
Button10 = "Dump Off" "call fsdbDumpoff"
Button11 = "All Tasks" "call"
Button12 = "Dump Selected Instance" "call fsdbDumpvars 1 ${SelInst}"
[UserButton.mti]
Button1 = "Dump All Signals" "fsdbDumpvars\n"
Button2 = "Next 1000 Time" "run 1000\n"
Button3 = "Next ? Time" "run ${Arg:Next Time}\n"
Button4 = "Show Variables" "exa ${SelVars}\n"
Button5 = "Force Variable" "force -freeze ${SelVar} ${Arg:New Value} 0\n"
Button6 = "Release Variable" "noforce ${SelVar}\n"
Button7 = "Deposit Variable" "force -deposit ${SelVar} ${Arg:New Value} 0\n"
[UserButton.mti_vlog]
Button1 = "Dump All Signals" "fsdbDumpvars\n"
Button2 = "Next 1000 Time" "run 1000\n"
Button3 = "Next ? Time" "run ${Arg:Next Time}\n"
Button4 = "Show Variables" "exa ${SelVars}\n"
Button5 = "Force Variable" "force -freeze ${SelVar} ${Arg:New Value} 0\n"
Button6 = "Release Variable" "noforce ${SelVar}\n"
Button7 = "Deposit Variable" "force -deposit ${SelVar} ${Arg:New Value} 0\n"
[UserButton.nc]
Button1 = "Dump All Signals" "call fsdbDumpvars\n"
Button2 = "Next 1000 Time" "run 1000 -relative\n"
Button3 = "Next ? Time" "run ${Arg:Next Time} -relative\n"
Button4 = "Run Next" "run -next\n"
Button5 = "Run Step" "run -step\n"
Button6 = "Run Return" "run -return\n"
Button7 = "Show Variables" "value {${NCSelVars}}\n"
[UserButton.scs]
Button1 = "Dump All Signals" "call fsdbDumpvars(0, \"${TopScope}\");\n"
Button2 = "Next 1000 Time" "run 1000 \n"
Button3 = "Next ? Time" "run ${Arg:Next Time} \n"
Button4 = "Run Step" "step\n"
Button5 = "Show Variables" "ls -v {${SelVars}}\n"
[UserButton.vhnc]
Button1 = "Dump All Signals" "call fsdbDumpvars\n"
Button2 = "Next 1000 Time" "run 1000 -relative\n"
Button3 = "Next ? Time" "run ${Arg:Next Time} -relative\n"
Button4 = "Run Next" "run -next\n"
Button5 = "Run Step" "run -step\n"
Button6 = "Run Return" "run -return\n"
Button7 = "Show Variables" "value {${NCSelVars}}\n"
[UserButton.xl]
Button13 = "Dump Off" "$fsdbDumpoff;\n"
Button12 = "Dump On" "$fsdbDumpon;\n"
Button11 = "Delete Focus" "$db_deletefocus(${treeSelScope});\n"
Button10 = "Set Focus" "$db_setfocus(${treeSelScope});\n"
Button9 = "Deposit Variable" "$deposit(${SelVar},${Arg:New Value});\n"
Button8 = "Release Variable" "release ${SelVar};\n"
Button7 = "Force Variable" "force ${SelVar} = ${Arg:New Value};\n"
Button6 = "Show Variables" "$showvars(${SelVars});\n"
Button5 = "Next ? Event" "$db_step(${Arg:Next Event});\n"
Button4 = "Next Event" "$db_step(1);\n"
Button3 = "Next ? Time" "#${Arg:Next Time} $stop;.\n"
Button2 = "Next 1000 Time" "#1000 $stop;.\n"
Button1 = "Dump All Signals" "$fsdbDumpvars;\n"
[Vi]
ViFont = "Clean 14"
ViBG = white
ViFG = black
[Wave]
ovaEventSuccessColor = -c ID_CYAN5
ovaEventFailureColor = -c ID_RED5
ovaBooleanSuccessColor = -c ID_CYAN5
ovaBooleanFailureColor = -c ID_RED5
ovaAssertSuccessColor = -c ID_GREEN5
ovaAssertFailureColor = -c ID_RED5
ovaForbidSuccessColor = -c ID_GREEN5
SigGroupRuleFile = 
DisplayFileName = FALSE
waveform_vertical_scroll_bar = TRUE
scope_to_save_with_macro
open_file_dir
open_rc_file_dir
getSignalForm = 100 100 856 562 200 439 400 120
viewPort = 0 30 1920 299 342 220
signalSpacing = 5
digitalSignalHeight = 15
analogSignalHeight = 98
commentSignalHeight = 98
transactionSignalHeight = 98
messageSignalHeight = 98
minCompErrWidth = 4
DragZoomTolerance = 4
maxTransExpandedLayer = 10
WaveMaxPoint = 512
legendBackground = -c ID_BLACK
valueBackground = -c ID_BLACK
curveBackground = -c ID_BLACK
getSignalSignalList_BackgroundColor = -c ID_GRAY6
glitchColor = -c ID_RED5
cursor = -c ID_YELLOW5 -lw 1 -ls long_dashed
marker = -c ID_WHITE -lw 1 -ls dash_dot_l
usermarker = -c ID_GREEN5 -lw 1 -ls long_dashed
trace = -c ID_GRAY5 -lw 1 -ls long_dashed
grid = -c ID_WHITE -lw 1 -ls short_dashed
rulerBackground = -c ID_GRAY3
rulerForeground = -c ID_YELLOW5
busTextColor = -c ID_ORANGE8
region(Active)Background = -c ID_YELLOW1
region(NBA)Background = -c ID_RED1
region(Re-Active)Background = -c ID_YELLOW3
region(Re-NBA)Background = -c ID_RED3
High_Light = -c ID_GRAY2
Input_Signal = -c ID_RED5
Output_Signal = -c ID_GREEN5
InOut_Signal = -c ID_BLUE5
Net_Signal = -c ID_YELLOW5
Register_Signal = -c ID_PURPLE5
Verilog_Signal = -c ID_CYAN5
VHDL_Signal = -c ID_ORANGE5
SystemC_Signal = -c ID_BLUE7
Dump_Off_Color = -c ID_BLUE2
Compress_Bar_Color = -c ID_YELLOW4
Vector_Dense_Block_Color = -c ID_ORANGE8
Scalar_Dense_Block_Color = -c ID_GREEN6
Composite_Dense_Block_Color = -c ID_ORANGE5
DB_Power_Off_Layer = -c ID_BLUE4 -stipple dots
SPA_Driver_Power_Off_Layer = -c ID_ORANGE4 -stipple dots
SPA_Receiver_Power_Off_Layer = -c ID_GREEN5 -stipple dots
SRSN_Power_Off_Layer = -c ID_GREEN4 -stipple dots
Isolation_Power_Off_Layer = -c ID_RED4 -stipple dots
PD_Power_Off_Layer = -c ID_GRAY4 -stipple dots
Isolation_Layer = -c ID_RED4 -stipple vLine
Retention_Level_Trigger_Layer = -c ID_ORANGE1 -stipple fill_solid
Retention_Edge_Trigger_Layer = -c ID_YELLOW6 -stipple fill_solid
Driving_Power_Off_Layer = -c ID_YELLOW2 -stipple x
Toggle_Layer = -c ID_YELLOW4 -stipple slash
busSignalLayer = -c ID_ORANGE8
busXLayer = -c ID_RED5
busZLayer = -c ID_ORANGE6
busMixedLayer = -c ID_GREEN5
busNotComputedLayer = -c ID_GRAY1
busNoValueLayer = -c ID_BLUE2
signalGridLayer = -c ID_WHITE
analogGridLayer = -c ID_GRAY6
analogRulerLayer = -c ID_GRAY6
keywordLayer = -c ID_RED5
loadedLayer = -c ID_BLUE5
loadingLayer = -c ID_BLACK
qdsCurMarkerLayer = -c ID_BLUE5
qdsBrkMarkerLayer = -c ID_GREEN5
qdsTrgMarkerLayer = -c ID_RED5
arrowDefaultColor = -c ID_ORANGE6
startNodeArrowColor = -c ID_WHITE
endNodeArrowColor = -c ID_YELLOW5
propertyEventMatchColor = -c ID_GREEN5
propertyEventNoMatchColor = -c ID_RED5
propertyVacuousSuccessMatchColor = -c ID_YELLOW2
propertyStatusBoundaryColor = -c ID_WHITE
propertyBooleanSuccessColor = -c ID_CYAN5
propertyBooleanFailureColor = -c ID_RED5
propertyAssertSuccessColor = -c ID_GREEN5
propertyAssertFailureColor = -c ID_RED5
propertyForbidSuccessColor = -c ID_GREEN5
transactionForegroundColor = -c ID_YELLOW8
transactionBackgroundColor = -c ID_BLACK
transactionHighLightColor = -c ID_CYAN6
transactionRelationshipColor = -c ID_PURPLE6
transactionErrorTypeColor = -c ID_RED5
coverageFullyCoveredColor = -c ID_GREEN5
coverageNoCoverageColor = -c ID_RED5
coveragePartialCoverageColor = -c ID_YELLOW5
coverageReferenceLineColor = -c ID_GRAY4
messageForegroundColor = -c ID_YELLOW4
messageBackgroundColor = -c ID_PURPLE1
messageHighLightColor = -c ID_CYAN6
messageInformationColor = -c ID_RED5
ComputedAnnotColor = -c ID_PURPLE5
qdsAutoBusGroup = TRUE
qdsTimeStampMode = FALSE
qdsVbfBusOrderAscending = FALSE
openDumpFilter = *.fsdb
DumpFileFilter = *.vcd
RestoreSignalFilter = *.rc
SaveSignalFilter = *.rc
AddAliasFilter = *.alias;*.adb
CompareSignalFilter = *.err
ConvertFFFilter = *.vcd;*.out;*.tr0;*.xp;*.raw;*.wfm
Scroll_Ratio = 100
Zoom_Ratio = 10
EventSequence_SyncCursorTime = TRUE
EventSequence_Sorting = FALSE
EventSequence_RemoveGrid = FALSE
EventSequence_IsGridMode = FALSE
SetDefaultRadix = TRUE
DefaultRadix = Hex
SigSearchSignalMatchCase = FALSE
SigSearchSignalFullScope = FALSE
SigSearchSignalWithRegExp = FALSE
SigSearchDynamically = FALSE
SigDisplayBySelectionOrder = FALSE
SigDisplayRowMajor = FALSE
SigDragSelFollowColumn = FALSE
SigDisplayHierarchyBox = TRUE
SigDisplaySubscopeBox = TRUE
SigDisplayEmptyScope = TRUE
SigDisplayFormBus = TRUE
SigShowSubProgram = TRUE
SigSearchScopeDynamically = TRUE
SigCollapseSubtreeNodes = FALSE
activeFileApplyToAnnotation = FALSE
GrpSelMode = TRUE
dispGridCount = FALSE
hierarchyName = FALSE
partial_level_name = FALSE
partial_level_head = 1
partial_level_tail = 1
displayMessageLabelOnly = TRUE
autoInsertDumpoffs = TRUE
displayMessageCallStack = FALSE
displayCallStackWithFullSections = TRUE
displayCallStackWithLastSection = FALSE
limitMessageMaxWidth = FALSE
messageMaxWidth = 50
displayTransBySpecificColor = FALSE
fittedTransHeight = FALSE
snap = TRUE
displayLeadingZero = FALSE
displayGlitchs = FALSE
allfileTimeRange = FALSE
fixDelta = FALSE
displayCursorMarker = FALSE
autoUpdate = FALSE
restoreFromActiveFile = TRUE
restoreToEnd = FALSE
dispCompErr = TRUE
showMsgDes = TRUE
anaAutoFit = FALSE
anaAutoPattn = FALSE
anaAuto100VertFit = FALSE
displayDeltaY = FALSE
centerCursor = FALSE
denseBlockDrawing = TRUE
keepMarkerAtEndTimeOfTransaction = FALSE
doubleClickToExpandTransaction = TRUE
expandTransactionAssociatedSignals = TRUE
expandTransactionAttributeSignals = FALSE
WaveExtendLastTick = TRUE
InOutSignal = FALSE
NetRegisterSignal = FALSE
VerilogVHDLSignal = FALSE
LabelMarker = TRUE
ResolveSymbolicLink = TRUE
signal_rc_abspath = TRUE
signal_rc_no_natural_bus_range = FALSE
save_scope_with_macro = FALSE
TipInSignalWin = FALSE
DisplaySignalTypeAheadOfSignalName = TRUE ICON
TipInCurveWin = FALSE
DisplayLSBsFirst = FALSE
PaintSpecificColorPattern = FALSE
ModuleName = TRUE
form_all_memory_signal = FALSE
formBusSignalFromPartSelects = FALSE
read_value_change_on_demand_for_drawing = FALSE
TransitionMode = TRUE
DisplayRadix = FALSE
SchemaX = FALSE
Hilight = TRUE
UseBeforeValue = FALSE
DisplayFileNameAheadOfSignalName = FALSE
DisplayFileNumberAheadOfSignalName = FALSE
DisplayValueSpace = TRUE
FitAnaByBusSize = FALSE
displayTransactionAttributeName = FALSE
expandOverlappedTrans = FALSE
dispSamplePointForAttrSig = TRUE
dispClassName = TRUE
ReloadActiveFileOnly = FALSE
PiecewiseConstant = FALSE
PointStyle = FALSE
NormalizeEVCD = FALSE
OverwriteAliasWithRC = TRUE
overlay_added_analog_signals = FALSE
case_insensitive = FALSE
vhdlVariableCalculate = TRUE
signal_vertical_scroll_bar = TRUE
showPortNameForDroppedInstance = FALSE
truncateFilePathInTitleBar = TRUE
filterPropVacuousSuccess = FALSE
resaveSignals = TRUE
adjustBusPrefix = adjustBus_
adjustBusBits = 1
adjustBusSettings = 69889
maskPowerOff = FALSE
maskIsolation = FALSE
maskRetention = FALSE
maskDrivingPowerOff = FALSE
maskToggle = FALSE
autoBackupSignals = off 5 \"/haydn/marshall/verdiLog\" \"novas_autosave_sig\"
signal_rc_attribute = 65535
signal_rc_alias_attribute = 0
ConvertAttr1 = -inc FALSE
ConvertAttr2 = -hier FALSE
ConvertAttr3 = -ucase FALSE
ConvertAttr4 = -lcase FALSE
ConvertAttr5 = -org FALSE
ConvertAttr6 = -mem 24
ConvertAttr7 = -deli .
ConvertAttr8 = -hier_scope FALSE
ConvertAttr9 = -inst_array FALSE
ConvertAttr10 = -vhdlnaming FALSE
ConvertAttr11 = -orgScope FALSE
analogFmtPrecision = Automatic 2
confirmOverwrite = TRUE
confirmExit = TRUE
confirmGetAll = TRUE
printTimeRange = TRUE 0.000000 0.000000 0.000000
printPageRange = TRUE 1 1
printOption = 0
printBasic = 1 0 0 FALSE FALSE
printDest = -printer {}
printSignature = {%f %h %t} {}
curveWindow_Drag&Drop_Mode = TRUE
hspiceIncOpenMode = TRUE
pcSelectMode = TRUE
hierarchyDelimiter = /
RecentFile1 = /haydn/c1078/cathyl/chx_simulation_0120/ncv_000.fsdb
RecentFile2 = /c1638/marshall/rundaily/20160525/mp_ss_force_thresholds_6_3470457646_1T.ic.gz/vcs_000.fsdb
RecentFile3 = /c1638/marshall/rundaily/20160525/apic_round_robin_msi_cluster_0_1852180300_8T.ic.gz/vcs_000.fsdb
RecentFile4 = /haydn/c1078/cathyl/chx_simulation_0120/ncv_000.fsdb
open_file_time_range = FALSE
value_window_aligment = Right
signal_window_alignment = Auto
ShowDeltaTime = TRUE
legend_window_font = -f COURIER12 -c ID_CYAN5
value_window_font = -f COURIER12 -c ID_CYAN5
curve_window_font = -f COURIER12 -c ID_CYAN5
group_name_font = -f COURIER12 -c ID_GREEN5
ruler_value_font = -f COURIER12 -c ID_CYAN5
analog_ruler_value_font = -f COURIER12 -c ID_CYAN5
comment_string_font = -f COURIER12 -c ID_RED5
getsignal_form_font = -f COURIER12 
SigsCheckNum = on 1000
filter_synthesized_net = off n
filterOutNet = on
filter_synthesized_instance = off 
filterOutInstance = on
showGroupTree = TRUE
hierGroupDelim = /
MsgSeverityColor = {y \"Severity\"==\"1\" ID_RED5} {y \"Severity\"==\"2\" ID_RED6} {y \"Severity\"==\"3\" ID_RED7} {y \"Severity\"==\"4\" ID_RED8} {y \"Severity\"==\"5\" ID_ORANGE5} {y \"Severity\"==\"6\" ID_ORANGE6} {y \"Severity\"==\"7\" ID_ORANGE7} {y \"Severity\"==\"8\" \
ID_GREEN7} {y \"Severity\"==\"9\" ID_GREEN6} {y \"Severity\"==\"10\" ID_GREEN5} 
AutoApplySeverityColor = TRUE
AutoAdjustMsgWidthByLabel = off
verilogStrengthDispType = type1
waveDblClkActiveTrace = on
autoConnectTBrowser = FALSE
connectTBrowserInContainer = TRUE
[cov_hier_name_column]
justify = TRUE
[coverageColors]
sou_uncov = TRUE
sou_pc = TRUE
sou_cov = TRUE
sou_exuncov = TRUE
sou_excov = TRUE
sou_unreach = TRUE
sou_fillColor_uncov = red
sou_fillColor_pc = yellow
sou_fillColor_cov = green3
sou_fillColor_exuncov = grey
sou_fillColor_excov = #3C9371
sou_fillColor_unreach = grey
numberOfBins = 6
rangeMin_0 = 0
rangeMax_0 = 20
fillColor_0 = #FF6464
rangeMin_1 = 20
rangeMax_1 = 40
fillColor_1 = #FF9999
rangeMin_2 = 40
rangeMax_2 = 60
fillColor_2 = #FF8040
rangeMin_3 = 60
rangeMax_3 = 80
fillColor_3 = #FFFF99
rangeMin_4 = 80
rangeMax_4 = 100
fillColor_4 = #99FF99
rangeMin_5 = 100
rangeMax_5 = 100
fillColor_5 = #64FF64
[coveragesetting]
showvalue = FALSE
showfullhier = FALSE
nameLeftAlignment = TRUE
[eco]
NameRule = 
IsFreezeSilicon = FALSE
cellQuantityManagement = FALSE
ManageMode = INSTANCE_NAME
SpareCellsPinsManagement = TRUE
LogCommitReport = FALSE
InputPinStatus = 1
OutputPinStatus = 2
RevisedComponentColor = ID_BLUE5
SpareCellColor = ID_RED5
UserName = marshall
CommentFormat = Novas ECO updated by ${UserName} ${Date} ${Time} 
PrefixN = eco_n
PrefixP = eco_p
PrefixI = eco_i
DefaultTieUpNet = 1'b1
DefaultTieDownNet = 1'b0
MultipleInstantiations = TRUE
KeepClockPinConnection = FALSE
KeepAsyncResetPinConnection = FALSE
ScriptFileModeType = 1
MagmaScriptPower = VDD
MagmaScriptGround = GND
ShowModeMsg = TRUE
AstroScriptPower = VDD
AstroScriptGround = VSS
ClearFloatingPorts = FALSE
[eco_connection]
Port/NetIsUnique = TRUE
SerialNet = 0
SerialPort = 0
SerialInst = 0
[finsim]
TPLanguage = Verilog
TPName = Super-FinSim
TPPath = TOP.sim
TPOption = 
AddImportArgument = FALSE
LineBreakWithScope = FALSE
StopAfterCompileOption = -i
[ikos]
TPLanguage = VHDL
TPName = Voyager
TPPath = vsh
TPOption = -X
AddImportArgument = FALSE
LineBreakWithScope = FALSE
StopAfterCompileOption = -i
[imp]
options = NULL
libPath = NULL
libDir = NULL
[nCompare]
ErrorViewport = 80 180 800 550
EditorViewport = 409 287 676 475
EditorHeightWidth = 802 380
WaveCommand = "novas"
WaveArgs = "-nWave"
[nCompare.Wnd0]
ViewByHier = FALSE
[nMemory]
dispMode = ADDR_HINT
addrColWidth = 120
valueColWidth = 100
showCellBitRangeWithAddr = TRUE
wordsShownInOneRow = 8
syncCursorTime = FALSE
fixCellColumnWidth = FALSE
font = Fixed 14
[schematics]
viewport = 178 262 638 516
schBackgroundColor = black lineSolid
schBodyColor = orange6 lineSolid
schAsmBodyColor = blue7 lineSolid
schPortColor = orange6 lineSolid
schCellNameColor = cyan4 lineSolid
schCLKNetColor = red6 lineSolid
schPWRNetColor = red4 lineSolid
schGNDNetColor = cyan4 lineSolid
schSIGNetColor = green8 lineSolid
schTraceColor = yellow4 lineSolid
schBackAnnotateColor = white lineSolid
schValue0 = yellow4 lineSolid
schValue1 = green3 lineSolid
schValueX = red4 lineSolid
schValueZ = purple7 lineSolid
dimColor = cyan2 lineSolid
schPreSelColor = green4 lineDash
schSIGBusNetColor = green8 lineSolid
schGNDBusNetColor = cyan4 lineSolid
schPWRBusNetColor = red4 lineSolid
schCLKBusNetColor = red6 lineSolid
schEdgeSensitiveColor = yellow4 lineSolid
schAnnotColor = cyan4 lineSolid
schInstNameColor = orange6 lineSolid
schPortNameColor = cyan4 lineSolid
schAsmLatchColor = cyan4 lineSolid
schAsmRegColor = cyan4 lineSolid
schAsmTriColor = cyan4 lineSolid
pre_select = True
ShowPassThroughNet = False
ComputedAnnotColor = ID_PURPLE5
[schematics_print]
Signature = FALSE
DesignName = PCU
DesignerName = bai
SignatureLocation = LowerRight
MultiPage = TRUE
AutoSliver = FALSE
[sourceColors]
BackgroundActive = gray88
BackgroundInactive = lightgray
InactiveCode = dimgray
Selection = darkblue
Standard = black
Keyword = blue
Comment = gray25
Number = black
String = black
Identifier = darkred
Inline = green
colorIdentifier = green
Value = darkgreen
MacroBackground = gray88
Missing = #400040
[surefire]
TPLanguage = Verilog
TPName = SureFire
TPPath = verilog
TPOption = 
AddImportArgument = TRUE
LineBreakWithScope = TRUE
StopAfterCompileOption = -tcl
[timing_diagram]
SigWinBackground = ID_WHITE 1
SigWinHighlight = ID_BLUE5 1
WaveWinBackground = ID_WHITE 1
RulerBackground = ID_GRAY5 1
RulerForeground = ID_BLACK 1
busLayer = ID_BLACK 1 line_solid
busXLayer = ID_RED5 1 line_solid
busZLayer = ID_ORANGE5 1 line_solid
CursorLine = ID_YELLOW2 1 long_dashed
MarkerLine = ID_GRAY5 1 dash_dot_l
GridLine = ID_BLACK 1 long_dashed
Value0 = ID_BLACK 1 line_solid
Value1 = ID_BLACK 1 line_solid
ValueX = ID_RED5 1 line_solid ID_RED5 slant_right
ValueZ = ID_ORANGE5 1 line_solid
SegmentAlias = ID_BLUE2 1 line_solid
Comment = ID_GRAY3 1 line_solid ID_GRAY3 fill_solid
TimeArc = ID_ORANGE5 1 line_solid
TimeBreak = ID_ORANGE5 1 line_solid
ObjHighlight = ID_BLUE2 1 line_solid
Preselect = ID_GREEN6 1 line_solid
Rubberband = ID_GREEN5 1
CtrlPntFill = ID_GREEN6 1
CtrlPntOutline = ID_BLACK 1
AreaSelect = ID_GREEN5 1
ZoomArea = ID_GREEN5 1
CommentGraphic = ID_GRAY3 1 line_solid
SigWinFont = Default 12 ID_BLUE5 FALSE FALSE
BusValueFont = Default 12 ID_BLUE2 FALSE FALSE
CommentFont = Default 12 ID_RED5 FALSE FALSE
SegAliasFont = Default 12 ID_RED5 FALSE FALSE
SigHeight = 20
Spacing = 10
SnapToTransitions = TRUE
[turboSchema_Printer_Options]
Orientation = Landscape
[turbo_library]
bdb_load_scope = 
[verisity]
TPLanguage = Verilog
TPName = "Verisity SpeXsim"
TPPath = vlg
TPOption = 
AddImportArgument = FALSE
LineBreakWithScope = TRUE
StopAfterCompileOption = -s
[wave.0]
viewPort = 0 30 1920 299 342 220
[wave.1]
viewPort = 127 219 960 332 100 65
[wave.2]
viewPort = 38 314 686 205 100 65
[wave.3]
viewPort = 63 63 700 400 65 41
[wave.4]
viewPort = 84 84 700 400 65 41
[wave.5]
viewPort = 92 105 700 400 65 41
[wave.6]
viewPort = 0 0 700 400 65 41
[wave.7]
viewPort = 21 21 700 400 65 41
Felix: The file is test_case.ini, num is 9 

[vector]
project=CHX001
name=vrg_ct2115_1_2016770211357_SA0B4_No1.src
status=FAIL

[fail]
type=l2-sva-fail
info=@46051874 special_cycle_cl0 valid ,but not RSPREQ_CL0_P,hif owner cover

[path]
vector=/tmp_space/cpu/users/cherylx/vrg_result/vrg_ct2115_1_2016720211357_SA0B4_No1.src
log=/tmp_space/cpu/users/cherylx/vrg_result/vrg_ct2115_1_2016720211357_SA0B4_No1_DU0_DI1_FA1_FS0_IMI.log
waveform=/tmp_space/cpu/users/cherylx/vrg_result/vrg_ct2115_1_2016720211357_SA0B4_No1_DU0_DI1_FA1_FS0_IMI.fsdb

[git]
design_version=aa90e470bef878de38f69ef8751684fa2365ed47
design_date=Tue Jul 26 17:43:51 2016 +0800
env_version=3471ce4c34e221cf2e57dc940e4c919a7774f4b4
env_date=Wed Jul 27 12:38:48 2016 +0800

[transactions]
total_request=58560
c2m=17190
c2p=3725
p2c=1457
c2p_io=100
c2p_mem=100
c2p_special=100
cl0_l2_hit=434
cl1_l2_hit=472
jtag=5
hotwire=5
fsbc_request=47326
fsbc_trigger=0
cl0_msr_read=473
cl0_msr_write=818
cl1_msr_read=0
cl1_msr_write=0
interrupt_ipi=71
interrupt_msi=51
interrupt_sb=27
Felix: The file is test_cpu.py, num is 10 

import time,os,re,socket,sys
import threading

def _getHostCPUstate(host):
    time2sleep = 1
    cpu_list = []
    for i in range(4):
        line = os.popen(('rsh %s top -bi -n 2 -d 0.02') % host).read().split('\n\n\n')[1].split('\n')[2]
        useage = re.split('\s+',line)[1]
        percent = float(re.search('([0-9.]+)%',useage).group(1))
        cpu_list.append(percent)
        time.sleep(time2sleep)
    return "%s : %s%%" %  (host,str(sum(cpu_list)/4.0))
    #return (host,sum(cpu_list)/4.0)

def _getHostsState(hosts,states):
    states.extend(map(_getHostCPUstate,hosts))

def getStates(hosts):
    thread_num = 4
    host_list = [[] for i in range(thread_num)] 
    state_list = [[] for i in range(thread_num)] 
    count = 0
    for host in hosts:
        host_list[count%thread_num].append(host)
        count += 1

    threads = []
    for i in range(thread_num):
        threads.append(threading.Thread(target=_getHostsState,args=(host_list[i],state_list[i])))

    for thread in threads:
        thread.start()

    while True:
        for thread in threads:
            if thread.is_alive() : break
        else:
            break

    states=[]
    for state in state_list:
        states.extend(state)
    print states

if __name__=='__main__':
    hosts = ['ct2119','ct2120','ct1638','ct1639','ct1637','ct1636','ct2119','ct1210','ct1211']
    getStates(hosts)
         


    


Felix: The file is check_vp.pl, num is 11 

#! /bin/env perl 

use warnings;
#use strict;

use Getopt::Std;

our($opt_t, $opt_c);
&getopts('t:c:');

$debug = 1;

#---------------------------------------------------------------
#input
$file = "/haydn/felixm-h/cov_feature/all_Cov";

open(EO,"< $file") or die "Cannot open $file !\n";
while(<EO>){
    push @civ_cov, $_;
}
close(EO);

#---------------------------------------------------------------
#input
$file = "/haydn/felixm-h/vp_output";

open(EO,"< $file") or die "Cannot open $file !\n";
while(<EO>){
    push @vp_cov, $_;
}
close(EO);

#---------------------------------------------------------------
@list = ();

$total_cnt = 0;
$miss_cnt = 0;

foreach(@vp_cov){

    #if(/^#/){} #pass
    if(/(c_\w+)/){
        $cov_sva_name = $1;
        #print "cell = $module\n";
        $total_cnt++;
        
        $find = 0;
        foreach(@civ_cov){
            if(/$cov_sva_name/){
                $find = 1;
            }
        }

        if($find){
            #push @log, "find $cov_sva_name in CIV\n";
        }
        else{
            $miss_cnt++;
            push @log, "can't find $cov_sva_name \n";
        }
    }
}

print "miss rate = $miss_cnt/$total_cnt\n";
#---------------------------------------------------------------
open OUT, "> ./check_vp.log";
print OUT @log;
close OUT;
Felix: The file is add_item.py, num is 12 

#t.py
#import django
from vrg_app.models import VectorIssue
def echo():
    print("welcome")

def delete(start, end):
    for i in range(start, end):
        tmp=VectorIssue.objects.filter(id=i)
        tmp.delete()
    print("delete item from", start, "to", end)


#>>> import django
#>>> django.setup()
#>>> from vrg_app.models import VectorIssue

Felix: The file is unrandom_feature_tag.list, num is 13 

BUS_one_tracker -> bus_msr.sv
BUS_ORDER -> check_data_order.sv
COP_JTAG_DIAG -> cop_jtag_diagcontrol.sv
COP_JTAG_MEM_REPAIR -> cop_jtag_mem_repair.sv
COP_JTAG_MFG -> cop_jtag_mfg.sv
COP_JTAG_MISC -> cop_jtag_misc.sv
COP_JTAG_MPI -> cop_jtag_mpi.sv
COP_JTAG_PD -> cop_jtag_pd.sv
COP_JTAG_PLL -> cop_jtag_pll.sv
COP_JTAG_REDUND -> cop_jtag_redund.sv
COP_JTAG_REFCLKSEL -> cop_jtag_refclksel.sv
SYS_MSIREQ -> cstate.sv
SYS_SYNC_LOCAL -> cstate.sv
SYS_SYNC_LOCAL -> cstate.sv
SYS_SYNC_LOCAL -> cstate.sv
FSBC_CFG_EN -> fsbc_vrg.sv
FSBC_MSR_CFG -> fsbc_vrg.sv
FSBC_JTAG_CFG -> fsbc_vrg.sv
FSBC_LOW_THRESHOLD -> fsbc_vrg.sv
FSBC_HIGH_THRESHOLD -> fsbc_vrg.sv
FSBC_MISS_DUMP -> fsbc_vrg.sv
FSBC_WRAP_NOT_HAPPEN -> fsbc_vrg.sv
FSBC_WRAP -> fsbc_vrg.sv
FSBC_WRAP_HAPPEN -> fsbc_vrg.sv
FSBC_TRIG_SOCCAP_FIRST -> fsbc_vrg.sv
FSBC_TRIG_GPIO -> fsbc_vrg.sv
FSBC_TRIG_IOT -> fsbc_vrg.sv
SOFT_RESET -> fsbc_vrg.sv
FSBC_TRIG_UST -> fsbc_vrg.sv
FSBC_TRIG_NRT -> fsbc_vrg.sv
FSBC_TRIG_HAT -> fsbc_vrg.sv
FSBC_TRIG_TST -> fsbc_vrg.sv
FSBC_TRIG_RCT -> fsbc_vrg.sv
hif_WrSnpRsp -> hif_WrSnpRsp.sv
hif_base -> hif_base.sv
hif_base_ext -> hif_base_ext.sv
hif_c2m_c2p_ooo -> hif_c2m_c2p_ooo.sv
hif_c2p_snoop -> hif_c2p_snoop.sv
hif_c2p_snoop -> hif_c2p_snoop.sv
hif_c2p_wff -> hif_c2p_wff.sv
hif_c2p_wff -> hif_c2p_wff.sv
hif_c2p_wff -> hif_c2p_wff.sv
hif_c2p_1qw_8qw -> hif_c2pw_1qw_8qw.sv
hif_c2pwc_test -> hif_c2pwc_test.sv
hif_cw8qw_p2cr8qw -> hif_cw8qw_p2cr8qw.sv
hif_max32Read -> hif_max32read.sv
hif_max32Read -> hif_max32read.sv
hif_max36write -> hif_max36write.sv
hif_max36Write -> hif_max36write.sv
hif_sa_order -> hif_sa_order.sv
hif_sa_order -> hif_sa_order_1.sv
hif_sa_order_2 -> hif_sa_order_2.sv
hif_sa_order_final -> hif_sa_order_final.sv
hif_test -> hif_test.sv
hif_tracer -> hif_tracer.sv
hif_tracer -> hif_tracer.sv
hif_wb_wcb -> hif_wb_wcb.sv
txt_ipi -> intr_txt_ipi.sv
zx_ipi -> intr_zx_ipi.sv
l2 snoop replay for queryq full -> l2_bussnoop.sv
l2 Special case  -- Invd -> l2_enhance_case.sv
l2 Special case  -- WbInvDiag -> l2_enhance_case.sv
l2 l1i load HitM rsp clean -> l2_l1i_load.sv
HIF_C2P_QUEUE_FULL -> hif_c2p_full.sv
l2 Special case  -- Invd -> l2_special_case.sv
l2 Special case  -- WbInvDiag -> l2_special_case.sv
pvrg narrow mode -> p_p2c_transaction.sv
pin_interrupt -> pin_interrupt.sv
PPU_ACCESS_PRAM -> ppu_reg.sv
PPU_ACCESS_UNCORE_REG -> ppu_reg.sv
PPU_ACCESS_UNCORE_REG -> ppu_reg.sv
PPU_ACCESS_UNCORE_REG -> ppu_reg.sv
PPU_ACCESS_UNCORE_REG -> ppu_reg.sv
PPU_ACCESS_UNCORE_REG -> ppu_reg.sv
PPU_ACCESS_UNCORE_REG -> ppu_reg.sv
PPU_ACCESS_UNCORE_REG -> ppu_reg.sv
PPU_ACCESS_L2Q -> ppu_reg.sv
PPU_ACCESS_PPUREG -> ppu_reg.sv
PPU_ACCESS_ICR0 -> ppu_reg.sv
PPU_ACCESS_ICR1 -> ppu_reg.sv
PPU_READ_L2_REG -> ppu_reg.sv
PPU_WRITE_L2_REG -> ppu_reg.sv
PPU_ACCESS_MOB_REG -> ppu_reg.sv
PPU_ACCESS_C1_REG -> ppu_reg.sv
PPU_ACCESS_C2_REG -> ppu_reg.sv
SYS_THERMTRIP -> pstate.sv
SYS_THERMTRIP -> pstate_soc1.sv
SYS_ACCESS_GLOBAL_FSBC -> sys_msr.sv
SYS_ACCESS_GLOBAL_APIC -> sys_msr.sv
SYS_ACCESS_LOCAL_ROM -> sys_msr.sv
SYS_ACCESS_LOCAL_PATCH -> sys_msr.sv
SYS_GLOBAL_SIDECAR -> sys_msr.sv
SYS_GLOBAL_DETECTOR -> sys_msr.sv
SYS_ACCESS_GLOBAL_TPR -> sys_msr.sv
SYS_ACCESS_GLOBAL_PROBE -> sys_msr.sv
TOP_PWR -> top_a2d_power.sv
TOP_PWR -> top_a2d_power.sv
l2_fillq_case -> l2_fillq_case.sv
l2 fillq 16 -> l2_fillq_case.sv
l2 fillq 8 -> l2_fillq_case.sv
l2 fillq 31 -> l2_fillq_case.sv
l2_wbinvdL1_replay -> l2_prefetch.sv
l2 Prefetch Off -> l2_prefetch.sv
l2 Prefetch On -> l2_prefetch.sv
l2 Code Prefetch off -> l2_prefetch.sv
l2 Code Prefetch On -> l2_prefetch.sv
l2 next line prefetch off -> l2_prefetch.sv
l2 stream next line prefetch On -> l2_prefetch.sv
l2 Stream Agg Off -> l2_prefetch.sv
l2 Stream Agg On -> l2_prefetch.sv
l2 Stream Hyp Agg Off -> l2_prefetch.sv
l2 Stream Hyp Agg On -> l2_prefetch.sv
l2 Stream Hyp2 Agg Off -> l2_prefetch.sv
l2 Stream Hyp2 Agg On -> l2_prefetch.sv
l2 Box Pf On -> l2_prefetch.sv
l2 Box Pf Off -> l2_prefetch.sv
l2 Box Pf On -> l2_prefetch.sv
l2 Box Pf P1 Off -> l2_prefetch.sv
l2 Box Pf P1 On -> l2_prefetch.sv
l2 Box Pf P3 Off -> l2_prefetch.sv
l2 Box Pf P3 On -> l2_prefetch.sv
l2 Box Pf P4 Off -> l2_prefetch.sv
l2 Box Pf P4 On -> l2_prefetch.sv
l2 Box Pf P5 On -> l2_prefetch.sv
l2 Pf complex Off -> l2_prefetch.sv
l2 Pf complex On -> l2_prefetch.sv
l2_wbinvdL1_replay -> l2_wbinvdL1_replay.sv
l2 wbinvdL1_replay_L1i -> l2_wbinvdL1_replay_L1i.sv
SYS_MSIREQ -> cstate_soc1.sv
SYS_SYNC_LOCAL -> cstate_soc1.sv
SYS_SYNC_LOCAL -> cstate_soc1.sv
SYS_SYNC_LOCAL -> cstate_soc1.sv
hif_RWHitmMax -> hif_RWHitmMax.sv
HIF_PERF_EVENT -> hif_performance.sv
hif_svad_special_new -> hif_svad_special_new.sv
hif_svad_special_new -> hif_svad_special_new.sv
Felix: The file is gen_feature_tag_list.pl, num is 14 

#! /bin/env perl 

use warnings;
#use strict;

use Getopt::Std;

our($opt_t, $opt_c);
&getopts('t:c:');

$debug = 1;

$civ_dir = "/haydn/felixm-h/chx002_civ";
system "cd $civ_dir; git pull origin";
#---------------------------------------------------------------
#input
$dir = "/haydn/felixm-h/chx002_civ/vrg/class";
opendir DIR, $dir or die "Cannot open $dir !\n";
@dir = readdir DIR;

foreach(@dir){
    $file = $dir."/".$_;
    print "got fle $file\n";
    $class = $_;
    if(/\.sv$/){
        open(EO,"< $file") or die "Cannot open $file !\n";
        while(<EO>){
            if(/\/\/feature\s+tag\s*:\s*(\w[\w\s-%]+\w)\s*(\\t)?,/){
                push @feature_tag, "$1 -> $class";
            }
        }
        close(EO);
    }
}

#print @feature_tag;

foreach(@feature_tag){
    push @out, $_."\n";
}
#---------------------------------------------------------------
open OUT, "> /haydn/felixm-h/feature_tag.list";
print OUT @out;
close OUT;
Felix: The file is cross_check_class.pl, num is 15 

#! /bin/env perl 

use warnings;
#use strict;

use Getopt::Std;

our($opt_t, $opt_c);
&getopts('t:c:');

$debug = 1;

#---------------------------------------------------------------
#input
$dir = "/haydn/felixm-h/chx002_civ/vrg/class";
opendir DIR, $dir or die "Cannot open $dir !\n";
@dir = readdir DIR;

foreach(@dir){
    if(/sv/){
        push @civ_class, $_;
    }
}

print @civ_class;
#---------------------------------------------------------------
#input
$file = "/haydn/felixm-h/vp_output_class";

open(EO,"< $file") or die "Cannot open $file !\n";
while(<EO>){
    if(/sv/){
        push @vp_class, $_;
    }
}
close(EO);

#---------------------------------------------------------------
@list = ();

$total_cnt = 0;
$miss_cnt = 0;

foreach(@vp_class){

    #if(/^#/){} #pass
    if(/sv/){
        $class_name = $_;
        print "class name = $class_name\n";
        $total_cnt++;
        
        $find = 0;
        foreach(@civ_class){
            if(/$class_name/){
                $find = 1;
                last;
            }
        }

        if($find){
            #push @log, "find $class_name in CIV\n";
        }
        else{
            $miss_cnt++;
            push @log, "can't find $class_name \n";
        }
    }
}

print "miss rate = $miss_cnt/$total_cnt\n";
#---------------------------------------------------------------
open OUT, "> ./check_vp_class.log";
print OUT @log;
close OUT;
Felix: The file is gen_checker_list.pl, num is 16 

#! /bin/env perl 

use warnings;
#use strict;

use Getopt::Std;

our($opt_t, $opt_c);
&getopts('t:c:');

$debug = 1;

$civ_dir = "/haydn/felixm-h/chx002_civ";
system "cd $civ_dir; git pull origin";
#---------------------------------------------------------------
#input
$dir = "/haydn/felixm-h/chx002_civ/src/behavior_check";
opendir DIR, $dir or die "Cannot open $dir !\n";
@dir = readdir DIR;

foreach(@dir){
    if(/v/){
        push @civ_checker, $_;
    }
}

print @civ_checker;

@checker_list = qw/ hif_svadcheck.v vpi_mon.sv syswrite_chk.sv sysread_chk.sv/;
push @checker_list, "bus checker";
push @checker_list, "interrupt checker";
push @checker_list, "l2 checker";
push @checker_list, "FSBC final check";
push @checker_list, "fsbc_vrg.sv";
push @checker_list, "fsbc_monitor.v";
push @checker_list, "data order checker";
push @checker_list, "l2 coherence checker";
push @checker_list, "Dorderchecker.sv";
push @checker_list, "hifReqGnt_chk.sv";
push @checker_list, "hifProtocol.sv ";
push @checker_list, "hifLock.sv";
push @checker_list, "hifC2P.sv";
push @checker_list, "hif_p2c_priority.sv";
push @checker_list, "interrupt_checker.sv";
push @checker_list, "coherence_cosim_check.c";
push @checker_list, "cdc_format_checker.sv";
push @checker_list, "top.sv (Fusedp_Final_Check)";
push @checker_list, "pstate checker";
push @checker_list, "svid_master checker";
push @checker_list, "cstate handler in core model";
push @checker_list, "chk_soc_cache_3.0.c";
push @checker_list, "FSBC_Check.pl";
push @checker_list, "Fusedp_Final_Check";
push @checker_list, "Jtag_Tdi Checker";
push @checker_list, "Jtag_Master";
push @checker_list, "Jtag_Master->Jtag_InstData->Jtag_Tdi_Check_Socket0/1";
push @checker_list, "Jtag_Master->Jtag_InstData";
push @checker_list, "pstate_chk checker";
push @checker_list, "wait_pcr checker";
push @checker_list, "hif_c2pp2Check";
push @checker_list, "FSBC final check:FSBC_Check.pl";
push @checker_list, "processor/sva/l2Sva/l2BusLock.sv";
push @checker_list, "l2 data checker";
push @checker_list, "l2 query chk";
push @checker_list, "l2 normal snoop rsp checker";
push @checker_list, "l2 cmpRpy checker";
push @checker_list, "l2 coherence checker";
push @checker_list, "DorderChecker";
push @checker_list, "tmon_initial.sv";
push @checker_list, "vdmafs_initial.sv";
push @checker_list, "pmon_initial.sv";
push @checker_list, "pll_initial.sv";
push @checker_list, "hif_shadowcheck.v";
push @checker_list, "l2CodeLoadQEntryCtl_chk.sv";
push @checker_list, "l2DataChecker";
push @checker_list, "l2clFlushSnoopChk.sv";
push @checker_list, "l2BusLock.sv";
push @checker_list, "l2FillQCtl_chk_1.sv";
push @checker_list, "l2CodeQueryQCtl_chk_0.sv";
push @checker_list, "l2DataQueryQCtl_chk_0.sv";
push @checker_list, "l2DataQueryQEntryCtl_chk.sv";
push @checker_list, "l2DataEvictQEntryCtl_chk.sv";
push @checker_list, "l2DataLoadQEntryCtl_chk.sv";
push @checker_list, "l2FillQEntryCtl_chk.sv";
push @checker_list, "l2SnoopQEntryCtl_chk";
push @checker_list, "l2CodeEvictQEntryCtl_chk.sv";
push @checker_list, "l2CodeQueryQEntryCtl_chk.sv";
push @checker_list, "hif_c2psnoop.sv";
push @checker_list, "l2SelfSnoop_chk.sv";
push @checker_list, "sync.sv";
push @checker_list, "l2NorSnpRspChk.sv";
push @checker_list, "l2 Sram Dead checker";#2017-09-11 Felix add
push @checker_list, "l2 cmpRpy checker";
push @checker_list, "l2NorSnpRspChker";
push @checker_list, "l2StreamModel.sv";
push @checker_list, "l2Prefetch_chk.sv";
push @checker_list, "l2 Register load checker";
push @checker_list, "l2 Pram Path Checker";
push @checker_list, "l2SizeEngineCtl_chk";
push @checker_list, "l2SramDead_chk";
push @checker_list, "";

push @civ_checker, @checker_list;
#---------------------------------------------------------------
$script_dir = "/haydn/felixm-h/cov_feature";

$sva_dir = "$script_dir/chx002_design/processor/sva";

#get feature list
system "cd $sva_dir; git pull origin";
#system "cat $sva_dir/*Sva/*sv > $script_dir/all_Sva";
system "cat $sva_dir/sysSva/*.sv > $script_dir/all_Sva";
system "cat $sva_dir/hifSva/*.sv >> $script_dir/all_Sva";
system "cat $sva_dir/busSva/*.sv >> $script_dir/all_Sva";
system "cat $sva_dir/l2Sva/*.sv >> $script_dir/all_Sva";
system "cat $sva_dir/fsbcSva/*.sv >> $script_dir/all_Sva";
system "cat $sva_dir/apicSva/*.sv >> $script_dir/all_Sva";
#system "cat $sva_dir/copSva/*.sv >> $script_dir/all_Sva";
system "cat $sva_dir/topSva/*.sv >> $script_dir/all_Sva";
#system "cat $sva_dir/ppuSva/*.sv >> $script_dir/all_Sva";
system "cat $sva_dir/vpiplSva/*.sv >> $script_dir/all_Sva";

$file = "/haydn/felixm-h/cov_feature/all_Sva";

open(EO,"< $file") or die "Cannot open $file !\n";
while(<EO>){
    #if(/^\s*(a_\w+)/){
    if(/^\s*(\w+)\s*:/){
        chomp;
        push @civ_sva, $1;
    }
}
close(EO);


push @civ_checker, @civ_sva;


#---------------------------------------------------------------
#add vec
$dir = "/haydn/felixm-h/chx002_civ/vec";
opendir DIR, $dir or die "Cannot open $dir !\n";
@dir = readdir DIR;

foreach(@dir){
    if(/src/){
        push @civ_vector, $_;
    }
}

push @civ_checker, @civ_vector;

#---------------------------------------------------------------
#add class
$dir = "/haydn/felixm-h/chx002_civ/vrg/class";
opendir DIR, $dir or die "Cannot open $dir !\n";
@dir = readdir DIR;

foreach(@dir){
    if(/sv/){
        push @civ_class, $_;
    }
}

push @civ_checker, @civ_class;

#---------------------------------------------------------------
#add sva name
$dir = "/haydn/felixm-h/chx002_civ/src/processor/sva/hifSva";
opendir DIR, $dir or die "Cannot open $dir !\n";
@dir = readdir DIR;

foreach(@dir){
    if(/sv/){
        push @civ_sva_name, $_;
    }
}
push @civ_checker, @civ_sva_name;
#---------------------------------------------------------------
#add pstate checker
$file = "/haydn/felixm-h/chx002_civ/src/behavior_model/vrm/pstate_chk.v";

open(EO,"< $file") or die "Cannot open $file !\n";
while(<EO>){
    if(/^\s*(a_\w+)/){
        chomp;
        push @civ_checker, $1;
    }
}
close(EO);
#---------------------------------------------------------------
#add svid checker
$file = "/haydn/felixm-h/chx002_civ/src/behavior_model/pci/svid_master.v";

open(EO,"< $file") or die "Cannot open $file !\n";
while(<EO>){
    if(/^\s*(a_\w+)/){
        chomp;
        push @civ_checker, $1;
    }
}
close(EO);

#---------------------------------------------------------------
#add vec
$dir = "/haydn/felixm-h/chx002_civ/vec";
opendir DIR, $dir or die "Cannot open $dir !\n";
@dir = readdir DIR;

foreach(@dir){
    if(/\.src/){
        $file = $dir."/".$_;
        open(EO,"< $file") or die "Cannot open $file !\n";
        while(<EO>){
            if(/(a_\w+)\s*:/){
                chomp;
                push @civ_checker, $1;
            }
        }
        close(EO);
    }
}

#---------------------------------------------------------------

push @civ_checker, "NA";
push @civ_checker, "svid_master.v";
push @civ_checker, "sb.v";
push @civ_checker, "pstate_chk.v";
push @civ_checker, "task.org.v->TrdMsr";
#add \n
foreach(@civ_checker){
    push @out, $_."\n";
}

#---------------------------------------------------------------
open OUT, "> /haydn/felixm-h/civ_checker.list";
print OUT @out;
close OUT;
Felix: The file is cross_check_checker.pl, num is 17 

#! /bin/env perl 

use warnings;
#use strict;

use Getopt::Std;

our($opt_t, $opt_c);
&getopts('t:c:');

$debug = 1;

#---------------------------------------------------------------
#input
$dir = "/haydn/felixm-h/chx002_civ/src/behavior_check";
opendir DIR, $dir or die "Cannot open $dir !\n";
@dir = readdir DIR;

foreach(@dir){
    if(/v/){
        push @civ_checker, $_;
    }
}

print @civ_checker;

@checker_list = qw/ hif_svadcheck.v hifProtocol.sv Dorderchecker.sv hifReqGnt_chk.sv hifReqGnt_chk.sv vpi_mon.sv fsbc_monitor.v Dorderchecker.sv hifReqGnt_chk.sv hifLock.sv hif_shadowcheck.v syswrite_chk.sv sysread_chk.sv/;
push @checker_list, "bus checker";
push @checker_list, "interrupt checker";
push @checker_list, "l2 checker";
push @checker_list, "FSBC final check";
push @checker_list, "FSBC final check:FSBC_Check.pl";
push @checker_list, "fsbc_vrg.sv";
push @checker_list, "fsbc_monitor.v & FSBC final check:FSBC_Check.pl";
push @checker_list, "Jtag_Tdi Checker";
push @checker_list, "hifProtocol.sv";
push @checker_list, "Dorderchecker.sv/hifIFchk_x.sv";
push @checker_list, "hifARB.sv";
push @checker_list, "data order checker";
push @checker_list, "syswrite_chk.sv, sysread_chk.sv";
push @checker_list, "l2 coherence checker";
push @checker_list, "l2 coherence checker & l2 data checker";
push @checker_list, "Dorderchecker.sv/hifProtocol.sv";
push @checker_list, "Dorderchecker.sv/hifReqGnt_chk.sv";
push @checker_list, "Jtag_Master->Jtag_InstData->Jtag_Tdi_Check_Socket0/1";
push @checker_list, "hifReqGnt_chk.sv/hifLock.sv";
push @checker_list, "hifC2P.sv /hif_c2pp2Check";
push @checker_list, "Dorderchecker.sv/hif_p2c_priority.sv";
push @checker_list, "hifProtocol.sv/interrupt_checker.sv";
push @checker_list, "data order checker, a_RTxHang";
push @checker_list, "data order checker, coherence_cosim_check.c";
push @checker_list, "Dorderchecker.sv/cdc_format_checker.sv";
push @checker_list, "Dorderchecker.sv/hif_p2c_priority.sv";
push @checker_list, "top.sv (Fusedp_Final_Check)";
push @checker_list, "syswrite_chk.sv, sysread_chk.sv";
push @checker_list, "hifProtocol.sv ";
push @checker_list, "top.sv (Fusedp_Final_Check)";
push @checker_list, "pstate checker";
push @checker_list, "svid_master checker";
push @checker_list, "cstate handler in core model";
push @checker_list, "top.sv (Fusedp_Final_Check)";
push @checker_list, "syswrite_chk.sv,   sysread_chk.sv";

push @civ_checker, @checker_list;
#---------------------------------------------------------------
$script_dir = "/haydn/felixm-h/cov_feature";

$sva_dir = "$script_dir/chx002_design/processor/sva";

#get feature list
system "cd $sva_dir; git pull origin";
#system "cat $sva_dir/*Sva/*sv > $script_dir/all_Sva";
system "cat $sva_dir/sysSva/*.sv > $script_dir/all_Sva";
system "cat $sva_dir/hifSva/*.sv >> $script_dir/all_Sva";
system "cat $sva_dir/busSva/*.sv >> $script_dir/all_Sva";
system "cat $sva_dir/l2Sva/*.sv >> $script_dir/all_Sva";
system "cat $sva_dir/fsbcSva/*.sv >> $script_dir/all_Sva";
system "cat $sva_dir/apicSva/*.sv >> $script_dir/all_Sva";
system "cat $sva_dir/copSva/*.sv >> $script_dir/all_Sva";
system "cat $sva_dir/topSva/*.sv >> $script_dir/all_Sva";
system "cat $sva_dir/ppuSva/*.sv >> $script_dir/all_Sva";
system "cat $sva_dir/vpiplSva/*.sv >> $script_dir/all_Sva";

$file = "/haydn/felixm-h/cov_feature/all_Sva";

open(EO,"< $file") or die "Cannot open $file !\n";
while(<EO>){
    if(/a_/){
        push @civ_sva, $_;
    }
}
close(EO);


push @civ_checker, @civ_sva;


#---------------------------------------------------------------
#add vec
$dir = "/haydn/felixm-h/chx002_civ/vec";
opendir DIR, $dir or die "Cannot open $dir !\n";
@dir = readdir DIR;

foreach(@dir){
    if(/src/){
        push @civ_vector, $_;
    }
}

push @civ_checker, @civ_vector;

#---------------------------------------------------------------
#add class
$dir = "/haydn/felixm-h/chx002_civ/vrg/class";
opendir DIR, $dir or die "Cannot open $dir !\n";
@dir = readdir DIR;

foreach(@dir){
    if(/sv/){
        push @civ_class, $_;
    }
}

push @civ_checker, @civ_class;

#---------------------------------------------------------------
#add sva name
$dir = "/haydn/felixm-h/chx002_civ/src/processor/sva/hifSva";
opendir DIR, $dir or die "Cannot open $dir !\n";
@dir = readdir DIR;

foreach(@dir){
    if(/sv/){
        push @civ_sva_name, $_;
    }
}

push @civ_checker, @civ_sva_name;
#---------------------------------------------------------------
#input
$file = "/haydn/felixm-h/vp_output_checker";

open(EO,"< $file") or die "Cannot open $file !\n";
while(<EO>){
    #if(/(\w*(sv|a_)\w*)/){
    chomp;
    push @vp_checker, $_;
        #}
    if(/owner is (\w+)/){
        $owner = $1;
        $o{$_} = $owner;
        $o_list{$owner} = '';
    }
}
close(EO);

#---------------------------------------------------------------
@list = ();

$total_cnt = 0;
$miss_cnt = 0;

$result_dir = "/haydn/felixm-h/cross_check_checker";
#if(-e $result_dir) { system "rm -rf $result_dir";}
#system "mkdir $result_dir";


#foreach(@vp_checker){
foreach $owner (keys %o_list){
    @owner_log = ();
    @owner_pass_log = ();
    @owner_fail_log = ();
    $owner_total_cnt = 0;
    $owner_miss_cnt = 0;
    $owner_hit_cnt = 0;
    $head_info = "";
    print "------------------\n";

while (($key, $value) = each %o){

    if($value eq $owner){

    #$content = $o{$owner};
    $content = $key;
    #$owner = $value;
    print "owner= $owner\n";
    
    #if(/^#/){} #pass
    if($content =~ /^\s*(.*) -> (.*)/){
        $checker_name = $1;
        $checker_info = $2;
        print "checker name = $checker_name\n";
        $total_cnt++;
        $owner_total_cnt++;
        
        $find = 0;

        if($checker_name =~ /xxxx/){
            @item = split($checker_name, ',');
            $find_count = 0;
            $tootal_count = 0;
            print @item;
            print "\n";
            foreach(@item){
                chomp;
                $c = $_;
                $total_count++;
                foreach(@civ_checker){
                    if(/$c/){
                        $find_count++;
                        last;
                    }
                }
            }

            if($find_count == $total_count) { $find = 1;}
            print "$checker_name, $find_count, $total_count \n";
        }
        elsif($checker_name =~ /a_/){
            $find = 1;
        }
        else{
            foreach(@civ_checker){
                if(/$checker_name/){
                    $find = 1;
                    last;
                }
            }
        }

        if($find){
            $pass_info = "find $checker_name in CIV\n";
            push @owner_pass_log, $pass_info;
            $owner_hit_cnt++;
        }
        else{
            $miss_cnt++;
            $owner_miss_cnt++;
            $fail_info = "can't find $checker_name, vp is $checker_info \n";
            push @owner_fail_log, $fail_info;
        }

        push @log, $fail_info;

    }
}
}
    
    $head_info = "$owner : $owner_hit_cnt/$owner_total_cnt\n";
    push @summary_log, $head_info;

    push @owner_log, $head_info;
    push @owner_log, @owner_fail_log;
    push @owner_log, @owner_pass_log;

    #output report by owner
    open OUT, "> $result_dir/$owner\_checker.log";
    print OUT @owner_log;
    close OUT;
}
print "miss rate = $miss_cnt/$total_cnt\n";
print "hit summary:\n";
print @summary_log;
#---------------------------------------------------------------
open OUT, "> ./check_vp_checker.log";
print OUT @log;
close OUT;

open OUT, "> /haydn/felixm-h/civ_checker.list";
print OUT @civ_checker;
close OUT;
Felix: The file is gen_cover_sva_list.pl, num is 18 

#! /bin/env perl 

use warnings;
#use strict;

use Getopt::Std;

our($opt_t, $opt_c);
&getopts('t:c:');

$debug = 1;

$civ_dir = "/haydn/felixm-h/chx002_civ";
system "cd $civ_dir; git pull origin";
#---------------------------------------------------------------
#input
$script_dir = "/haydn/felixm-h/cov_feature";

$sva_dir = "$script_dir/chx002_design/processor/sva";

#get feature list
system "cd $sva_dir; git pull origin";
system "cat $sva_dir/sysCov/*.sv > $script_dir/all_Cov";
system "cat $sva_dir/hifCov/*.sv >> $script_dir/all_Cov";
system "cat $sva_dir/busCov/*.sv >> $script_dir/all_Cov";
system "cat $sva_dir/l2Cov/*.sv >> $script_dir/all_Cov";
system "cat $sva_dir/fsbcCov/*.sv >> $script_dir/all_Cov";
system "cat $sva_dir/apicCov/*.sv >> $script_dir/all_Cov";
system "cat $sva_dir/copCov/*.sv >> $script_dir/all_Cov";
system "cat $sva_dir/topCov/*.sv >> $script_dir/all_Cov";
system "cat $sva_dir/ppuCov/*.sv >> $script_dir/all_Cov";
system "cat $sva_dir/vpiplCov/*.sv >> $script_dir/all_Cov";

$file = "/haydn/felixm-h/cov_feature/all_Cov";

open(EO,"< $file") or die "Cannot open $file !\n";
while(<EO>){
    if(/^\s*(c_\w+)/ or /^\s*covergroup\s+(\w+)/){
        chomp;
        push @civ_cov, $1;
    }
}
close(EO);

#add vec
$dir = "/haydn/felixm-h/chx002_civ/vec";
opendir DIR, $dir or die "Cannot open $dir !\n";
@dir = readdir DIR;

foreach(@dir){
    if(/\.src/){
        $file = $dir."/".$_;
        open(EO,"< $file") or die "Cannot open $file !\n";
        while(<EO>){
            if(/(c_\w+)\s*:/){
                chomp;
                push @civ_vec, $1;
            }
        }
        close(EO);
    }
}


push @civ_cov, @civ_vec;
push @civ_cov, "NA";

foreach(@civ_cov){
    push @out, $_."\n";
}

#---------------------------------------------------------------
open OUT, "> /haydn/felixm-h/civ_cover_sva.list";
print OUT @out;
close OUT;
Felix: The file is check_class_covered.pl, num is 19 

#! /bin/env perl 

use warnings;
#use strict;

use Getopt::Std;

our($opt_t, $opt_c);
&getopts('t:c:');

$debug = 1;

#---------------------------------------------------------------
#input
$file = "/haydn/felixm-h/feature_tag.list";

open(EO,"< $file") or die "Cannot open $file !\n";
while(<EO>){
    push @all_feature_tag, $_;
}
close(EO);

#---------------------------------------------------------------
#input
$file = "/haydn/felixm-h/randomed_feature_tag.list";

open(EO,"< $file") or die "Cannot open $file !\n";
while(<EO>){
    push @randomed_feature_tag, $_;
}
close(EO);

#---------------------------------------------------------------
#gen class
my %class_count_hash;
my %class_count_hash_2;
my %tag_class_hash;

foreach(@all_feature_tag){
    if(/^(.*) -> (\w+\.sv)/){
        $tag = $1;
        $class = $2;
        $tag_class_hash{$tag} = $class;

        if(exists $class_count_hash{$class}){
            $class_count_hash{$class} = $class_count_hash{$class} + 1;
        }
        else{
            $class_count_hash{$class} = 1;
        }
    }
}
#---------------------------------------------------------------
foreach(@randomed_feature_tag){
    chomp;


    $t = $_;
    $class = $tag_class_hash{$t};

    unless(defined $class){
        print "t = $t , class is not exit \n";        
#        exit;
    }

    if(exists $class_count_hash_2{$class}){
        $class_count_hash_2{$class} = $class_count_hash_2{$class} + 1;
    }
    else{
        $class_count_hash_2{$class} = 1;
    }
    
}

#---------------------------------------------------------------
foreach $class (keys %class_count_hash_2){
    $cnt1 = $class_count_hash{$class};
    $cnt2 = $class_count_hash_2{$class};

    if($cnt1 == $cnt2){
        print "class $class is covered, cnt1 = $cnt1, cnt2 = $cnt2\n";
        push @out, "$class\n";
    }
    else{
        print "class $class is not covered, cnt1 = $cnt1, cnt2 = $cnt2\n";
    }
}

#---------------------------------------------------------------
open OUT, "> ./covered_class.list";
print OUT @out;
close OUT;
Felix: The file is gen_stimulus_list.pl, num is 20 

#! /bin/env perl 

use warnings;
#use strict;

use Getopt::Std;

our($opt_t, $opt_c);
&getopts('t:c:');

$debug = 1;

$civ_dir = "/haydn/felixm-h/chx002_civ";
system "cd $civ_dir; git pull origin";
#---------------------------------------------------------------
#input
$dir = "/haydn/felixm-h/chx002_civ/vrg/class";
opendir DIR, $dir or die "Cannot open $dir !\n";
@dir = readdir DIR;

foreach(@dir){
    if(/\.sv/){
        push @civ_class, $_;
    }
}

$dir = "/haydn/felixm-h/chx002_civ/vec";
opendir DIR, $dir or die "Cannot open $dir !\n";
@dir = readdir DIR;

foreach(@dir){
    if(/\.src/){
        push @civ_class, $_;
    }
}

push @civ_class, "NA";
push @civ_class, "Cannot cover in civ";
push @civ_class, "svid_master.v";
push @civ_class, "invd_snoop_table.v";
push @civ_class, "tmon_initial.sv";
push @civ_class, "vdmafs_initial.sv";
push @civ_class, "pmon_initial.sv";
push @civ_class, "pll_initial.sv";
push @civ_class, "init_hif_msr.v";
push @civ_class, "apic class";
push @civ_class, "hif class";
push @civ_class, "fsbc class";
push @civ_class, "sb.v";
push @civ_class, "init sequence";

foreach(@civ_class){
    push @out, $_."\n";
}
#---------------------------------------------------------------
open OUT, "> /haydn/felixm-h/civ_stimulus.list";
print OUT @out;
close OUT;
Felix: The file is gen_randomed_feature_tag_list.pl, num is 21 

#! /bin/env perl 

use warnings;
#use strict;

use Getopt::Std;

our($opt_t, $opt_c);
&getopts('t:c:');

$debug = 1;

#---------------------------------------------------------------
#input
#/tmp_space/cpu/users/felix/chx002_vrg_result/master
$dir = "/tmp_space/cpu/users/felix/chx002_vrg_result/refined_tag";
opendir DIR, $dir or die "Cannot open $dir !\n";
@dir = readdir DIR;

@feature_tag = ();

foreach(@dir){
    if(/src/){
        $file = $dir."/".$_;
        #print "processing log: $file\n";
        open(EO,"< $file") or die "Cannot open $file !\n";
        while(<EO>){
            if(/^\s*\/\/\s*feature\s+tag\s*:\s*(\w[\s\w-]+\w)\s*,/){
                chomp;
                push @feature_tag, $1;
            }
        }
        close(EO);
    }
}

#print @feature_tag;

#---------------------------------------------------------------
@new = ();

foreach(@feature_tag){
    $tag = $_;
    $find = 0;

    foreach(@new){
        if(/$tag/){
            $find = 1;
            last;
        }
    }

    if(!$find){ push @new, $tag; }
}

#---------------------------------------------------------------
foreach(@new){
    push @out, $_."\n";
}
#---------------------------------------------------------------
open OUT, "> /haydn/felixm-h/randomed_feature_tag.list";
print OUT @out;
close OUT;
Felix: The file is check_unrandomed_class.pl, num is 22 

#! /bin/env perl 

use warnings;
#use strict;

use Getopt::Std;

our($opt_t, $opt_c);
&getopts('t:c:');

$debug = 1;

#---------------------------------------------------------------
#input
$file = "/haydn/felixm-h/feature_tag.list";

open(EO,"< $file") or die "Cannot open $file !\n";
while(<EO>){
    push @all_feature_tag, $_;
}
close(EO);

#---------------------------------------------------------------
#input
$file = "/haydn/felixm-h/randomed_feature_tag.list";

open(EO,"< $file") or die "Cannot open $file !\n";
while(<EO>){
    push @randomed_feature_tag, $_;
}
close(EO);

#---------------------------------------------------------------

foreach(@all_feature_tag){
    $find = 0;
    $item = $_;
    if(/(.*) -> (.*)/){
        $a = $1;
        $class = $2;
    }

    foreach(@randomed_feature_tag){
        if(/$a/){
            $find = 1;
            last;
        } 
    }

    if(!$find){
        push @out, $item;
    }
}



#---------------------------------------------------------------
open OUT, "> ./unrandom_feature_tag.list";
print OUT @out;
close OUT;
Felix: The file is check_class_register.pl, num is 23 

#! /bin/env perl 

use warnings;
#use strict;

use Getopt::Std;

our($opt_t, $opt_c);
&getopts('t:c:');

$debug = 1;

#---------------------------------------------------------------
#input
$civ_dir = "/haydn/felixm-h/chx002_civ";
system "cd $civ_dir; git pull origin";
#---------------------------------------------------------------
#input
$dir = "/haydn/felixm-h/chx002_civ/vrg/class";
opendir DIR, $dir or die "Cannot open $dir !\n";
@dir = readdir DIR;

foreach(@dir){
    if(/(\w+)\.sv/){
        $class = $1;
        unless($class =~ /p2c_pvrg|p_mob_transaction|p_p2c_transaction|sequence_select|hif_base|hif_base_ext|data_transaction|intr_lvt_lint_interrupt||intr_lvt_other_interrupt|intr_lvt_timer_interrupt|intr_transaction|intr_ipi_interrupt|intr_set_tpr|intr_txt_ipi|intr_zx_ipi|intr_msi_interrupt|l2_vrg_base|mob_transaction|cf_p2c_transaction|l1i_transaction|p2c_transaction|cop_jtag_diagcontrol|cop_jtag_refclksel|ext_intr|hif_Eviction|hif_SetGen|hif_c2pwc_test|hif_test|hif_msr_initial/){
            push @civ_class, $class;
        }
    }
}

#---------------------------------------------------------------
#input
$file = "/haydn/felixm-h/chx002_civ/bin/auto_vrg.pl";

open(EO,"< $file") or die "Cannot open $file !\n";
while(<EO>){
    if(/w_.*=/){
        push @weight_list, $_;
    }
}
close(EO);

#---------------------------------------------------------------
foreach(@civ_class){
    $class = $_;
    $find = 0;

    foreach(@weight_list){
        chomp;
        $weight = $_;
        if(/$class/){
            $find = 1;
            last;
        }
    }

    if($find){
        push @out, "$class is find, weight is $weight\n";
    }
    else{
        push @unfind, "$class is not find\n";
    }
} 

unshift @out, @unfind;
#---------------------------------------------------------------
open OUT, "> ./register_class.list";
print OUT @out;
close OUT;
Felix: The file is covered_class.list, num is 24 

cop_msr_if.sv
cop_jtag_cpurst_chipset.sv
hif_SMSetWy.sv
l2_l1i_evict.sv
hif_monitor_x.sv
cop_jtag_pll.sv
l2_evictfull.sv
hif_wrtkFull.sv
cop_jtag_misc.sv
hif_pmc.sv
hif_shadow_lock.sv
hif_cdc.sv
sys_msr.sv
l1i_transaction.sv
bus_smi.sv
intr_ctrl.sv
hif_mca.sv
intr_self_intr.sv
vpi_c2mRead.sv
cop_jtag_phase_err.sv
hif_c2p_p2c.sv
hif_C2P_SPSW_Nonpost.sv
cf_p2c_transaction.sv
hif_SBRemt.sv
hif_p2c_clx_arb.sv
vpi_msr.sv
cop_jtag_mfg.sv
hif_raw.sv
l2_replay_evict.sv
intr_lvt_timer_interrupt.sv
l2_coherence_inside.sv
cop_jtag_probe.sv
hif_shadowchk.sv
vpi_c2mWrite.sv
intr_lvt_other_interrupt.sv
hif_c2pp2.sv
l2_matBlocker.sv
hif_hitsmA_hitsmSW.sv
hif_p2cq_full.sv
hif_sameaddr_new.sv
intr_special.sv
bus_tracker_full.sv
p2c_pvrg.sv
l2_Mob_RDI.sv
cop_jtag_redund.sv
cop_jtag_002_new.sv
hif_40pa.sv
hif_ec_mca.sv
intr_lvt_lint_interrupt.sv
hif_relff_full_c2m.sv
intr_ipi_interrupt.sv
intr_set_tpr.sv
l2_forQueryAndReplay.sv
hif_hit_20entry.sv
hif_svad_mem_interleave.sv
cop_jtag_testpin.sv
cop_jtag_fuseblowread.sv
hif_p2c_invd.sv
intr_en_zx_ipi.sv
l2_l1i_load.sv
cop_jtag_pd.sv
hif_eightCore.sv
intr_zx_ipi.sv
intr_msr.sv
vpi_partial_rst_msr.sv
l2_wr.sv
cop_jtag_fusedp.sv
intr_spur.sv
mob_transaction.sv
hif_buffer_full_bus.sv
hif_STBusy.sv
hif_c2mWrite.sv
hif_monitor.sv
hif_c2mRead.sv
hotwire.sv
sys_interrupt.sv
hif_clflush.sv
l2_cover_random.sv
l2_wbinvdL1_replay_L1i.sv
intr_msi_interrupt.sv
hif_rspQFull.sv
hif_SnpHitSetWy.sv
bus_evict.sv
p2c_transaction.sv
hif_msr_initial.sv
hif_sa_full.sv
hif_sameaddr.sv
hif_svad_io.sv
hif_special_cycle.sv
hif_lock.sv
intr_tprtable_rr.sv
cop_jtag_mpi.sv
l2_replay_reload.sv
hif_performance.sv
intr_txt_ipi.sv
hif_c2p_full.sv
Felix: The file is register_class.list, num is 25 

cf_p2c_transaction is not find
check_data_order is not find
cop_jtag_diagcontrol is not find
cop_jtag_refclksel is not find
data_transaction is not find
ext_intr is not find
hif_base is not find
hif_base_ext is not find
hif_c2pwc_test is not find
hif_cw8qw_p2cr8qw is not find
intr_msi_interrupt is not find
hif_msr_initial is not find
hif_test is not find
hif_tracer is not find
hif_wb_wcb is not find
insert_idle is not find
intr_ctrl is not find
intr_en_zx_ipi is not find
intr_ipi_interrupt is not find
intr_lvt_lint_interrupt is not find
intr_lvt_other_interrupt is not find
intr_lvt_timer_interrupt is not find
intr_set_tpr is not find
intr_spur is not find
intr_tprtable_rr is not find
intr_transaction is not find
intr_txt_ipi is not find
intr_zx_ipi is not find
l1i_transaction is not find
l2_vrg_base is not find
mob_transaction is not find
p2c_pvrg is not find
p2c_transaction is not find
p_mob_transaction is not find
p_p2c_transaction is not find
pin_interrupt is not find
sequence_select is not find
hif_Eviction is not find
hif_SetGen is not find
hif_base_c2mread is not find
hif_base_c2mwrite is not find
bus_evict is find, weight is $w_bus_evict = int(rand(10));
bus_msr is find, weight is $w_bus_msr = int(rand(10));
bus_smi is find, weight is $w_bus_smi = int(rand(30));
bus_special_read is find, weight is $w_bus_special_read = int(rand(30));
bus_tracker_full is find, weight is $w_bus_tracker_full = int(rand(10));
bus_wc is find, weight is $w_bus_wc = int(rand(30));
cop_jtag_002_new is find, weight is $w_cop_jtag_002_new = int(rand(10));
cop_jtag_cpurst_chipset is find, weight is $w_cop_jtag_cpurst_chipset = int(rand(3));
cop_jtag_fuseblowread is find, weight is $w_cop_jtag_fuseblowread = int(rand(10));#2017-05-12 Felix : from 3 to 10
cop_jtag_fusedp is find, weight is $w_cop_jtag_fusedp = int(rand(3));
cop_jtag_mem_repair is find, weight is $w_cop_jtag_mem_repair = ($A4B0 | $A0B4 | $REPAIR_EN) ? 0 : int(rand(3));#2017-05-12 Felix: when REPAIR_EN not enable
cop_jtag_mfg is find, weight is $w_cop_jtag_mfg = int(rand(3));
cop_jtag_misc is find, weight is $w_cop_jtag_misc = 0; #int(rand(3));
cop_jtag_mpi is find, weight is $w_cop_jtag_mpi = int(rand(3));
cop_jtag_pd is find, weight is $w_cop_jtag_pd = int(rand(3));
cop_jtag_phase_err is find, weight is $w_cop_jtag_phase_err = int(rand(3));
cop_jtag_pll is find, weight is $w_cop_jtag_pll = int(rand(3));
cop_jtag_probe is find, weight is $w_cop_jtag_probe = int(rand(3));
cop_jtag_redund is find, weight is $w_cop_jtag_redund = int(rand(3));
cop_jtag_testpin is find, weight is if($FSBC) {$w_cop_jtag_testpin = 0;} else {$w_cop_jtag_testpin = int(rand(3));}
cop_msr_if is find, weight is $w_cop_msr_if = ($A4B0 | $A0B4 | $REPAIR_EN) ? 0 : int(rand(3));#2017-05-12 Felix: when REPAIR_EN not enable
cstate is find, weight is $w_cstate_soc1 = $DUAL_SOCKET ? int(rand(2)) + 100 * $long_mode : 0;
eight_core_transaction is find, weight is $w_eight_core_transaction = int(rand(50)) + 200;#org is 500
fsbc_vrg is find, weight is $w_fsbc_vrg = $FUNC_TEST ? 0 : int(rand(100));
hif_40pa is find, weight is $w_hif_40pa = int(rand(10));
hif_C2P_SPSW_Nonpost is find, weight is if($opt_m eq "chx001_a0") { $w_hif_C2P_SPSW_Nonpost = 0;} else { $w_hif_C2P_SPSW_Nonpost = int(rand(30)); }
hif_WrSnpRsp is find, weight is #$w_hif_WrSnpRsp = 0;
hif_c2mRead is find, weight is $w_hif_c2mRead = int(rand(10));
hif_c2mWrite is find, weight is if($parallel_mode) {$w_hif_c2mWrite = 0;} else {$w_hif_c2mWrite = int(rand(10));}
hif_c2m_c2p_ooo is find, weight is if($A4B0 | $A0B4) {$w_hif_c2m_c2p_ooo = 0;} else {$w_hif_c2m_c2p_ooo = int(rand(10)) + 100 * $hif_verify;} 
hif_c2p_read is find, weight is $w_hif_c2p_read = int(rand(10)) + 100 * $hif_verify;
hif_c2p_rff is find, weight is if($A4B0 | $A0B4 | $parallel_mode) {$w_hif_c2p_rff = 0;} else {$w_hif_c2p_rff = int(rand(30)) + 100 * $hif_verify;}
hif_c2p_snoop is find, weight is #$w_hif_c2p_snoop = int(rand(10)) + 100 * $hif_verify;
hif_c2p_wff is find, weight is if($A4B0 | $A0B4 | $parallel_mode) {$w_hif_c2p_wff = 0;} else {$w_hif_c2p_wff = int(rand(10)) + 100 * $hif_verify;} 
hif_c2p_write is find, weight is if($parallel_mode) {$w_hif_c2p_write = 0;} else {$w_hif_c2p_write = int(rand(10)) + 100 * $hif_verify;}
hif_c2pp2 is find, weight is $w_hif_c2pp2 = int(rand(10)) + 100 * $hif_verify;
hif_c2pw_1qw_8qw is find, weight is $w_hif_c2pw_1qw_8qw = int(rand(30));
hif_capacity is find, weight is $w_hif_capacity = int(rand(10));
hif_cdc is find, weight is $w_hif_cdc = int(rand(10));
hif_cf8_cfc is find, weight is $w_hif_cf8_cfc = $FUNC_TEST ? 0 : int(rand(10));
hif_cf8rw is find, weight is $w_hif_cf8rw = int(rand(10));
hif_eightCore is find, weight is $w_hif_eightCore = int(rand(10));
hif_hit_20entry is find, weight is $w_hif_hit_20entry = int(rand(10));
hif_max32read is find, weight is if($A4B0 | $A0B4 | $parallel_mode) {$w_hif_max32read = 0;} else {$w_hif_max32read = int(rand(10));}
hif_max36write is find, weight is if($A4B0 | $A0B4 | $parallel_mode) {$w_hif_max36write = 0;} else {$w_hif_max36write = int(rand(10));}
hif_mca is find, weight is if($parallel_mode) {$w_hif_mca = 0;} else {$w_hif_mca = int(rand(10));}
hif_p2c_clx_arb is find, weight is $w_hif_p2c_clx_arb = int(rand(10));
hif_p2c_rw is find, weight is $w_hif_p2c_rw = $FUNC_TEST ? 0 : int(rand(30));
hif_p2cq_full is find, weight is $w_hif_p2cq_full = int(rand(10));
hif_pmc is find, weight is $w_hif_pmc = int(rand(10));
hif_raw is find, weight is $w_hif_raw = int(rand(10));
hif_sa_order is find, weight is if($opt_m eq "chx001_a0") { $w_hif_sa_order_final = 0;} else { $w_hif_sa_order_final = int(rand(30)); }
hif_sa_order_1 is find, weight is #$w_hif_sa_order_1 = 0;
hif_sa_order_2 is find, weight is #$w_hif_sa_order_2 = 0;
hif_sa_order_final is find, weight is if($opt_m eq "chx001_a0") { $w_hif_sa_order_final = 0;} else { $w_hif_sa_order_final = int(rand(30)); }
hif_shadow_lock is find, weight is $w_hif_shadow_lock = int(rand(10));
hif_shadowchk is find, weight is if($parallel_mode) {$w_hif_shadowchk = 0;} else {$w_hif_shadowchk = int(rand(10));}
hif_snooptable is find, weight is if($A4B0 | $A0B4) {$w_hif_snooptable = 0;} else {$w_hif_snooptable = int(rand(50));}
hif_special_cycle is find, weight is $w_hif_special_cycle = int(rand(10));
hif_special_operation is find, weight is $w_hif_special_operation = int(rand(10));
hif_svad_special is find, weight is $w_hif_svad_special = int(rand(10));
hotwire is find, weight is $w_hotwire = int(rand(5));
hif_c2p_p2c is find, weight is $w_hif_c2p_p2c = int(rand(10));
intr_self_intr is find, weight is $w_intr_self_intr = $FUNC_TEST ? 0 : int(rand(10));
intr_special is find, weight is $w_intr_special = $FUNC_TEST ? 0 : int(rand(20));
l2_Mob_RDI is find, weight is $w_l2_Mob_RDI = int(rand(30)) + 100 * $l2_verify;
l2_Mob_evict is find, weight is $w_l2_Mob_evict = int(rand(30)) + 100 * $l2_verify;
l2_bussnoop is find, weight is $w_l2_bussnoop = int(rand(20)) + 100 * $l2_verify;
l2_coherence_inside is find, weight is $w_l2_coherence_inside = int(rand(30)) + 100 * $l2_verify;
l2_cover_random is find, weight is $w_l2_cover_random = int(rand(30)) + 100 * $l2_verify;
l2_enhance_case is find, weight is $w_l2_enhance_case = int(rand(15)) + 100 * $l2_verify;
l2_evict is find, weight is $w_l2_evict = int(rand(30)) + 100 * $l2_verify;
l2_forQueryAndReplay is find, weight is $w_l2_forQueryAndReplay = int(rand(30)) + 100 * $l2_verify;
l2_l1i_evict is find, weight is $w_l2_l1i_evict = int(rand(30)) + 100 * $l2_verify;
l2_l1i_load is find, weight is $w_l2_l1i_load = int(rand(30)) + 100 * $l2_verify;
hif_c2p_full is find, weight is $w_hif_c2p_full = int(rand(10));
l2_replay_evict is find, weight is $w_l2_replay_evict = int(rand(20)) + 100 * $l2_verify;
l2_replay_reload is find, weight is $w_l2_replay_reload = int(rand(20)) + 100 * $l2_verify;
l2_special_case is find, weight is $w_l2_special_case = int(rand(30)) + 100 * $l2_verify;
l2_wr is find, weight is $w_l2_wr = int(rand(30)) + 100 * $l2_verify;
msr_l2 is find, weight is $w_msr_l2 = 0; #int(rand(5));
ppu_reg is find, weight is #$w_ppu_reg = int(rand(15));
prefetch_transaction is find, weight is $w_prefetch_transaction = int(rand(10));
pstate is find, weight is $w_pstate = int(rand(2)) + 100 * $long_mode;
pstate_soc1 is find, weight is $w_pstate_soc1 = $DUAL_SOCKET ? int(rand(2)) + 100 * $long_mode : 0;
sys_interrupt is find, weight is $w_sys_interrupt = $FUNC_TEST ? 0 : int(rand(5)) + 100 * $long_mode;
sys_msr is find, weight is $w_sys_msr = int(rand(50)) + 100 * $long_mode;
top_a2d_power is find, weight is $w_top_a2d_power = 0;#FIXME int(rand(5)) + 100 * $long_mode;
top_a2d_temperature is find, weight is $w_top_a2d_temperature = 0;#FIXME int(rand(5)) + 100 * $long_mode;
vpi_c2mRead is find, weight is $w_vpi_c2mRead = $DUAL_SOCKET ? int(rand(15)) : 0;
vpi_c2mWrite is find, weight is $w_vpi_c2mWrite = $DUAL_SOCKET ? int(rand(15)) : 0;
vpi_c2p_read is find, weight is $w_vpi_c2p_read = $DUAL_SOCKET ? int(rand(15)) : 0;
vpi_c2p_write is find, weight is $w_vpi_c2p_write = $DUAL_SOCKET ? int(rand(15)) : 0;
vpi_msr is find, weight is $w_vpi_msr = $DUAL_SOCKET ? int(rand(15)) : 0;
vpi_p2c_rw is find, weight is $w_vpi_p2c_rw = $DUAL_SOCKET ? int(rand(15)) : 0;
vpi_partial_rst_msr is find, weight is $w_vpi_partial_rst_msr = $DUAL_SOCKET ? int(rand(5)) : 0;
hif_lock is find, weight is if($A4B0 | $A0B4) {$w_hif_lock = 0;} else {$w_hif_lock = int(rand(10));} 
hif_p2c_invd is find, weight is $w_hif_p2c_invd = int(rand(10));
hif_sameaddr is find, weight is $w_hif_sameaddr = int(rand(10));
l2_fillq_case is find, weight is $w_l2_fillq_case = int(rand(20)) + 100 * $l2_verify;
l2_prefetch is find, weight is $w_l2_prefetch = int(rand(20)) + 100 * $l2_verify;
l2_wbinvdL1_replay is find, weight is $w_l2_wbinvdL1_replay = int(rand(20)) + 100 * $l2_verify;
l2_wbinvdL1_replay_L1i is find, weight is $w_l2_wbinvdL1_replay_L1i = int(rand(20)) + 100 * $l2_verify;
cstate_soc1 is find, weight is $w_cstate_soc1 = $DUAL_SOCKET ? int(rand(2)) + 100 * $long_mode : 0;
hif_fix_addr is find, weight is $w_hif_fix_addr = int(rand(10));
hif_msr is find, weight is $w_hif_msr = int(rand(30));
hif_RWHitmMax is find, weight is $w_hif_RWHitmMax = int(rand(10));
hif_clflush is find, weight is $w_hif_clflush = int(rand(10));
hif_monitor is find, weight is $w_hif_monitor = int(rand(10));
hif_performance is find, weight is $w_hif_performance = int(rand(10));
hif_svad_special_new is find, weight is $w_hif_svad_special_new = int(rand(10));
l2_matBlocker is find, weight is $w_l2_matBlocker = int(rand(20)) + 100 * $l2_verify;
l2_mob_load_case is find, weight is $w_l2_mob_load_case = int(rand(30)) + 100 * $l2_verify;
l2_mob_load_case is find, weight is $w_l2_mob_load_case = int(rand(30)) + 100 * $l2_verify;